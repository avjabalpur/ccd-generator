namespace Samples.Everest.Phone.Connectors.WcfClient.ClientRegistry
{
	
	
	public class d0fc1f1fcb00947b79206940ee6fac160 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.RepresentedOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "representedOrganization", (MARC.Everest.Interfaces.IGraphable)instance.RepresentedOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"AGNT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "AGNT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "representedOrganization" ) {

			object db1b9febfa2ff4d9c8a44c75c7799f8e1 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization), currentInteractionType, resultContext); instance.RepresentedOrganization = db1b9febfa2ff4d9c8a44c75c7799f8e1 is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization ? db1b9febfa2ff4d9c8a44c75c7799f8e1 as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization)MARC.Everest.Connectors.Util.FromWireFormat(db1b9febfa2ff4d9c8a44c75c7799f8e1, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization));
}
else if(s.LocalName == "realmCode" ) {

			object d8a6a02dee5514777bfbbd1f6d49916f3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d8a6a02dee5514777bfbbd1f6d49916f3 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d8a6a02dee5514777bfbbd1f6d49916f3 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d8a6a02dee5514777bfbbd1f6d49916f3, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d1e93adf2ef0647dea657168fb827351e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d1e93adf2ef0647dea657168fb827351e is MARC.Everest.DataTypes.II ? d1e93adf2ef0647dea657168fb827351e as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d1e93adf2ef0647dea657168fb827351e, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d6fcedf8ad81741bfb6425f42cbe2daf7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d6fcedf8ad81741bfb6425f42cbe2daf7 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d6fcedf8ad81741bfb6425f42cbe2daf7 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d6fcedf8ad81741bfb6425f42cbe2daf7, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class db735604ed42d47848fc3e68f0437bccf : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Location != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "location", (MARC.Everest.Interfaces.IGraphable)instance.Location, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"LOCE".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "LOCE", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "location" ) {

			object d4d97dad08cf24a21b1743f9fda353280 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place), currentInteractionType, resultContext); instance.Location = d4d97dad08cf24a21b1743f9fda353280 is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place ? d4d97dad08cf24a21b1743f9fda353280 as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place)MARC.Everest.Connectors.Util.FromWireFormat(d4d97dad08cf24a21b1743f9fda353280, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place));
}
else if(s.LocalName == "realmCode" ) {

			object dbafdccaef67e44dabf4b933bb6830f07 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dbafdccaef67e44dabf4b933bb6830f07 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dbafdccaef67e44dabf4b933bb6830f07 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dbafdccaef67e44dabf4b933bb6830f07, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d7d632bfc7a084c41bba225f58e9a57ba = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d7d632bfc7a084c41bba225f58e9a57ba is MARC.Everest.DataTypes.II ? d7d632bfc7a084c41bba225f58e9a57ba as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d7d632bfc7a084c41bba225f58e9a57ba, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d3dc340dc5b984285b7855427c4f5a5f9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d3dc340dc5b984285b7855427c4f5a5f9 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d3dc340dc5b984285b7855427c4f5a5f9 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d3dc340dc5b984285b7855427c4f5a5f9, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dc1e6bfbfa533435ca5f34686d8cc0e4d : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.TEL), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Device != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "device", (MARC.Everest.Interfaces.IGraphable)instance.Device, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"RCV".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "RCV", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "telecom" ) {

			object d1cb9670f6659467c9d22233434c53126 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.TEL), currentInteractionType, resultContext); instance.Telecom = d1cb9670f6659467c9d22233434c53126 is MARC.Everest.DataTypes.TEL ? d1cb9670f6659467c9d22233434c53126 as MARC.Everest.DataTypes.TEL : (MARC.Everest.DataTypes.TEL)MARC.Everest.Connectors.Util.FromWireFormat(d1cb9670f6659467c9d22233434c53126, typeof(MARC.Everest.DataTypes.TEL));
}
else if(s.LocalName == "device" ) {

			object d2fb8a743d18740c3bda9b42356e7bcfb = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device), currentInteractionType, resultContext); instance.Device = d2fb8a743d18740c3bda9b42356e7bcfb is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device ? d2fb8a743d18740c3bda9b42356e7bcfb as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device)MARC.Everest.Connectors.Util.FromWireFormat(d2fb8a743d18740c3bda9b42356e7bcfb, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device));
}
else if(s.LocalName == "realmCode" ) {

			object d41e9bbe161c3425081f0ed1c1c62f60a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d41e9bbe161c3425081f0ed1c1c62f60a is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d41e9bbe161c3425081f0ed1c1c62f60a as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d41e9bbe161c3425081f0ed1c1c62f60a, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d3b2e88048dc64e289755b424e451e6d7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d3b2e88048dc64e289755b424e451e6d7 is MARC.Everest.DataTypes.II ? d3b2e88048dc64e289755b424e451e6d7 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d3b2e88048dc64e289755b424e451e6d7, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d38f89137f776470393827f340dfdbacb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d38f89137f776470393827f340dfdbacb is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d38f89137f776470393827f340dfdbacb as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d38f89137f776470393827f340dfdbacb, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Device == null || instance.Device.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Device in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d1f1b38ccba09409bbf2c30bba0bb6edd : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("NotificationParty", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.111";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ContactEntityChoicePlayer != null && !isInstanceNull) {

 if(instance.ContactEntityChoicePlayer.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization)) {

			retVal = Host.WriteElementUtil(s, "contactOrganization", (MARC.Everest.Interfaces.IGraphable)instance.ContactEntityChoicePlayer, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization), context, resultContext);
}
else if(instance.ContactEntityChoicePlayer.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030203UV02.Person)) {

			retVal = Host.WriteElementUtil(s, "contactPerson", (MARC.Everest.Interfaces.IGraphable)instance.ContactEntityChoicePlayer, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030203UV02.Person), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.ContactEntityChoicePlayer.GetType()), s.ToString(), null)); }
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"CON".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "CON", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object de5d2cfae32094b85a02dddf0b7f4e313 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = de5d2cfae32094b85a02dddf0b7f4e313 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? de5d2cfae32094b85a02dddf0b7f4e313 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(de5d2cfae32094b85a02dddf0b7f4e313, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d20bb730dd4e2417295739f9e36ba8cb9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d20bb730dd4e2417295739f9e36ba8cb9 is MARC.Everest.DataTypes.CE<System.String> ? d20bb730dd4e2417295739f9e36ba8cb9 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d20bb730dd4e2417295739f9e36ba8cb9, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "addr" ) {

			object d6c869e51ff8b466ba860ce0397493947 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d6c869e51ff8b466ba860ce0397493947 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d6c869e51ff8b466ba860ce0397493947 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d6c869e51ff8b466ba860ce0397493947, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object d7b75bc8b80bb43869783c74dc17a2e23 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = d7b75bc8b80bb43869783c74dc17a2e23 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? d7b75bc8b80bb43869783c74dc17a2e23 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(d7b75bc8b80bb43869783c74dc17a2e23, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "contactOrganization" ) {

			object d5da53ee23fd24ff2bdcc3d5ce4a32086 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization), currentInteractionType, resultContext); instance.ContactEntityChoicePlayer = d5da53ee23fd24ff2bdcc3d5ce4a32086 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization ? d5da53ee23fd24ff2bdcc3d5ce4a32086 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d5da53ee23fd24ff2bdcc3d5ce4a32086, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization));
}
else if(s.LocalName == "contactPerson" ) {

			object dc46b2684aa1a495383f40ad918e8f9ae = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030203UV02.Person), currentInteractionType, resultContext); instance.ContactEntityChoicePlayer = dc46b2684aa1a495383f40ad918e8f9ae is MARC.Everest.RMIM.UV.NE2008.COCT_MT030203UV02.Person ? dc46b2684aa1a495383f40ad918e8f9ae as MARC.Everest.RMIM.UV.NE2008.COCT_MT030203UV02.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT030203UV02.Person)MARC.Everest.Connectors.Util.FromWireFormat(dc46b2684aa1a495383f40ad918e8f9ae, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030203UV02.Person));
}
else if(s.LocalName == "realmCode" ) {

			object def965aea763f4869806f09d43192bdbc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = def965aea763f4869806f09d43192bdbc is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? def965aea763f4869806f09d43192bdbc as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(def965aea763f4869806f09d43192bdbc, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d6d644887aef4488987392d75620f17d3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d6d644887aef4488987392d75620f17d3 is MARC.Everest.DataTypes.II ? d6d644887aef4488987392d75620f17d3 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d6d644887aef4488987392d75620f17d3, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d077fe360846f4970a36adb8df9fe98f9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d077fe360846f4970a36adb8df9fe98f9 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d077fe360846f4970a36adb8df9fe98f9 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d077fe360846f4970a36adb8df9fe98f9, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class debf21a835dd543618a754f100d2189b6 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PLC".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PLC", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d9404b106edf54807a36a0c057090b736 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d9404b106edf54807a36a0c057090b736 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d9404b106edf54807a36a0c057090b736 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d9404b106edf54807a36a0c057090b736, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "name" ) {

			object dcae9b92b3eee4a10adc1b2a5e1685114 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), currentInteractionType, resultContext); instance.Name = dcae9b92b3eee4a10adc1b2a5e1685114 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> ? dcae9b92b3eee4a10adc1b2a5e1685114 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>)MARC.Everest.Connectors.Util.FromWireFormat(dcae9b92b3eee4a10adc1b2a5e1685114, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>));
}
else if(s.LocalName == "telecom" ) {

			object d0977e1da02ca42a58198932b2109987e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = d0977e1da02ca42a58198932b2109987e is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? d0977e1da02ca42a58198932b2109987e as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(d0977e1da02ca42a58198932b2109987e, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "realmCode" ) {

			object dce90373edb834e03a370f7ce91b620bb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dce90373edb834e03a370f7ce91b620bb is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dce90373edb834e03a370f7ce91b620bb as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dce90373edb834e03a370f7ce91b620bb, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d68de5514673d44f1aa9a5de2d0adf05d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d68de5514673d44f1aa9a5de2d0adf05d is MARC.Everest.DataTypes.II ? d68de5514673d44f1aa9a5de2d0adf05d as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d68de5514673d44f1aa9a5de2d0adf05d, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dcbf20d98a45f48a5ae8bde7bdf0abb2b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dcbf20d98a45f48a5ae8bde7bdf0abb2b is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dcbf20d98a45f48a5ae8bde7bdf0abb2b as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dcbf20d98a45f48a5ae8bde7bdf0abb2b, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Place is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dbc388bcf54454de2a397c651f2255067 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.NotificationParty != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "notificationParty", (MARC.Everest.Interfaces.IGraphable)instance.NotificationParty, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ORG".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ORG", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d9511f2b32aad4876b72d824e47cf907c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d9511f2b32aad4876b72d824e47cf907c is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d9511f2b32aad4876b72d824e47cf907c as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d9511f2b32aad4876b72d824e47cf907c, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "name" ) {

			object d023056ae46d14fcfa3c0c9fe1b87564c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), currentInteractionType, resultContext); instance.Name = d023056ae46d14fcfa3c0c9fe1b87564c is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> ? d023056ae46d14fcfa3c0c9fe1b87564c as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>)MARC.Everest.Connectors.Util.FromWireFormat(d023056ae46d14fcfa3c0c9fe1b87564c, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>));
}
else if(s.LocalName == "telecom" ) {

			object da711eb5fc19740aa80fbdeb026ec728e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = da711eb5fc19740aa80fbdeb026ec728e is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? da711eb5fc19740aa80fbdeb026ec728e as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(da711eb5fc19740aa80fbdeb026ec728e, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "notificationParty" ) {

			object da7d6ee1658524278a4d24b1c31fac9c3 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty), currentInteractionType, resultContext); instance.NotificationParty = da7d6ee1658524278a4d24b1c31fac9c3 is MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty ? da7d6ee1658524278a4d24b1c31fac9c3 as MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty : (MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty)MARC.Everest.Connectors.Util.FromWireFormat(da7d6ee1658524278a4d24b1c31fac9c3, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT040203UV01.NotificationParty));
}
else if(s.LocalName == "realmCode" ) {

			object deb5f424a3f3b416f8e537b74cb8600e4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = deb5f424a3f3b416f8e537b74cb8600e4 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? deb5f424a3f3b416f8e537b74cb8600e4 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(deb5f424a3f3b416f8e537b74cb8600e4, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d90836a1eed714022bc6d20964a968e0e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d90836a1eed714022bc6d20964a968e0e is MARC.Everest.DataTypes.II ? d90836a1eed714022bc6d20964a968e0e as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d90836a1eed714022bc6d20964a968e0e, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dc55a8f0e19fe4ac48cd873348ed7321f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dc55a8f0e19fe4ac48cd873348ed7321f is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dc55a8f0e19fe4ac48cd873348ed7321f as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dc55a8f0e19fe4ac48cd873348ed7321f, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d1837de1331124649ad1b36290576c266 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.KeyWordText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "keyWordText", (MARC.Everest.Interfaces.IGraphable)instance.KeyWordText, typeof(MARC.Everest.DataTypes.SC), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.ANY), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "keyWordText" ) {

			object d154b09d1ce5b4708a668cbe61609e2bb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SC), currentInteractionType, resultContext); instance.KeyWordText = d154b09d1ce5b4708a668cbe61609e2bb is MARC.Everest.DataTypes.SC ? d154b09d1ce5b4708a668cbe61609e2bb as MARC.Everest.DataTypes.SC : (MARC.Everest.DataTypes.SC)MARC.Everest.Connectors.Util.FromWireFormat(d154b09d1ce5b4708a668cbe61609e2bb, typeof(MARC.Everest.DataTypes.SC));
}
else if(s.LocalName == "value" ) {

			object d40fe5a82cee94e66a0d9ae9151f75abf = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ANY), currentInteractionType, resultContext); instance.Value = d40fe5a82cee94e66a0d9ae9151f75abf is MARC.Everest.DataTypes.ANY ? d40fe5a82cee94e66a0d9ae9151f75abf as MARC.Everest.DataTypes.ANY : (MARC.Everest.DataTypes.ANY)MARC.Everest.Connectors.Util.FromWireFormat(d40fe5a82cee94e66a0d9ae9151f75abf, typeof(MARC.Everest.DataTypes.ANY));
}
else if(s.LocalName == "realmCode" ) {

			object d979cdadc0a7f4432b376211a7f8d182d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d979cdadc0a7f4432b376211a7f8d182d is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d979cdadc0a7f4432b376211a7f8d182d as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d979cdadc0a7f4432b376211a7f8d182d, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d3a73f2be074f4312be4ebb4db1e81115 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d3a73f2be074f4312be4ebb4db1e81115 is MARC.Everest.DataTypes.II ? d3a73f2be074f4312be4ebb4db1e81115 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d3a73f2be074f4312be4ebb4db1e81115, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d74b30a3f41bc494d8322bd0ba3645ac1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d74b30a3f41bc494d8322bd0ba3645ac1 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d74b30a3f41bc494d8322bd0ba3645ac1 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d74b30a3f41bc494d8322bd0ba3645ac1, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d509814cf6bde49d4ba958acf69a1cf1a : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 instance = o as MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = true; s.WriteStartElement("PRPA_IN201306UV02", "urn:hl7-org:v3");
			s.WriteAttributeString("ITSVersion","XML_1.0");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CreationTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "creationTime", (MARC.Everest.Interfaces.IGraphable)instance.CreationTime, typeof(MARC.Everest.DataTypes.TS), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SecurityText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "securityText", (MARC.Everest.Interfaces.IGraphable)instance.SecurityText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.VersionCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "versionCode", (MARC.Everest.Interfaces.IGraphable)instance.VersionCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.InteractionId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "interactionId", (MARC.Everest.Interfaces.IGraphable)instance.InteractionId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ProfileId != null && !isInstanceNull) {

if(!instance.ProfileId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "profileId", (MARC.Everest.Interfaces.IGraphable)instance.ProfileId, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ProcessingCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "processingCode", (MARC.Everest.Interfaces.IGraphable)instance.ProcessingCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ProcessingModeCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "processingModeCode", (MARC.Everest.Interfaces.IGraphable)instance.ProcessingModeCode, typeof(MARC.Everest.DataTypes.CS<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AcceptAckCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "acceptAckCode", (MARC.Everest.Interfaces.IGraphable)instance.AcceptAckCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AttachmentText != null && !isInstanceNull) {

if(!instance.AttachmentText.IsEmpty)
			retVal = Host.WriteElementUtil(s, "attachmentText", (MARC.Everest.Interfaces.IGraphable)instance.AttachmentText, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Receiver != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Receiver) { retVal = Host.WriteElementUtil(s, "receiver", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.RespondTo != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.RespondTo) { retVal = Host.WriteElementUtil(s, "respondTo", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Sender != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "sender", (MARC.Everest.Interfaces.IGraphable)instance.Sender, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AttentionLine != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.AttentionLine) { retVal = Host.WriteElementUtil(s, "attentionLine", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Acknowledgement != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Acknowledgement) { retVal = Host.WriteElementUtil(s, "acknowledgement", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.controlActProcess != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "controlActProcess", (MARC.Everest.Interfaces.IGraphable)instance.controlActProcess, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 instance = new MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("ITSVersion") != "XML_1.0") 
			throw new System.InvalidOperationException(System.String.Format("This formatter can only parse XML_1.0 structures. This structure claims to be '{0}'.", s.GetAttribute("ITSVersion")));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d33bba738a2e143adab6f9525fbe690e3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.Id = d33bba738a2e143adab6f9525fbe690e3 is MARC.Everest.DataTypes.II ? d33bba738a2e143adab6f9525fbe690e3 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d33bba738a2e143adab6f9525fbe690e3, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "creationTime" ) {

			object d5fe86060eb16473ab319df3086d907a9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.TS), currentInteractionType, resultContext); instance.CreationTime = d5fe86060eb16473ab319df3086d907a9 is MARC.Everest.DataTypes.TS ? d5fe86060eb16473ab319df3086d907a9 as MARC.Everest.DataTypes.TS : (MARC.Everest.DataTypes.TS)MARC.Everest.Connectors.Util.FromWireFormat(d5fe86060eb16473ab319df3086d907a9, typeof(MARC.Everest.DataTypes.TS));
}
else if(s.LocalName == "securityText" ) {

			object da00e92b1c90241399e94a4fa4fbd71c0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SecurityText = da00e92b1c90241399e94a4fa4fbd71c0 is MARC.Everest.DataTypes.ST ? da00e92b1c90241399e94a4fa4fbd71c0 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(da00e92b1c90241399e94a4fa4fbd71c0, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "versionCode" ) {

			object d6e6695324fa64e00a828898216974cf8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode>), currentInteractionType, resultContext); instance.VersionCode = d6e6695324fa64e00a828898216974cf8 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode> ? d6e6695324fa64e00a828898216974cf8 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode>)MARC.Everest.Connectors.Util.FromWireFormat(d6e6695324fa64e00a828898216974cf8, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode>));
}
else if(s.LocalName == "interactionId" ) {

			object d6e724d536cad477aa7da0cd1df907b32 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.InteractionId = d6e724d536cad477aa7da0cd1df907b32 is MARC.Everest.DataTypes.II ? d6e724d536cad477aa7da0cd1df907b32 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d6e724d536cad477aa7da0cd1df907b32, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "profileId" ) {

			object db0762e73302f479a9df387d655b7d91f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.ProfileId = db0762e73302f479a9df387d655b7d91f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? db0762e73302f479a9df387d655b7d91f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(db0762e73302f479a9df387d655b7d91f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "processingCode" ) {

			object d87cfa8443154460db3b1810cef64699b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID>), currentInteractionType, resultContext); instance.ProcessingCode = d87cfa8443154460db3b1810cef64699b is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID> ? d87cfa8443154460db3b1810cef64699b as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID>)MARC.Everest.Connectors.Util.FromWireFormat(d87cfa8443154460db3b1810cef64699b, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID>));
}
else if(s.LocalName == "processingModeCode" ) {

			object dfab549ae28254ed78dc7d75dd1fc2cbb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<System.String>), currentInteractionType, resultContext); instance.ProcessingModeCode = dfab549ae28254ed78dc7d75dd1fc2cbb is MARC.Everest.DataTypes.CS<System.String> ? dfab549ae28254ed78dc7d75dd1fc2cbb as MARC.Everest.DataTypes.CS<System.String> : (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dfab549ae28254ed78dc7d75dd1fc2cbb, typeof(MARC.Everest.DataTypes.CS<System.String>));
}
else if(s.LocalName == "acceptAckCode" ) {

			object d8683f25a4b6947909bc9d32ba01ef28e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition>), currentInteractionType, resultContext); instance.AcceptAckCode = d8683f25a4b6947909bc9d32ba01ef28e is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition> ? d8683f25a4b6947909bc9d32ba01ef28e as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition>)MARC.Everest.Connectors.Util.FromWireFormat(d8683f25a4b6947909bc9d32ba01ef28e, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition>));
}
else if(s.LocalName == "attachmentText" ) {

			object d39216b3b8f6f4c139d40fe6f6cd5f594 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED>), currentInteractionType, resultContext); instance.AttachmentText = d39216b3b8f6f4c139d40fe6f6cd5f594 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED> ? d39216b3b8f6f4c139d40fe6f6cd5f594 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED>)MARC.Everest.Connectors.Util.FromWireFormat(d39216b3b8f6f4c139d40fe6f6cd5f594, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED>));
}
else if(s.LocalName == "receiver" ) {

			object dddddf1a3e98c4b86b4d4fa30229e003a = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver), currentInteractionType, resultContext); instance.Receiver.Add(dddddf1a3e98c4b86b4d4fa30229e003a is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver ? (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver)dddddf1a3e98c4b86b4d4fa30229e003a : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver)MARC.Everest.Connectors.Util.FromWireFormat(dddddf1a3e98c4b86b4d4fa30229e003a, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver)));
}
else if(s.LocalName == "respondTo" ) {

			object d8465110c0a2d4cfd804940b86dec524c = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo), currentInteractionType, resultContext); instance.RespondTo.Add(d8465110c0a2d4cfd804940b86dec524c is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo ? (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo)d8465110c0a2d4cfd804940b86dec524c : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo)MARC.Everest.Connectors.Util.FromWireFormat(d8465110c0a2d4cfd804940b86dec524c, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo)));
}
else if(s.LocalName == "sender" ) {

			object d8f18aa8fba354e659118abb7036a5732 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender), currentInteractionType, resultContext); instance.Sender = d8f18aa8fba354e659118abb7036a5732 is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender ? d8f18aa8fba354e659118abb7036a5732 as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender)MARC.Everest.Connectors.Util.FromWireFormat(d8f18aa8fba354e659118abb7036a5732, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender));
}
else if(s.LocalName == "attentionLine" ) {

			object d29fa1c5931ad44d9b00d3195e796d761 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine), currentInteractionType, resultContext); instance.AttentionLine.Add(d29fa1c5931ad44d9b00d3195e796d761 is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine ? (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine)d29fa1c5931ad44d9b00d3195e796d761 : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine)MARC.Everest.Connectors.Util.FromWireFormat(d29fa1c5931ad44d9b00d3195e796d761, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine)));
}
else if(s.LocalName == "acknowledgement" ) {

			object d5f9cace634ad4c33b49727c07065ed7f = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement), currentInteractionType, resultContext); instance.Acknowledgement.Add(d5f9cace634ad4c33b49727c07065ed7f is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement ? (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement)d5f9cace634ad4c33b49727c07065ed7f : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement)MARC.Everest.Connectors.Util.FromWireFormat(d5f9cace634ad4c33b49727c07065ed7f, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement)));
}
else if(s.LocalName == "controlActProcess" ) {

			object dcbe7fa7c3e4e47d3a59f11d271dabe42 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>), currentInteractionType, resultContext); instance.controlActProcess = dcbe7fa7c3e4e47d3a59f11d271dabe42 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> ? dcbe7fa7c3e4e47d3a59f11d271dabe42 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>)MARC.Everest.Connectors.Util.FromWireFormat(dcbe7fa7c3e4e47d3a59f11d271dabe42, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>));
}
else if(s.LocalName == "realmCode" ) {

			object db0b7df95efcf45448a94db42c108f2c3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = db0b7df95efcf45448a94db42c108f2c3 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? db0b7df95efcf45448a94db42c108f2c3 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(db0b7df95efcf45448a94db42c108f2c3, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object da6c1ed2275e34086a0051aea548dd1e5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = da6c1ed2275e34086a0051aea548dd1e5 is MARC.Everest.DataTypes.II ? da6c1ed2275e34086a0051aea548dd1e5 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(da6c1ed2275e34086a0051aea548dd1e5, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dbd054636d4fc4019af8a63e7bb7cba7e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dbd054636d4fc4019af8a63e7bb7cba7e is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dbd054636d4fc4019af8a63e7bb7cba7e as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dbd054636d4fc4019af8a63e7bb7cba7e, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 instance = o as MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.CreationTime == null || instance.CreationTime.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property CreationTime in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.InteractionId == null || instance.InteractionId.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property InteractionId in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.ProcessingCode == null || instance.ProcessingCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ProcessingCode in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.ProcessingModeCode == null || instance.ProcessingModeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ProcessingModeCode in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.AcceptAckCode == null || instance.AcceptAckCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property AcceptAckCode in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Receiver != null && (instance.Receiver.Count > 2147483647 ||  instance.Receiver.Count < 1)) { isValid &= false; details.Add(new MARC.Everest.Connectors.InsufficientRepetionsResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Receiver in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 does not have enough elements in the list, need between 1 and 2147483647 elements!", location));  } 
if(instance.Sender == null || instance.Sender.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Sender in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.controlActProcess == null || instance.controlActProcess.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property controlActProcess in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d4fa3b3aab20741bd84c9d24007a47529 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.TEL), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EntityRsp != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.EntityRsp) { retVal = Host.WriteElementUtil(s, "entityRsp", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"RSP".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "RSP", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "telecom" ) {

			object dcdf12e021cfd4223871ac03c3a7cc078 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.TEL), currentInteractionType, resultContext); instance.Telecom = dcdf12e021cfd4223871ac03c3a7cc078 is MARC.Everest.DataTypes.TEL ? dcdf12e021cfd4223871ac03c3a7cc078 as MARC.Everest.DataTypes.TEL : (MARC.Everest.DataTypes.TEL)MARC.Everest.Connectors.Util.FromWireFormat(dcdf12e021cfd4223871ac03c3a7cc078, typeof(MARC.Everest.DataTypes.TEL));
}
else if(s.LocalName == "entityRsp" ) {

			object d1fe7f71f85fc43f8bdd885d221f48cdf = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp), currentInteractionType, resultContext); instance.EntityRsp.Add(d1fe7f71f85fc43f8bdd885d221f48cdf is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp ? (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp)d1fe7f71f85fc43f8bdd885d221f48cdf : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp)MARC.Everest.Connectors.Util.FromWireFormat(d1fe7f71f85fc43f8bdd885d221f48cdf, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp)));
}
else if(s.LocalName == "realmCode" ) {

			object dee2b8c1f8472437f954a703c430556c6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dee2b8c1f8472437f954a703c430556c6 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dee2b8c1f8472437f954a703c430556c6 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dee2b8c1f8472437f954a703c430556c6, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dc8ea53ab500b4251a1551bc4855bb968 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dc8ea53ab500b4251a1551bc4855bb968 is MARC.Everest.DataTypes.II ? dc8ea53ab500b4251a1551bc4855bb968 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dc8ea53ab500b4251a1551bc4855bb968, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object db9a93d72c85246fcb9702792b84478a8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = db9a93d72c85246fcb9702792b84478a8 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? db9a93d72c85246fcb9702792b84478a8 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(db9a93d72c85246fcb9702792b84478a8, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.EntityRsp != null && (instance.EntityRsp.Count > 2147483647 ||  instance.EntityRsp.Count < 1)) { isValid &= false; details.Add(new MARC.Everest.Connectors.InsufficientRepetionsResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property EntityRsp in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo does not have enough elements in the list, need between 1 and 2147483647 elements!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dc3dde6231e9a4cbb923041656b67b925 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.TEL), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Device != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "device", (MARC.Everest.Interfaces.IGraphable)instance.Device, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SND".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SND", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "telecom" ) {

			object dde7eba4c41ea47cb9ded4eb9e159b76c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.TEL), currentInteractionType, resultContext); instance.Telecom = dde7eba4c41ea47cb9ded4eb9e159b76c is MARC.Everest.DataTypes.TEL ? dde7eba4c41ea47cb9ded4eb9e159b76c as MARC.Everest.DataTypes.TEL : (MARC.Everest.DataTypes.TEL)MARC.Everest.Connectors.Util.FromWireFormat(dde7eba4c41ea47cb9ded4eb9e159b76c, typeof(MARC.Everest.DataTypes.TEL));
}
else if(s.LocalName == "device" ) {

			object d6053d6c5b141491ca2c82f92945fda2f = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device), currentInteractionType, resultContext); instance.Device = d6053d6c5b141491ca2c82f92945fda2f is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device ? d6053d6c5b141491ca2c82f92945fda2f as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device)MARC.Everest.Connectors.Util.FromWireFormat(d6053d6c5b141491ca2c82f92945fda2f, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device));
}
else if(s.LocalName == "realmCode" ) {

			object dc98d9090b2fd4744991838c22035ef36 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dc98d9090b2fd4744991838c22035ef36 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dc98d9090b2fd4744991838c22035ef36 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dc98d9090b2fd4744991838c22035ef36, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object ddf3cc88ee1ea42549957d8186bb052b1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = ddf3cc88ee1ea42549957d8186bb052b1 is MARC.Everest.DataTypes.II ? ddf3cc88ee1ea42549957d8186bb052b1 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(ddf3cc88ee1ea42549957d8186bb052b1, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d2ef772b22e8b4422b8009c3e4dba166d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d2ef772b22e8b4422b8009c3e4dba166d is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d2ef772b22e8b4422b8009c3e4dba166d as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d2ef772b22e8b4422b8009c3e4dba166d, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Device == null || instance.Device.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Device in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d4aa290339b614f0eab4384ed67f2ed49 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d4c6f019ceb6543fa80ca239bd2f5a49c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.Id = d4c6f019ceb6543fa80ca239bd2f5a49c is MARC.Everest.DataTypes.II ? d4c6f019ceb6543fa80ca239bd2f5a49c as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d4c6f019ceb6543fa80ca239bd2f5a49c, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "realmCode" ) {

			object d65f3701496fe453fa4453519843e4032 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d65f3701496fe453fa4453519843e4032 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d65f3701496fe453fa4453519843e4032 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d65f3701496fe453fa4453519843e4032, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object de3d522e01e3a4094a64432a5c916e038 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = de3d522e01e3a4094a64432a5c916e038 is MARC.Everest.DataTypes.II ? de3d522e01e3a4094a64432a5c916e038 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(de3d522e01e3a4094a64432a5c916e038, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d50d7a503faa94f74bf76516873b60a5e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d50d7a503faa94f74bf76516873b60a5e is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d50d7a503faa94f74bf76516873b60a5e as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d50d7a503faa94f74bf76516873b60a5e, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dcf0c0bfbdc054abda4774ab1b0d95d13 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Desc != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "desc", (MARC.Everest.Interfaces.IGraphable)instance.Desc, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ExistenceTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "existenceTime", (MARC.Everest.Interfaces.IGraphable)instance.ExistenceTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ManufacturerModelName != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "manufacturerModelName", (MARC.Everest.Interfaces.IGraphable)instance.ManufacturerModelName, typeof(MARC.Everest.DataTypes.SC), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SoftwareName != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "softwareName", (MARC.Everest.Interfaces.IGraphable)instance.SoftwareName, typeof(MARC.Everest.DataTypes.SC), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AsAgent != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "asAgent", (MARC.Everest.Interfaces.IGraphable)instance.AsAgent, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AsLocatedEntity != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.AsLocatedEntity) { retVal = Host.WriteElementUtil(s, "asLocatedEntity", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"DEV".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "DEV", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dc977117da0d44023a98aacd1c7b5b6ee = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dc977117da0d44023a98aacd1c7b5b6ee is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dc977117da0d44023a98aacd1c7b5b6ee as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dc977117da0d44023a98aacd1c7b5b6ee, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "name" ) {

			object d842945025005444db038c7afe3736512 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), currentInteractionType, resultContext); instance.Name = d842945025005444db038c7afe3736512 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> ? d842945025005444db038c7afe3736512 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>)MARC.Everest.Connectors.Util.FromWireFormat(d842945025005444db038c7afe3736512, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>));
}
else if(s.LocalName == "desc" ) {

			object d59bfb9803aeb4b77aea27be3fc4494f8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.Desc = d59bfb9803aeb4b77aea27be3fc4494f8 is MARC.Everest.DataTypes.ED ? d59bfb9803aeb4b77aea27be3fc4494f8 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d59bfb9803aeb4b77aea27be3fc4494f8, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "existenceTime" ) {

			object dbad000b1164c49de8441a78666cb038b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.ExistenceTime = dbad000b1164c49de8441a78666cb038b is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? dbad000b1164c49de8441a78666cb038b as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(dbad000b1164c49de8441a78666cb038b, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "telecom" ) {

			object d08dda5b175bb4059bba9dd5eae647086 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = d08dda5b175bb4059bba9dd5eae647086 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? d08dda5b175bb4059bba9dd5eae647086 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(d08dda5b175bb4059bba9dd5eae647086, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "manufacturerModelName" ) {

			object d91402235344d4a7ab86d764a03511d3a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SC), currentInteractionType, resultContext); instance.ManufacturerModelName = d91402235344d4a7ab86d764a03511d3a is MARC.Everest.DataTypes.SC ? d91402235344d4a7ab86d764a03511d3a as MARC.Everest.DataTypes.SC : (MARC.Everest.DataTypes.SC)MARC.Everest.Connectors.Util.FromWireFormat(d91402235344d4a7ab86d764a03511d3a, typeof(MARC.Everest.DataTypes.SC));
}
else if(s.LocalName == "softwareName" ) {

			object daafb404a8fc342b7988b539d2fbe8a55 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SC), currentInteractionType, resultContext); instance.SoftwareName = daafb404a8fc342b7988b539d2fbe8a55 is MARC.Everest.DataTypes.SC ? daafb404a8fc342b7988b539d2fbe8a55 as MARC.Everest.DataTypes.SC : (MARC.Everest.DataTypes.SC)MARC.Everest.Connectors.Util.FromWireFormat(daafb404a8fc342b7988b539d2fbe8a55, typeof(MARC.Everest.DataTypes.SC));
}
else if(s.LocalName == "asAgent" ) {

			object d5b1023a622184eb58bedc59dbc5f62ce = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent), currentInteractionType, resultContext); instance.AsAgent = d5b1023a622184eb58bedc59dbc5f62ce is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent ? d5b1023a622184eb58bedc59dbc5f62ce as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent)MARC.Everest.Connectors.Util.FromWireFormat(d5b1023a622184eb58bedc59dbc5f62ce, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Agent));
}
else if(s.LocalName == "asLocatedEntity" ) {

			object d1a95c5351e494ff592830dc4b5f4c1c3 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity), currentInteractionType, resultContext); instance.AsLocatedEntity.Add(d1a95c5351e494ff592830dc4b5f4c1c3 is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity ? (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity)d1a95c5351e494ff592830dc4b5f4c1c3 : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity)MARC.Everest.Connectors.Util.FromWireFormat(d1a95c5351e494ff592830dc4b5f4c1c3, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.LocatedEntity)));
}
else if(s.LocalName == "realmCode" ) {

			object de1ba7a0ead904eafb11585053eedb2ce = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = de1ba7a0ead904eafb11585053eedb2ce is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? de1ba7a0ead904eafb11585053eedb2ce as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(de1ba7a0ead904eafb11585053eedb2ce, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d9c9ca31e80204474acdda52b0d28a762 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d9c9ca31e80204474acdda52b0d28a762 is MARC.Everest.DataTypes.II ? d9c9ca31e80204474acdda52b0d28a762 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d9c9ca31e80204474acdda52b0d28a762, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d13b8adfabbba416995eed48d257a2f2f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d13b8adfabbba416995eed48d257a2f2f is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d13b8adfabbba416995eed48d257a2f2f as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d13b8adfabbba416995eed48d257a2f2f, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Device is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d15db3ea3eff34d12839ac0115bd706ad : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.ANY(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.ANY), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object dbc2ec08f2f91462f925b00d5043a0b45 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ANY), currentInteractionType, resultContext); instance.Value = dbc2ec08f2f91462f925b00d5043a0b45 is MARC.Everest.DataTypes.ANY ? dbc2ec08f2f91462f925b00d5043a0b45 as MARC.Everest.DataTypes.ANY : (MARC.Everest.DataTypes.ANY)MARC.Everest.Connectors.Util.FromWireFormat(dbc2ec08f2f91462f925b00d5043a0b45, typeof(MARC.Everest.DataTypes.ANY));
}
else if(s.LocalName == "semanticsText" ) {

			object d09145beda6b642a1b5aade3b26271e55 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d09145beda6b642a1b5aade3b26271e55 is MARC.Everest.DataTypes.ST ? d09145beda6b642a1b5aade3b26271e55 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d09145beda6b642a1b5aade3b26271e55, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d278fdc76e7124f62905bdb6e5a9665c1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d278fdc76e7124f62905bdb6e5a9665c1 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d278fdc76e7124f62905bdb6e5a9665c1 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d278fdc76e7124f62905bdb6e5a9665c1, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d0d6538d5db7b4971ae032ffe8f2624bf = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d0d6538d5db7b4971ae032ffe8f2624bf is MARC.Everest.DataTypes.II ? d0d6538d5db7b4971ae032ffe8f2624bf as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d0d6538d5db7b4971ae032ffe8f2624bf, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d5bb6cb8f09cf4885bc71184f748a9425 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d5bb6cb8f09cf4885bc71184f748a9425 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d5bb6cb8f09cf4885bc71184f748a9425 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d5bb6cb8f09cf4885bc71184f748a9425, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d6a3f215484ba436389ce1cc58f9aa7ef : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeCode", (MARC.Everest.Interfaces.IGraphable)instance.TypeCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementType>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.MessageWaitingNumber != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "messageWaitingNumber", (MARC.Everest.Interfaces.IGraphable)instance.MessageWaitingNumber, typeof(MARC.Everest.DataTypes.INT), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.MessageWaitingPriorityCode != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.MessageWaitingPriorityCode.CodeSystem) && instance.MessageWaitingPriorityCode.NullFlavor == null) instance.MessageWaitingPriorityCode.CodeSystem = "2.16.840.1.113883.5.1083";
			retVal = Host.WriteElementUtil(s, "messageWaitingPriorityCode", (MARC.Everest.Interfaces.IGraphable)instance.MessageWaitingPriorityCode, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.MessageWaitingPriority>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TargetMessage != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "targetMessage", (MARC.Everest.Interfaces.IGraphable)instance.TargetMessage, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AcknowledgementDetail != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.AcknowledgementDetail) { retVal = Host.WriteElementUtil(s, "acknowledgementDetail", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "typeCode" ) {

			object d0242b10793fe490cbd3a476fe923940c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementType>), currentInteractionType, resultContext); instance.TypeCode = d0242b10793fe490cbd3a476fe923940c is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementType> ? d0242b10793fe490cbd3a476fe923940c as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementType> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementType>)MARC.Everest.Connectors.Util.FromWireFormat(d0242b10793fe490cbd3a476fe923940c, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementType>));
}
else if(s.LocalName == "messageWaitingNumber" ) {

			object df83780848eac4098bdade6439cdfb0a6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.INT), currentInteractionType, resultContext); instance.MessageWaitingNumber = df83780848eac4098bdade6439cdfb0a6 is MARC.Everest.DataTypes.INT ? df83780848eac4098bdade6439cdfb0a6 as MARC.Everest.DataTypes.INT : (MARC.Everest.DataTypes.INT)MARC.Everest.Connectors.Util.FromWireFormat(df83780848eac4098bdade6439cdfb0a6, typeof(MARC.Everest.DataTypes.INT));
}
else if(s.LocalName == "messageWaitingPriorityCode" ) {

			object d7462560c26fa4e0abf8c502c61459743 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.MessageWaitingPriority>), currentInteractionType, resultContext); instance.MessageWaitingPriorityCode = d7462560c26fa4e0abf8c502c61459743 is MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.MessageWaitingPriority> ? d7462560c26fa4e0abf8c502c61459743 as MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.MessageWaitingPriority> : (MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.MessageWaitingPriority>)MARC.Everest.Connectors.Util.FromWireFormat(d7462560c26fa4e0abf8c502c61459743, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.MessageWaitingPriority>));
}
else if(s.LocalName == "targetMessage" ) {

			object dc3eeb186bfc14ca1bdecf8e88fec5cb7 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage), currentInteractionType, resultContext); instance.TargetMessage = dc3eeb186bfc14ca1bdecf8e88fec5cb7 is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage ? dc3eeb186bfc14ca1bdecf8e88fec5cb7 as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage)MARC.Everest.Connectors.Util.FromWireFormat(dc3eeb186bfc14ca1bdecf8e88fec5cb7, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.TargetMessage));
}
else if(s.LocalName == "acknowledgementDetail" ) {

			object d0d461cb6d9724bfd85c6308781102f34 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail), currentInteractionType, resultContext); instance.AcknowledgementDetail.Add(d0d461cb6d9724bfd85c6308781102f34 is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail ? (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail)d0d461cb6d9724bfd85c6308781102f34 : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail)MARC.Everest.Connectors.Util.FromWireFormat(d0d461cb6d9724bfd85c6308781102f34, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail)));
}
else if(s.LocalName == "realmCode" ) {

			object db84b4b7895634b30ad3595b039072d99 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = db84b4b7895634b30ad3595b039072d99 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? db84b4b7895634b30ad3595b039072d99 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(db84b4b7895634b30ad3595b039072d99, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d6997ea99eb7f4dbd8e10635a79f1c8f3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d6997ea99eb7f4dbd8e10635a79f1c8f3 is MARC.Everest.DataTypes.II ? d6997ea99eb7f4dbd8e10635a79f1c8f3 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d6997ea99eb7f4dbd8e10635a79f1c8f3, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dcea9642bf91843c7abea537a0664006f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dcea9642bf91843c7abea537a0664006f is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dcea9642bf91843c7abea537a0664006f as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dcea9642bf91843c7abea537a0664006f, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100300UV01.Acknowledgement is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dafa30d2f9c3f4030b0527d1e8f0f2815 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Text != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "text", (MARC.Everest.Interfaces.IGraphable)instance.Text, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Location != null && !isInstanceNull) {

if(!instance.Location.IsEmpty)
			retVal = Host.WriteElementUtil(s, "location", (MARC.Everest.Interfaces.IGraphable)instance.Location, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ST>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("typeCode") != null) instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementDetailType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementDetailType>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "code" ) {

			object da26de80c0bc442cb9d51ba0e1e173ad0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = da26de80c0bc442cb9d51ba0e1e173ad0 is MARC.Everest.DataTypes.CE<System.String> ? da26de80c0bc442cb9d51ba0e1e173ad0 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(da26de80c0bc442cb9d51ba0e1e173ad0, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "text" ) {

			object d0c9d848083df41a09ebb2089f1125854 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.Text = d0c9d848083df41a09ebb2089f1125854 is MARC.Everest.DataTypes.ED ? d0c9d848083df41a09ebb2089f1125854 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d0c9d848083df41a09ebb2089f1125854, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "location" ) {

			object d818b8a39139a4d289adc8e5e9944b86c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ST>), currentInteractionType, resultContext); instance.Location = d818b8a39139a4d289adc8e5e9944b86c is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ST> ? d818b8a39139a4d289adc8e5e9944b86c as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ST> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ST>)MARC.Everest.Connectors.Util.FromWireFormat(d818b8a39139a4d289adc8e5e9944b86c, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ST>));
}
else if(s.LocalName == "realmCode" ) {

			object d281d3b51724743bdbdf14019dea28f03 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d281d3b51724743bdbdf14019dea28f03 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d281d3b51724743bdbdf14019dea28f03 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d281d3b51724743bdbdf14019dea28f03, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d4bc38526cc264466ba180445b77df58d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d4bc38526cc264466ba180445b77df58d is MARC.Everest.DataTypes.II ? d4bc38526cc264466ba180445b77df58d as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d4bc38526cc264466ba180445b77df58d, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d4756522c46f741c88978b8b250dfc6ae = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d4756522c46f741c88978b8b250dfc6ae is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d4756522c46f741c88978b8b250dfc6ae as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4756522c46f741c88978b8b250dfc6ae, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AcknowledgementDetail'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d12261cf2481841d6a4bfe86663eeb19d : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.MatchAlgorithm != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "matchAlgorithm", (MARC.Everest.Interfaces.IGraphable)instance.MatchAlgorithm, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.MatchWeight != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "matchWeight", (MARC.Everest.Interfaces.IGraphable)instance.MatchWeight, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.MinimumDegreeMatch != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "minimumDegreeMatch", (MARC.Everest.Interfaces.IGraphable)instance.MinimumDegreeMatch, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d40c49059b2ef4cada48a7c3e51ca8a87 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.Id = d40c49059b2ef4cada48a7c3e51ca8a87 is MARC.Everest.DataTypes.II ? d40c49059b2ef4cada48a7c3e51ca8a87 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d40c49059b2ef4cada48a7c3e51ca8a87, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "matchAlgorithm" ) {

			object dc46c914b3cd24664be0010bdca94a01a = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm), currentInteractionType, resultContext); instance.MatchAlgorithm = dc46c914b3cd24664be0010bdca94a01a is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm ? dc46c914b3cd24664be0010bdca94a01a as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm)MARC.Everest.Connectors.Util.FromWireFormat(dc46c914b3cd24664be0010bdca94a01a, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchAlgorithm));
}
else if(s.LocalName == "matchWeight" ) {

			object d0e743b4e1c3a4cbd83e93769081f5bfd = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight), currentInteractionType, resultContext); instance.MatchWeight = d0e743b4e1c3a4cbd83e93769081f5bfd is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight ? d0e743b4e1c3a4cbd83e93769081f5bfd as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight)MARC.Everest.Connectors.Util.FromWireFormat(d0e743b4e1c3a4cbd83e93769081f5bfd, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight));
}
else if(s.LocalName == "minimumDegreeMatch" ) {

			object dab45426fad214592982c1aaaf5dd6e99 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch), currentInteractionType, resultContext); instance.MinimumDegreeMatch = dab45426fad214592982c1aaaf5dd6e99 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch ? dab45426fad214592982c1aaaf5dd6e99 as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch)MARC.Everest.Connectors.Util.FromWireFormat(dab45426fad214592982c1aaaf5dd6e99, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch));
}
else if(s.LocalName == "realmCode" ) {

			object d41f27d0764d245dcb44e6c5d6f44ce89 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d41f27d0764d245dcb44e6c5d6f44ce89 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d41f27d0764d245dcb44e6c5d6f44ce89 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d41f27d0764d245dcb44e6c5d6f44ce89, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d2c7464b4720e4947b7eaac43e2ab6e7e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d2c7464b4720e4947b7eaac43e2ab6e7e is MARC.Everest.DataTypes.II ? d2c7464b4720e4947b7eaac43e2ab6e7e as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d2c7464b4720e4947b7eaac43e2ab6e7e, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object de699734592d0448f81e9553cc2d04189 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = de699734592d0448f81e9553cc2d04189 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? de699734592d0448f81e9553cc2d04189 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(de699734592d0448f81e9553cc2d04189, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d1c36906a1d514002bbf1d7d5295f3bd8 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.ANY(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.ANY), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object dfa1ea5f78cb944c592a22067adbd0fed = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ANY), currentInteractionType, resultContext); instance.Value = dfa1ea5f78cb944c592a22067adbd0fed is MARC.Everest.DataTypes.ANY ? dfa1ea5f78cb944c592a22067adbd0fed as MARC.Everest.DataTypes.ANY : (MARC.Everest.DataTypes.ANY)MARC.Everest.Connectors.Util.FromWireFormat(dfa1ea5f78cb944c592a22067adbd0fed, typeof(MARC.Everest.DataTypes.ANY));
}
else if(s.LocalName == "semanticsText" ) {

			object de6ec819c0d694e34903089e562d4862f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = de6ec819c0d694e34903089e562d4862f is MARC.Everest.DataTypes.ST ? de6ec819c0d694e34903089e562d4862f as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(de6ec819c0d694e34903089e562d4862f, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object dc18fd72203e54506bb54f8f3e0180d55 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dc18fd72203e54506bb54f8f3e0180d55 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dc18fd72203e54506bb54f8f3e0180d55 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dc18fd72203e54506bb54f8f3e0180d55, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d59719bf1f5f1460c923d3996c8515e8e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d59719bf1f5f1460c923d3996c8515e8e is MARC.Everest.DataTypes.II ? d59719bf1f5f1460c923d3996c8515e8e as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d59719bf1f5f1460c923d3996c8515e8e, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d2b0bf1f9303d4caa9ff7e25a12c93e1a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d2b0bf1f9303d4caa9ff7e25a12c93e1a is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d2b0bf1f9303d4caa9ff7e25a12c93e1a as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d2b0bf1f9303d4caa9ff7e25a12c93e1a, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchWeight is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class deb9a2f82073444d7bb7f91faf3df3135 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.ANY(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.ANY), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object d37c30a007a86418a9fa538a7272efa48 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ANY), currentInteractionType, resultContext); instance.Value = d37c30a007a86418a9fa538a7272efa48 is MARC.Everest.DataTypes.ANY ? d37c30a007a86418a9fa538a7272efa48 as MARC.Everest.DataTypes.ANY : (MARC.Everest.DataTypes.ANY)MARC.Everest.Connectors.Util.FromWireFormat(d37c30a007a86418a9fa538a7272efa48, typeof(MARC.Everest.DataTypes.ANY));
}
else if(s.LocalName == "semanticsText" ) {

			object d98fac457a4094be0b6fec2c7c33d5ff2 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d98fac457a4094be0b6fec2c7c33d5ff2 is MARC.Everest.DataTypes.ST ? d98fac457a4094be0b6fec2c7c33d5ff2 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d98fac457a4094be0b6fec2c7c33d5ff2, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d38a6edef3b32445a8d7bb6c6dc6c2f65 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d38a6edef3b32445a8d7bb6c6dc6c2f65 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d38a6edef3b32445a8d7bb6c6dc6c2f65 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d38a6edef3b32445a8d7bb6c6dc6c2f65, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d18f7367744cd4522b36ed1cfbbeab8ee = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d18f7367744cd4522b36ed1cfbbeab8ee is MARC.Everest.DataTypes.II ? d18f7367744cd4522b36ed1cfbbeab8ee as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d18f7367744cd4522b36ed1cfbbeab8ee, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d54a2729482134099bb569e525e840616 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d54a2729482134099bb569e525e840616 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d54a2729482134099bb569e525e840616 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d54a2729482134099bb569e525e840616, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MinimumDegreeMatch is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dbaee3d5f218e498d98a50bf1abb6bea6 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object d82248aecebca4013a6bd47a2b858f53f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Value = d82248aecebca4013a6bd47a2b858f53f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD> ? d82248aecebca4013a6bd47a2b858f53f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d82248aecebca4013a6bd47a2b858f53f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "semanticsText" ) {

			object d486432839e4a443a9bde4e1f8a049f8c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d486432839e4a443a9bde4e1f8a049f8c is MARC.Everest.DataTypes.ST ? d486432839e4a443a9bde4e1f8a049f8c as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d486432839e4a443a9bde4e1f8a049f8c, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d0ace9fa704024bdc944de8a543ac76c3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d0ace9fa704024bdc944de8a543ac76c3 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d0ace9fa704024bdc944de8a543ac76c3 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d0ace9fa704024bdc944de8a543ac76c3, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d9a1b4c41b2de466d829d97cb101bd838 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d9a1b4c41b2de466d829d97cb101bd838 is MARC.Everest.DataTypes.II ? d9a1b4c41b2de466d829d97cb101bd838 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d9a1b4c41b2de466d829d97cb101bd838, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d4759829c541b498894542de64d7d5c7b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d4759829c541b498894542de64d7d5c7b is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d4759829c541b498894542de64d7d5c7b as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4759829c541b498894542de64d7d5c7b, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d44e4949c2fb347bfabe0c389fe931944 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AdministrativeGender>>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AdministrativeGender>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object daf61a31f9fa042e09b91a8288327f3b0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AdministrativeGender>>), currentInteractionType, resultContext); instance.Value = daf61a31f9fa042e09b91a8288327f3b0 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AdministrativeGender>> ? daf61a31f9fa042e09b91a8288327f3b0 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AdministrativeGender>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AdministrativeGender>>)MARC.Everest.Connectors.Util.FromWireFormat(daf61a31f9fa042e09b91a8288327f3b0, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AdministrativeGender>>));
}
else if(s.LocalName == "semanticsText" ) {

			object d61d6dd01dcaf4d1c894aed2f3fcb662b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d61d6dd01dcaf4d1c894aed2f3fcb662b is MARC.Everest.DataTypes.ST ? d61d6dd01dcaf4d1c894aed2f3fcb662b as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d61d6dd01dcaf4d1c894aed2f3fcb662b, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object dd5511443de9e4491b8656bea95f627ca = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dd5511443de9e4491b8656bea95f627ca is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dd5511443de9e4491b8656bea95f627ca as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dd5511443de9e4491b8656bea95f627ca, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d521670112482417b82dc195274d131ab = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d521670112482417b82dc195274d131ab is MARC.Everest.DataTypes.II ? d521670112482417b82dc195274d131ab as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d521670112482417b82dc195274d131ab, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d6c9f0b42113a4caeb326cd700aba6fae = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d6c9f0b42113a4caeb326cd700aba6fae is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d6c9f0b42113a4caeb326cd700aba6fae as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d6c9f0b42113a4caeb326cd700aba6fae, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d7b6b15e4eaf24ed98c9201dfb843ad7b : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("QueryByParameter", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.QueryId == null && Host.CreateRequiredElements) { instance.QueryId = new MARC.Everest.DataTypes.II(); instance.QueryId.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.QueryId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "queryId", (MARC.Everest.Interfaces.IGraphable)instance.QueryId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ModifyCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "modifyCode", (MARC.Everest.Interfaces.IGraphable)instance.ModifyCode, typeof(MARC.Everest.DataTypes.CS<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ResponseElementGroupId != null && !isInstanceNull) {

if(!instance.ResponseElementGroupId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "responseElementGroupId", (MARC.Everest.Interfaces.IGraphable)instance.ResponseElementGroupId, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ResponseModalityCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "responseModalityCode", (MARC.Everest.Interfaces.IGraphable)instance.ResponseModalityCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ResponseModality>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ResponsePriorityCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "responsePriorityCode", (MARC.Everest.Interfaces.IGraphable)instance.ResponsePriorityCode, typeof(MARC.Everest.DataTypes.CS<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.InitialQuantity != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "initialQuantity", (MARC.Everest.Interfaces.IGraphable)instance.InitialQuantity, typeof(MARC.Everest.DataTypes.INT), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.InitialQuantityCode != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.InitialQuantityCode.CodeSystem) && instance.InitialQuantityCode.NullFlavor == null) instance.InitialQuantityCode.CodeSystem = "2.16.840.1.113883.5.1112";
			retVal = Host.WriteElementUtil(s, "initialQuantityCode", (MARC.Everest.Interfaces.IGraphable)instance.InitialQuantityCode, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryRequestLimit>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ExecutionAndDeliveryTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "executionAndDeliveryTime", (MARC.Everest.Interfaces.IGraphable)instance.ExecutionAndDeliveryTime, typeof(MARC.Everest.DataTypes.TS), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.MatchCriterionList != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "matchCriterionList", (MARC.Everest.Interfaces.IGraphable)instance.MatchCriterionList, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ParameterList != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "parameterList", (MARC.Everest.Interfaces.IGraphable)instance.ParameterList, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SortControl != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.SortControl) { retVal = Host.WriteElementUtil(s, "sortControl", ig, typeof(MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "queryId" ) {

			object d17b9319257764911aa3caa9640f386be = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.QueryId = d17b9319257764911aa3caa9640f386be is MARC.Everest.DataTypes.II ? d17b9319257764911aa3caa9640f386be as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d17b9319257764911aa3caa9640f386be, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "statusCode" ) {

			object dffbb246308e14366b549cce23a7de049 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<System.String>), currentInteractionType, resultContext); instance.StatusCode = dffbb246308e14366b549cce23a7de049 is MARC.Everest.DataTypes.CS<System.String> ? dffbb246308e14366b549cce23a7de049 as MARC.Everest.DataTypes.CS<System.String> : (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dffbb246308e14366b549cce23a7de049, typeof(MARC.Everest.DataTypes.CS<System.String>));
}
else if(s.LocalName == "modifyCode" ) {

			object decc75187d3014ee8bb5955d7b690d453 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<System.String>), currentInteractionType, resultContext); instance.ModifyCode = decc75187d3014ee8bb5955d7b690d453 is MARC.Everest.DataTypes.CS<System.String> ? decc75187d3014ee8bb5955d7b690d453 as MARC.Everest.DataTypes.CS<System.String> : (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(decc75187d3014ee8bb5955d7b690d453, typeof(MARC.Everest.DataTypes.CS<System.String>));
}
else if(s.LocalName == "responseElementGroupId" ) {

			object d928aaa2a5ae9431dbbfd7ec19b607169 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.ResponseElementGroupId = d928aaa2a5ae9431dbbfd7ec19b607169 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d928aaa2a5ae9431dbbfd7ec19b607169 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d928aaa2a5ae9431dbbfd7ec19b607169, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "responseModalityCode" ) {

			object d05ad525858f6458fb406f83a6e59965f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ResponseModality>), currentInteractionType, resultContext); instance.ResponseModalityCode = d05ad525858f6458fb406f83a6e59965f is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ResponseModality> ? d05ad525858f6458fb406f83a6e59965f as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ResponseModality> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ResponseModality>)MARC.Everest.Connectors.Util.FromWireFormat(d05ad525858f6458fb406f83a6e59965f, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ResponseModality>));
}
else if(s.LocalName == "responsePriorityCode" ) {

			object de46986b1e49e4213bc1f4444ccb72502 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<System.String>), currentInteractionType, resultContext); instance.ResponsePriorityCode = de46986b1e49e4213bc1f4444ccb72502 is MARC.Everest.DataTypes.CS<System.String> ? de46986b1e49e4213bc1f4444ccb72502 as MARC.Everest.DataTypes.CS<System.String> : (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(de46986b1e49e4213bc1f4444ccb72502, typeof(MARC.Everest.DataTypes.CS<System.String>));
}
else if(s.LocalName == "initialQuantity" ) {

			object d768bcd37e0ad46e5843dc8d17259baff = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.INT), currentInteractionType, resultContext); instance.InitialQuantity = d768bcd37e0ad46e5843dc8d17259baff is MARC.Everest.DataTypes.INT ? d768bcd37e0ad46e5843dc8d17259baff as MARC.Everest.DataTypes.INT : (MARC.Everest.DataTypes.INT)MARC.Everest.Connectors.Util.FromWireFormat(d768bcd37e0ad46e5843dc8d17259baff, typeof(MARC.Everest.DataTypes.INT));
}
else if(s.LocalName == "initialQuantityCode" ) {

			object d3506914522254e83b134b1c5ef5fc7fc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryRequestLimit>), currentInteractionType, resultContext); instance.InitialQuantityCode = d3506914522254e83b134b1c5ef5fc7fc is MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryRequestLimit> ? d3506914522254e83b134b1c5ef5fc7fc as MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryRequestLimit> : (MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryRequestLimit>)MARC.Everest.Connectors.Util.FromWireFormat(d3506914522254e83b134b1c5ef5fc7fc, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryRequestLimit>));
}
else if(s.LocalName == "executionAndDeliveryTime" ) {

			object d89c5cba04de947608f64267729db3ab0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.TS), currentInteractionType, resultContext); instance.ExecutionAndDeliveryTime = d89c5cba04de947608f64267729db3ab0 is MARC.Everest.DataTypes.TS ? d89c5cba04de947608f64267729db3ab0 as MARC.Everest.DataTypes.TS : (MARC.Everest.DataTypes.TS)MARC.Everest.Connectors.Util.FromWireFormat(d89c5cba04de947608f64267729db3ab0, typeof(MARC.Everest.DataTypes.TS));
}
else if(s.LocalName == "matchCriterionList" ) {

			object d4ac6879ca5f546e18ab4fb7b5b94c862 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList), currentInteractionType, resultContext); instance.MatchCriterionList = d4ac6879ca5f546e18ab4fb7b5b94c862 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList ? d4ac6879ca5f546e18ab4fb7b5b94c862 as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList)MARC.Everest.Connectors.Util.FromWireFormat(d4ac6879ca5f546e18ab4fb7b5b94c862, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MatchCriterionList));
}
else if(s.LocalName == "parameterList" ) {

			object d6af7bed32b7c43cd956faa17cf68b887 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList), currentInteractionType, resultContext); instance.ParameterList = d6af7bed32b7c43cd956faa17cf68b887 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList ? d6af7bed32b7c43cd956faa17cf68b887 as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList)MARC.Everest.Connectors.Util.FromWireFormat(d6af7bed32b7c43cd956faa17cf68b887, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList));
}
else if(s.LocalName == "sortControl" ) {

			object d6a648710c1294baaa2950659b8bb1cfc = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl), currentInteractionType, resultContext); instance.SortControl.Add(d6a648710c1294baaa2950659b8bb1cfc is MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl ? (MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl)d6a648710c1294baaa2950659b8bb1cfc : (MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl)MARC.Everest.Connectors.Util.FromWireFormat(d6a648710c1294baaa2950659b8bb1cfc, typeof(MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl)));
}
else if(s.LocalName == "realmCode" ) {

			object d4cebde6997e64c7991fabb72bbe1d046 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d4cebde6997e64c7991fabb72bbe1d046 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d4cebde6997e64c7991fabb72bbe1d046 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d4cebde6997e64c7991fabb72bbe1d046, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dfd1e3ec976484ed3b6abe70f98ed1a3a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dfd1e3ec976484ed3b6abe70f98ed1a3a is MARC.Everest.DataTypes.II ? dfd1e3ec976484ed3b6abe70f98ed1a3a as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dfd1e3ec976484ed3b6abe70f98ed1a3a, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dd2cfce8b2f5a4bc19ba0447346315041 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dd2cfce8b2f5a4bc19ba0447346315041 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dd2cfce8b2f5a4bc19ba0447346315041 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dd2cfce8b2f5a4bc19ba0447346315041, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.QueryId == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property QueryId in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.StatusCode == null || instance.StatusCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property StatusCode in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.ParameterList == null || instance.ParameterList.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ParameterList in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d5e602efd6ab843f1993297ff1dd9af61 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object dc237af4980d04858b47d917e8c25c6f8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>>), currentInteractionType, resultContext); instance.Value = dc237af4980d04858b47d917e8c25c6f8 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>> ? dc237af4980d04858b47d917e8c25c6f8 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>>)MARC.Everest.Connectors.Util.FromWireFormat(dc237af4980d04858b47d917e8c25c6f8, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>>));
}
else if(s.LocalName == "semanticsText" ) {

			object d51863d39dd3c4b1a935cffea36069688 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d51863d39dd3c4b1a935cffea36069688 is MARC.Everest.DataTypes.ST ? d51863d39dd3c4b1a935cffea36069688 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d51863d39dd3c4b1a935cffea36069688, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object db348753091b54e9caf32b7f3d0d6b98e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = db348753091b54e9caf32b7f3d0d6b98e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? db348753091b54e9caf32b7f3d0d6b98e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(db348753091b54e9caf32b7f3d0d6b98e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object df1473720258e4c15b0b864b6d80b12d4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = df1473720258e4c15b0b864b6d80b12d4 is MARC.Everest.DataTypes.II ? df1473720258e4c15b0b864b6d80b12d4 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(df1473720258e4c15b0b864b6d80b12d4, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dcbf54ed2c8414c52b367dc11b75dc31b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dcbf54ed2c8414c52b367dc11b75dc31b is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dcbf54ed2c8414c52b367dc11b75dc31b as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dcbf54ed2c8414c52b367dc11b75dc31b, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9eb3eaf0943948f9bc6dfb86582d029e : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object db3ddfd85ff7b419a98bc55d0e983e680 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>>), currentInteractionType, resultContext); instance.Value = db3ddfd85ff7b419a98bc55d0e983e680 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>> ? db3ddfd85ff7b419a98bc55d0e983e680 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>>)MARC.Everest.Connectors.Util.FromWireFormat(db3ddfd85ff7b419a98bc55d0e983e680, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>>));
}
else if(s.LocalName == "semanticsText" ) {

			object d1009ea14380c43ef80c5826bcefeed7b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d1009ea14380c43ef80c5826bcefeed7b is MARC.Everest.DataTypes.ST ? d1009ea14380c43ef80c5826bcefeed7b as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d1009ea14380c43ef80c5826bcefeed7b, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d14bfa96cc2c84b47b6756f41a21c942f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d14bfa96cc2c84b47b6756f41a21c942f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d14bfa96cc2c84b47b6756f41a21c942f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d14bfa96cc2c84b47b6756f41a21c942f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d827bf46d7df44f039e53ce54a058c701 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d827bf46d7df44f039e53ce54a058c701 is MARC.Everest.DataTypes.II ? d827bf46d7df44f039e53ce54a058c701 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d827bf46d7df44f039e53ce54a058c701, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object df78a3fe91e794de09b4cb5b4e625d398 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = df78a3fe91e794de09b4cb5b4e625d398 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? df78a3fe91e794de09b4cb5b4e625d398 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(df78a3fe91e794de09b4cb5b4e625d398, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d12a21b2ebb344423807bc5036b0a7648 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp instance = new MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ENT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ENT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d6526f06f22e74d9485894a6f0af27146 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d6526f06f22e74d9485894a6f0af27146 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d6526f06f22e74d9485894a6f0af27146 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d6526f06f22e74d9485894a6f0af27146, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "name" ) {

			object deb8d875be35742d0bede326e0cc19ba0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), currentInteractionType, resultContext); instance.Name = deb8d875be35742d0bede326e0cc19ba0 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> ? deb8d875be35742d0bede326e0cc19ba0 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>)MARC.Everest.Connectors.Util.FromWireFormat(deb8d875be35742d0bede326e0cc19ba0, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>));
}
else if(s.LocalName == "telecom" ) {

			object d0f5514e2304f407ca4995aa7660f9935 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = d0f5514e2304f407ca4995aa7660f9935 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? d0f5514e2304f407ca4995aa7660f9935 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(d0f5514e2304f407ca4995aa7660f9935, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "realmCode" ) {

			object dde72db89888f43e6884942e3fffd3121 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dde72db89888f43e6884942e3fffd3121 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dde72db89888f43e6884942e3fffd3121 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dde72db89888f43e6884942e3fffd3121, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dda61234dcb1247e0b73e78c0b13a30b8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dda61234dcb1247e0b73e78c0b13a30b8 is MARC.Everest.DataTypes.II ? dda61234dcb1247e0b73e78c0b13a30b8 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dda61234dcb1247e0b73e78c0b13a30b8, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d174f1e0d4c814dd8b1bcef65eb257e7f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d174f1e0d4c814dd8b1bcef65eb257e7f is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d174f1e0d4c814dd8b1bcef65eb257e7f as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d174f1e0d4c814dd8b1bcef65eb257e7f, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp instance = o as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.EntityRsp is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d567a9354b7704045be8962ff890fb6f7 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object dcf85c487a15d423abb408b76d6d3751f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Value = dcf85c487a15d423abb408b76d6d3751f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dcf85c487a15d423abb408b76d6d3751f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dcf85c487a15d423abb408b76d6d3751f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "semanticsText" ) {

			object d457aef02b2294c048c95d176173a4721 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d457aef02b2294c048c95d176173a4721 is MARC.Everest.DataTypes.ST ? d457aef02b2294c048c95d176173a4721 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d457aef02b2294c048c95d176173a4721, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d0e51d1b19ab64f308ebe2b948ab82c18 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d0e51d1b19ab64f308ebe2b948ab82c18 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d0e51d1b19ab64f308ebe2b948ab82c18 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d0e51d1b19ab64f308ebe2b948ab82c18, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d5b461a95c9c74c96a5c9c82fcd33cabd = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d5b461a95c9c74c96a5c9c82fcd33cabd is MARC.Everest.DataTypes.II ? d5b461a95c9c74c96a5c9c82fcd33cabd as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d5b461a95c9c74c96a5c9c82fcd33cabd, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d179f7b780c7e4d5ca268c79d91abb7a8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d179f7b780c7e4d5ca268c79d91abb7a8 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d179f7b780c7e4d5ca268c79d91abb7a8 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d179f7b780c7e4d5ca268c79d91abb7a8, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d8af044dfbd504ae9a33270a3b03abed6 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.PN>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.PN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object ddcf352491ef44f99ba9888570e2c7161 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.PN>), currentInteractionType, resultContext); instance.Value = ddcf352491ef44f99ba9888570e2c7161 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.PN> ? ddcf352491ef44f99ba9888570e2c7161 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.PN> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.PN>)MARC.Everest.Connectors.Util.FromWireFormat(ddcf352491ef44f99ba9888570e2c7161, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.PN>));
}
else if(s.LocalName == "semanticsText" ) {

			object dd6351f21f8f34f8d92bcaa16b798dc44 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = dd6351f21f8f34f8d92bcaa16b798dc44 is MARC.Everest.DataTypes.ST ? dd6351f21f8f34f8d92bcaa16b798dc44 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(dd6351f21f8f34f8d92bcaa16b798dc44, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d02a9d0e806004cfdac0dfd30f8e4fc60 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d02a9d0e806004cfdac0dfd30f8e4fc60 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d02a9d0e806004cfdac0dfd30f8e4fc60 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d02a9d0e806004cfdac0dfd30f8e4fc60, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dee0a3e15f91840ddaf0aa4cf9a477ba0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dee0a3e15f91840ddaf0aa4cf9a477ba0 is MARC.Everest.DataTypes.II ? dee0a3e15f91840ddaf0aa4cf9a477ba0 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dee0a3e15f91840ddaf0aa4cf9a477ba0, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dbadf0417aab64dc6ab7c09869844188c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dbadf0417aab64dc6ab7c09869844188c is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dbadf0417aab64dc6ab7c09869844188c as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dbadf0417aab64dc6ab7c09869844188c, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d004b44b5810a42ffbaca889e4fdc39a2 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object d7b27baa810cc4d6c8803da18c6cad19f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Value = d7b27baa810cc4d6c8803da18c6cad19f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d7b27baa810cc4d6c8803da18c6cad19f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d7b27baa810cc4d6c8803da18c6cad19f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "semanticsText" ) {

			object da4d8bd775abe4cdcab10b009ffe257f3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = da4d8bd775abe4cdcab10b009ffe257f3 is MARC.Everest.DataTypes.ST ? da4d8bd775abe4cdcab10b009ffe257f3 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(da4d8bd775abe4cdcab10b009ffe257f3, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d1c4e9b6f6c7a453ca716783b4e24f31f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d1c4e9b6f6c7a453ca716783b4e24f31f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d1c4e9b6f6c7a453ca716783b4e24f31f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d1c4e9b6f6c7a453ca716783b4e24f31f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d7f4963ced893479c8f1b07dc574591d3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d7f4963ced893479c8f1b07dc574591d3 is MARC.Everest.DataTypes.II ? d7f4963ced893479c8f1b07dc574591d3 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d7f4963ced893479c8f1b07dc574591d3, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d23c1e3a770554a5e94fa336e631d0b9f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d23c1e3a770554a5e94fa336e631d0b9f is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d23c1e3a770554a5e94fa336e631d0b9f as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d23c1e3a770554a5e94fa336e631d0b9f, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class db30414d49cdd4c4fb509f27c17e89a1f : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object de118993f7122413186d32348ca87e410 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Value = de118993f7122413186d32348ca87e410 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD> ? de118993f7122413186d32348ca87e410 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(de118993f7122413186d32348ca87e410, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "semanticsText" ) {

			object d72d2d467d5f84e8e8c38309679807999 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d72d2d467d5f84e8e8c38309679807999 is MARC.Everest.DataTypes.ST ? d72d2d467d5f84e8e8c38309679807999 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d72d2d467d5f84e8e8c38309679807999, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d05747b7e66c74940a952d780dbab3b51 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d05747b7e66c74940a952d780dbab3b51 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d05747b7e66c74940a952d780dbab3b51 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d05747b7e66c74940a952d780dbab3b51, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object db5078e64489548d0b6972b8a744d72e9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = db5078e64489548d0b6972b8a744d72e9 is MARC.Everest.DataTypes.II ? db5078e64489548d0b6972b8a744d72e9 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(db5078e64489548d0b6972b8a744d72e9, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d7466686fca944fdfb6f74288e80c24cf = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d7466686fca944fdfb6f74288e80c24cf is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d7466686fca944fdfb6f74288e80c24cf as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d7466686fca944fdfb6f74288e80c24cf, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class deb7a1237356b4f1493346721193a671b : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LivingSubjectAdministrativeGender != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.LivingSubjectAdministrativeGender) { retVal = Host.WriteElementUtil(s, "livingSubjectAdministrativeGender", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LivingSubjectBirthPlaceAddress != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.LivingSubjectBirthPlaceAddress) { retVal = Host.WriteElementUtil(s, "livingSubjectBirthPlaceAddress", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LivingSubjectBirthPlaceName != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.LivingSubjectBirthPlaceName) { retVal = Host.WriteElementUtil(s, "livingSubjectBirthPlaceName", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LivingSubjectBirthTime != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.LivingSubjectBirthTime) { retVal = Host.WriteElementUtil(s, "livingSubjectBirthTime", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LivingSubjectDeceasedTime != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.LivingSubjectDeceasedTime) { retVal = Host.WriteElementUtil(s, "livingSubjectDeceasedTime", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LivingSubjectId != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.LivingSubjectId) { retVal = Host.WriteElementUtil(s, "livingSubjectId", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LivingSubjectName != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.LivingSubjectName) { retVal = Host.WriteElementUtil(s, "livingSubjectName", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.MothersMaidenName != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.MothersMaidenName) { retVal = Host.WriteElementUtil(s, "mothersMaidenName", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.OtherIDsScopingOrganization != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.OtherIDsScopingOrganization) { retVal = Host.WriteElementUtil(s, "otherIDsScopingOrganization", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PatientAddress != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.PatientAddress) { retVal = Host.WriteElementUtil(s, "patientAddress", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PatientStatusCode != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.PatientStatusCode) { retVal = Host.WriteElementUtil(s, "patientStatusCode", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PatientTelecom != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.PatientTelecom) { retVal = Host.WriteElementUtil(s, "patientTelecom", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PrincipalCareProviderId != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.PrincipalCareProviderId) { retVal = Host.WriteElementUtil(s, "principalCareProviderId", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PrincipalCareProvisionId != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.PrincipalCareProvisionId) { retVal = Host.WriteElementUtil(s, "principalCareProvisionId", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object de374b0a311a541928ee39c2fc31afdb9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.Id = de374b0a311a541928ee39c2fc31afdb9 is MARC.Everest.DataTypes.II ? de374b0a311a541928ee39c2fc31afdb9 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(de374b0a311a541928ee39c2fc31afdb9, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "livingSubjectAdministrativeGender" ) {

			object d03bda2eb2d6342748266294f5a9b4d2a = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender), currentInteractionType, resultContext); instance.LivingSubjectAdministrativeGender.Add(d03bda2eb2d6342748266294f5a9b4d2a is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender)d03bda2eb2d6342748266294f5a9b4d2a : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender)MARC.Everest.Connectors.Util.FromWireFormat(d03bda2eb2d6342748266294f5a9b4d2a, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectAdministrativeGender)));
}
else if(s.LocalName == "livingSubjectBirthPlaceAddress" ) {

			object d18878540755f4ea7a5b7b278ffa50675 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress), currentInteractionType, resultContext); instance.LivingSubjectBirthPlaceAddress.Add(d18878540755f4ea7a5b7b278ffa50675 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress)d18878540755f4ea7a5b7b278ffa50675 : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress)MARC.Everest.Connectors.Util.FromWireFormat(d18878540755f4ea7a5b7b278ffa50675, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceAddress)));
}
else if(s.LocalName == "livingSubjectBirthPlaceName" ) {

			object d4a86f84661cb48829606948f5a680bc9 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName), currentInteractionType, resultContext); instance.LivingSubjectBirthPlaceName.Add(d4a86f84661cb48829606948f5a680bc9 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName)d4a86f84661cb48829606948f5a680bc9 : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName)MARC.Everest.Connectors.Util.FromWireFormat(d4a86f84661cb48829606948f5a680bc9, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName)));
}
else if(s.LocalName == "livingSubjectBirthTime" ) {

			object da961da843b394e61b5cd0995cc2c74f5 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime), currentInteractionType, resultContext); instance.LivingSubjectBirthTime.Add(da961da843b394e61b5cd0995cc2c74f5 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime)da961da843b394e61b5cd0995cc2c74f5 : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime)MARC.Everest.Connectors.Util.FromWireFormat(da961da843b394e61b5cd0995cc2c74f5, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthTime)));
}
else if(s.LocalName == "livingSubjectDeceasedTime" ) {

			object debc3d46e575b45f5af19f20c81ea71a1 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime), currentInteractionType, resultContext); instance.LivingSubjectDeceasedTime.Add(debc3d46e575b45f5af19f20c81ea71a1 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime)debc3d46e575b45f5af19f20c81ea71a1 : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime)MARC.Everest.Connectors.Util.FromWireFormat(debc3d46e575b45f5af19f20c81ea71a1, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectDeceasedTime)));
}
else if(s.LocalName == "livingSubjectId" ) {

			object d290e69bece22460c828c2c9540a11ed9 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId), currentInteractionType, resultContext); instance.LivingSubjectId.Add(d290e69bece22460c828c2c9540a11ed9 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId)d290e69bece22460c828c2c9540a11ed9 : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId)MARC.Everest.Connectors.Util.FromWireFormat(d290e69bece22460c828c2c9540a11ed9, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectId)));
}
else if(s.LocalName == "livingSubjectName" ) {

			object d45ea9979c2db46afaa2c3846e19c6d61 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName), currentInteractionType, resultContext); instance.LivingSubjectName.Add(d45ea9979c2db46afaa2c3846e19c6d61 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName)d45ea9979c2db46afaa2c3846e19c6d61 : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName)MARC.Everest.Connectors.Util.FromWireFormat(d45ea9979c2db46afaa2c3846e19c6d61, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName)));
}
else if(s.LocalName == "mothersMaidenName" ) {

			object ddb7d9ebca5704f05af30f167c547751e = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName), currentInteractionType, resultContext); instance.MothersMaidenName.Add(ddb7d9ebca5704f05af30f167c547751e is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName)ddb7d9ebca5704f05af30f167c547751e : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName)MARC.Everest.Connectors.Util.FromWireFormat(ddb7d9ebca5704f05af30f167c547751e, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.MothersMaidenName)));
}
else if(s.LocalName == "otherIDsScopingOrganization" ) {

			object d868c9b03020e46339a06b215f38cbe00 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization), currentInteractionType, resultContext); instance.OtherIDsScopingOrganization.Add(d868c9b03020e46339a06b215f38cbe00 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization)d868c9b03020e46339a06b215f38cbe00 : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization)MARC.Everest.Connectors.Util.FromWireFormat(d868c9b03020e46339a06b215f38cbe00, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.OtherIDsScopingOrganization)));
}
else if(s.LocalName == "patientAddress" ) {

			object d3cf725a13db94a84863c19248181bcdb = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress), currentInteractionType, resultContext); instance.PatientAddress.Add(d3cf725a13db94a84863c19248181bcdb is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress)d3cf725a13db94a84863c19248181bcdb : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress)MARC.Everest.Connectors.Util.FromWireFormat(d3cf725a13db94a84863c19248181bcdb, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientAddress)));
}
else if(s.LocalName == "patientStatusCode" ) {

			object d912e829600964e19a94d94bb41bb3c5a = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode), currentInteractionType, resultContext); instance.PatientStatusCode.Add(d912e829600964e19a94d94bb41bb3c5a is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode)d912e829600964e19a94d94bb41bb3c5a : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode)MARC.Everest.Connectors.Util.FromWireFormat(d912e829600964e19a94d94bb41bb3c5a, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode)));
}
else if(s.LocalName == "patientTelecom" ) {

			object d66b9606cb82d4a18844d73bc5dd9024d = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom), currentInteractionType, resultContext); instance.PatientTelecom.Add(d66b9606cb82d4a18844d73bc5dd9024d is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom)d66b9606cb82d4a18844d73bc5dd9024d : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom)MARC.Everest.Connectors.Util.FromWireFormat(d66b9606cb82d4a18844d73bc5dd9024d, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom)));
}
else if(s.LocalName == "principalCareProviderId" ) {

			object d3df3a5439e9d4f82b6f6ef8c4e7b17c6 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId), currentInteractionType, resultContext); instance.PrincipalCareProviderId.Add(d3df3a5439e9d4f82b6f6ef8c4e7b17c6 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId)d3df3a5439e9d4f82b6f6ef8c4e7b17c6 : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId)MARC.Everest.Connectors.Util.FromWireFormat(d3df3a5439e9d4f82b6f6ef8c4e7b17c6, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId)));
}
else if(s.LocalName == "principalCareProvisionId" ) {

			object d0a1916c9c45541a8bfbc644bf26db118 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId), currentInteractionType, resultContext); instance.PrincipalCareProvisionId.Add(d0a1916c9c45541a8bfbc644bf26db118 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId)d0a1916c9c45541a8bfbc644bf26db118 : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId)MARC.Everest.Connectors.Util.FromWireFormat(d0a1916c9c45541a8bfbc644bf26db118, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId)));
}
else if(s.LocalName == "realmCode" ) {

			object d92f73e4d18f94b758c9ec71c8c599183 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d92f73e4d18f94b758c9ec71c8c599183 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d92f73e4d18f94b758c9ec71c8c599183 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d92f73e4d18f94b758c9ec71c8c599183, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d86019848757249069a0e32afaf7a2f46 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d86019848757249069a0e32afaf7a2f46 is MARC.Everest.DataTypes.II ? d86019848757249069a0e32afaf7a2f46 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d86019848757249069a0e32afaf7a2f46, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object da390c55ce8424792a3131d3b9d6e1a38 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = da390c55ce8424792a3131d3b9d6e1a38 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? da390c55ce8424792a3131d3b9d6e1a38 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(da390c55ce8424792a3131d3b9d6e1a38, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.ParameterList'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class db2beeb2fa690436594dd6d4f031d3af9 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object d8818d375eccd423dad423d160c13955a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN>), currentInteractionType, resultContext); instance.Value = d8818d375eccd423dad423d160c13955a is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN> ? d8818d375eccd423dad423d160c13955a as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN>)MARC.Everest.Connectors.Util.FromWireFormat(d8818d375eccd423dad423d160c13955a, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN>));
}
else if(s.LocalName == "semanticsText" ) {

			object d9f0aadeb70794325b14553861c3460c8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d9f0aadeb70794325b14553861c3460c8 is MARC.Everest.DataTypes.ST ? d9f0aadeb70794325b14553861c3460c8 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d9f0aadeb70794325b14553861c3460c8, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object ddef1db7c538a4b5080956f9cb9bc8f37 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = ddef1db7c538a4b5080956f9cb9bc8f37 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? ddef1db7c538a4b5080956f9cb9bc8f37 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(ddef1db7c538a4b5080956f9cb9bc8f37, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d738ae1aa10de454c8a69963e40fe7795 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d738ae1aa10de454c8a69963e40fe7795 is MARC.Everest.DataTypes.II ? d738ae1aa10de454c8a69963e40fe7795 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d738ae1aa10de454c8a69963e40fe7795, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dca70b0492cb346bba0cb523d14f25f66 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dca70b0492cb346bba0cb523d14f25f66 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dca70b0492cb346bba0cb523d14f25f66 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dca70b0492cb346bba0cb523d14f25f66, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectName is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da402ffd941734554886b17bf6149531a : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.CV<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Value.CodeSystem) && instance.Value.NullFlavor == null) instance.Value.CodeSystem = "2.16.840.1.113883.5.1068";
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.CV<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object dd0bb565a1baf4b62b85707eefaaaf7a8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CV<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>), currentInteractionType, resultContext); instance.Value = dd0bb565a1baf4b62b85707eefaaaf7a8 is MARC.Everest.DataTypes.CV<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus> ? dd0bb565a1baf4b62b85707eefaaaf7a8 as MARC.Everest.DataTypes.CV<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus> : (MARC.Everest.DataTypes.CV<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>)MARC.Everest.Connectors.Util.FromWireFormat(dd0bb565a1baf4b62b85707eefaaaf7a8, typeof(MARC.Everest.DataTypes.CV<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>));
}
else if(s.LocalName == "semanticsText" ) {

			object d5a113b6b5960479888c7f5cf20b7905b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d5a113b6b5960479888c7f5cf20b7905b is MARC.Everest.DataTypes.ST ? d5a113b6b5960479888c7f5cf20b7905b as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d5a113b6b5960479888c7f5cf20b7905b, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object dc441a5557e50404183cf5463837de655 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dc441a5557e50404183cf5463837de655 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dc441a5557e50404183cf5463837de655 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dc441a5557e50404183cf5463837de655, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d4a5bf8b5351349cfbadb986b517ef00b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d4a5bf8b5351349cfbadb986b517ef00b is MARC.Everest.DataTypes.II ? d4a5bf8b5351349cfbadb986b517ef00b as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d4a5bf8b5351349cfbadb986b517ef00b, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d4e18c7d37d654e02b409077ec19c4d17 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d4e18c7d37d654e02b409077ec19c4d17 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d4e18c7d37d654e02b409077ec19c4d17 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4e18c7d37d654e02b409077ec19c4d17, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientStatusCode is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d3238235c2449461891cd409bfd6e2e8d : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.TEL>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object d106002cb8f7241c89bacc68bf3992eab = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Value = d106002cb8f7241c89bacc68bf3992eab is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.TEL> ? d106002cb8f7241c89bacc68bf3992eab as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(d106002cb8f7241c89bacc68bf3992eab, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "semanticsText" ) {

			object d0b66e18c38be4b1ebcc3e3e29e85b82e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d0b66e18c38be4b1ebcc3e3e29e85b82e is MARC.Everest.DataTypes.ST ? d0b66e18c38be4b1ebcc3e3e29e85b82e as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d0b66e18c38be4b1ebcc3e3e29e85b82e, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d0144b286a18447b68043ca7664852629 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d0144b286a18447b68043ca7664852629 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d0144b286a18447b68043ca7664852629 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d0144b286a18447b68043ca7664852629, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d098b230d47ac443fa257e2cf2e492803 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d098b230d47ac443fa257e2cf2e492803 is MARC.Everest.DataTypes.II ? d098b230d47ac443fa257e2cf2e492803 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d098b230d47ac443fa257e2cf2e492803, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d6a621b146d634ba39cfd9474bb1a7628 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d6a621b146d634ba39cfd9474bb1a7628 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d6a621b146d634ba39cfd9474bb1a7628 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d6a621b146d634ba39cfd9474bb1a7628, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PatientTelecom is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dfc12c733da2f48c49332b6f4046515b2 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object d2d7b533b88e14e90932c35a5097f6801 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Value = d2d7b533b88e14e90932c35a5097f6801 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d2d7b533b88e14e90932c35a5097f6801 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d2d7b533b88e14e90932c35a5097f6801, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "semanticsText" ) {

			object de87c3b78ada84349b2ae6e4c37fd1d19 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = de87c3b78ada84349b2ae6e4c37fd1d19 is MARC.Everest.DataTypes.ST ? de87c3b78ada84349b2ae6e4c37fd1d19 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(de87c3b78ada84349b2ae6e4c37fd1d19, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d480b48f7ca5a4db48883f20be8dfd492 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d480b48f7ca5a4db48883f20be8dfd492 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d480b48f7ca5a4db48883f20be8dfd492 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d480b48f7ca5a4db48883f20be8dfd492, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d8e6c5640b01d4c6fabe5ea2bb641acc8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d8e6c5640b01d4c6fabe5ea2bb641acc8 is MARC.Everest.DataTypes.II ? d8e6c5640b01d4c6fabe5ea2bb641acc8 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d8e6c5640b01d4c6fabe5ea2bb641acc8, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dfd53a7db8d6f4de38e0b2cc92c135b1e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dfd53a7db8d6f4de38e0b2cc92c135b1e is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dfd53a7db8d6f4de38e0b2cc92c135b1e as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dfd53a7db8d6f4de38e0b2cc92c135b1e, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProviderId is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d79bc727a2364447c8da061e3121af936 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object d32946e6980b14f1f811834bd305ee357 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Value = d32946e6980b14f1f811834bd305ee357 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d32946e6980b14f1f811834bd305ee357 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d32946e6980b14f1f811834bd305ee357, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "semanticsText" ) {

			object d18bc0dbad2814c5c82db19a64a32a403 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d18bc0dbad2814c5c82db19a64a32a403 is MARC.Everest.DataTypes.ST ? d18bc0dbad2814c5c82db19a64a32a403 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d18bc0dbad2814c5c82db19a64a32a403, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d486a68945264443e892d1a8e23f4339c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d486a68945264443e892d1a8e23f4339c is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d486a68945264443e892d1a8e23f4339c as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d486a68945264443e892d1a8e23f4339c, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d61d43997d1f748cfb3b565976082222f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d61d43997d1f748cfb3b565976082222f is MARC.Everest.DataTypes.II ? d61d43997d1f748cfb3b565976082222f as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d61d43997d1f748cfb3b565976082222f, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dbdc6d68a22c1414ab5db03e6ae0a500c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dbdc6d68a22c1414ab5db03e6ae0a500c is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dbdc6d68a22c1414ab5db03e6ae0a500c as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dbdc6d68a22c1414ab5db03e6ae0a500c, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.PrincipalCareProvisionId is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d02652c72e3bf4f37915ebba042497d59 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl instance = o as MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SequenceNumber != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "sequenceNumber", (MARC.Everest.Interfaces.IGraphable)instance.SequenceNumber, typeof(MARC.Everest.DataTypes.INT), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ElementName != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "elementName", (MARC.Everest.Interfaces.IGraphable)instance.ElementName, typeof(MARC.Everest.DataTypes.SC), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.DirectionCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "directionCode", (MARC.Everest.Interfaces.IGraphable)instance.DirectionCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.Sequencing>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl instance = new MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "sequenceNumber" ) {

			object d6cd63730ba5949f0aea5c69e925e40a8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.INT), currentInteractionType, resultContext); instance.SequenceNumber = d6cd63730ba5949f0aea5c69e925e40a8 is MARC.Everest.DataTypes.INT ? d6cd63730ba5949f0aea5c69e925e40a8 as MARC.Everest.DataTypes.INT : (MARC.Everest.DataTypes.INT)MARC.Everest.Connectors.Util.FromWireFormat(d6cd63730ba5949f0aea5c69e925e40a8, typeof(MARC.Everest.DataTypes.INT));
}
else if(s.LocalName == "elementName" ) {

			object d488fc76fdf9149279ac1683c19f1c9e5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SC), currentInteractionType, resultContext); instance.ElementName = d488fc76fdf9149279ac1683c19f1c9e5 is MARC.Everest.DataTypes.SC ? d488fc76fdf9149279ac1683c19f1c9e5 as MARC.Everest.DataTypes.SC : (MARC.Everest.DataTypes.SC)MARC.Everest.Connectors.Util.FromWireFormat(d488fc76fdf9149279ac1683c19f1c9e5, typeof(MARC.Everest.DataTypes.SC));
}
else if(s.LocalName == "directionCode" ) {

			object d78f3dae6f69a41bdb8caad96a1d58f69 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.Sequencing>), currentInteractionType, resultContext); instance.DirectionCode = d78f3dae6f69a41bdb8caad96a1d58f69 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.Sequencing> ? d78f3dae6f69a41bdb8caad96a1d58f69 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.Sequencing> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.Sequencing>)MARC.Everest.Connectors.Util.FromWireFormat(d78f3dae6f69a41bdb8caad96a1d58f69, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.Sequencing>));
}
else if(s.LocalName == "realmCode" ) {

			object d7df0d2a584d44ac4993ceff40e677dd7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d7df0d2a584d44ac4993ceff40e677dd7 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d7df0d2a584d44ac4993ceff40e677dd7 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d7df0d2a584d44ac4993ceff40e677dd7, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d1a64d0540b2f4f81837455cca26efed4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d1a64d0540b2f4f81837455cca26efed4 is MARC.Everest.DataTypes.II ? d1a64d0540b2f4f81837455cca26efed4 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d1a64d0540b2f4f81837455cca26efed4, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object da56f64c9344449a49efc97e19ff7bb90 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = da56f64c9344449a49efc97e19ff7bb90 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? da56f64c9344449a49efc97e19ff7bb90 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(da56f64c9344449a49efc97e19ff7bb90, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl instance = o as MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.QUMT_MT020010UV01.SortControl'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dc826358316224baaa4d15cb19f78ff3a : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.QueryMatchObservation == null && Host.CreateRequiredElements) { instance.QueryMatchObservation = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation(); instance.QueryMatchObservation.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.QueryMatchObservation != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "queryMatchObservation", (MARC.Everest.Interfaces.IGraphable)instance.QueryMatchObservation, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SBJ".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SBJ", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "queryMatchObservation" ) {

			object d8e82a18527c14c85b316f6d9cf18a65f = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation), currentInteractionType, resultContext); instance.QueryMatchObservation = d8e82a18527c14c85b316f6d9cf18a65f is MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation ? d8e82a18527c14c85b316f6d9cf18a65f as MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation)MARC.Everest.Connectors.Util.FromWireFormat(d8e82a18527c14c85b316f6d9cf18a65f, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation));
}
else if(s.LocalName == "realmCode" ) {

			object dcd4355afaa4541869400c40e0c52e63a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dcd4355afaa4541869400c40e0c52e63a is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dcd4355afaa4541869400c40e0c52e63a as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dcd4355afaa4541869400c40e0c52e63a, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dff04c45259db4bef8601186ca170fbe8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dff04c45259db4bef8601186ca170fbe8 is MARC.Everest.DataTypes.II ? dff04c45259db4bef8601186ca170fbe8 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dff04c45259db4bef8601186ca170fbe8, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dcca9a0f20cec4c358a4b174124d58025 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dcca9a0f20cec4c358a4b174124d58025 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dcca9a0f20cec4c358a4b174124d58025 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dcca9a0f20cec4c358a4b174124d58025, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.QueryMatchObservation == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property QueryMatchObservation in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d00d4d083d3f14351b110a633813b3988 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name == null && Host.CreateRequiredElements) { instance.Name = new MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>(); instance.Name.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PSN".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PSN", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "name" ) {

			object d2bf55324239745dfaa58216a1033be72 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), currentInteractionType, resultContext); instance.Name = d2bf55324239745dfaa58216a1033be72 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> ? d2bf55324239745dfaa58216a1033be72 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>)MARC.Everest.Connectors.Util.FromWireFormat(d2bf55324239745dfaa58216a1033be72, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>));
}
else if(s.LocalName == "realmCode" ) {

			object de0e77670ec014996b3a17163d7d618c0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = de0e77670ec014996b3a17163d7d618c0 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? de0e77670ec014996b3a17163d7d618c0 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(de0e77670ec014996b3a17163d7d618c0, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dbcbb209c28bc4d4f87c919622b375d87 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dbcbb209c28bc4d4f87c919622b375d87 is MARC.Everest.DataTypes.II ? dbcbb209c28bc4d4f87c919622b375d87 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dbcbb209c28bc4d4f87c919622b375d87, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d99d6603d21334912b8329e354c96e51f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d99d6603d21334912b8329e354c96e51f is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d99d6603d21334912b8329e354c96e51f as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d99d6603d21334912b8329e354c96e51f, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Name == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Name in MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d93dbde2223594f759f9c4c161391f002 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("Organization", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.1060";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ContactParty != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.ContactParty) { retVal = Host.WriteElementUtil(s, "contactParty", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ORG".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ORG", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d65c212f65852424d82f7d1f1b6a5dc18 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d65c212f65852424d82f7d1f1b6a5dc18 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d65c212f65852424d82f7d1f1b6a5dc18 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d65c212f65852424d82f7d1f1b6a5dc18, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d603e0afd3d324917977a394fdd7eea9c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d603e0afd3d324917977a394fdd7eea9c is MARC.Everest.DataTypes.CE<System.String> ? d603e0afd3d324917977a394fdd7eea9c as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d603e0afd3d324917977a394fdd7eea9c, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "name" ) {

			object da7ce068604f24b648bc01be01f057fdf = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), currentInteractionType, resultContext); instance.Name = da7ce068604f24b648bc01be01f057fdf is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> ? da7ce068604f24b648bc01be01f057fdf as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>)MARC.Everest.Connectors.Util.FromWireFormat(da7ce068604f24b648bc01be01f057fdf, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>));
}
else if(s.LocalName == "contactParty" ) {

			object d08b644830b9f4843994063a0d1066dd9 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty), currentInteractionType, resultContext); instance.ContactParty.Add(d08b644830b9f4843994063a0d1066dd9 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty)d08b644830b9f4843994063a0d1066dd9 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty)MARC.Everest.Connectors.Util.FromWireFormat(d08b644830b9f4843994063a0d1066dd9, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty)));
}
else if(s.LocalName == "realmCode" ) {

			object d4d75705db2ec438e8978e34c8fb66147 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d4d75705db2ec438e8978e34c8fb66147 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d4d75705db2ec438e8978e34c8fb66147 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d4d75705db2ec438e8978e34c8fb66147, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d8ee9fa67629e4803a985fbb3abb47f53 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d8ee9fa67629e4803a985fbb3abb47f53 is MARC.Everest.DataTypes.II ? d8ee9fa67629e4803a985fbb3abb47f53 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d8ee9fa67629e4803a985fbb3abb47f53, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object df096580e857e4bbbbdfdd1f22635c42a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = df096580e857e4bbbbdfdd1f22635c42a is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? df096580e857e4bbbbdfdd1f22635c42a as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(df096580e857e4bbbbdfdd1f22635c42a, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.ContactParty != null && (instance.ContactParty.Count > 2147483647 ||  instance.ContactParty.Count < 1)) { isValid &= false; details.Add(new MARC.Everest.Connectors.InsufficientRepetionsResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ContactParty in MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization does not have enough elements in the list, need between 1 and 2147483647 elements!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d909013fce93243e39eb664516001d00d : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4 instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AdministrativeObservation != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "administrativeObservation", (MARC.Everest.Interfaces.IGraphable)instance.AdministrativeObservation, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4 instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SBJ".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SBJ", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "administrativeObservation" ) {

			object dd3c7fd05a30a498d88d38f2fd08d4d0a = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation), currentInteractionType, resultContext); instance.AdministrativeObservation = dd3c7fd05a30a498d88d38f2fd08d4d0a is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation ? dd3c7fd05a30a498d88d38f2fd08d4d0a as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation)MARC.Everest.Connectors.Util.FromWireFormat(dd3c7fd05a30a498d88d38f2fd08d4d0a, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation));
}
else if(s.LocalName == "realmCode" ) {

			object d0e65725390c9403fa8687d883f44b25a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d0e65725390c9403fa8687d883f44b25a is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d0e65725390c9403fa8687d883f44b25a as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d0e65725390c9403fa8687d883f44b25a, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d5fa531be063149f7ac2d42dbb309d141 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d5fa531be063149f7ac2d42dbb309d141 is MARC.Everest.DataTypes.II ? d5fa531be063149f7ac2d42dbb309d141 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d5fa531be063149f7ac2d42dbb309d141, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d3113c36d15bf49a0a6ba19e69792d579 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d3113c36d15bf49a0a6ba19e69792d579 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d3113c36d15bf49a0a6ba19e69792d579 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d3113c36d15bf49a0a6ba19e69792d579, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4 instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d67b4ce6ff232439a8d617ff2592e96ba : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.ANY), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"OBS".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "OBS", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "code" ) {

			object d7ec4dc7fe9504904984cdfd50f16cce6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = d7ec4dc7fe9504904984cdfd50f16cce6 is MARC.Everest.DataTypes.CD<System.String> ? d7ec4dc7fe9504904984cdfd50f16cce6 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d7ec4dc7fe9504904984cdfd50f16cce6, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "value" ) {

			object d6cec82835bd54355bc101c1603df9dcc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ANY), currentInteractionType, resultContext); instance.Value = d6cec82835bd54355bc101c1603df9dcc is MARC.Everest.DataTypes.ANY ? d6cec82835bd54355bc101c1603df9dcc as MARC.Everest.DataTypes.ANY : (MARC.Everest.DataTypes.ANY)MARC.Everest.Connectors.Util.FromWireFormat(d6cec82835bd54355bc101c1603df9dcc, typeof(MARC.Everest.DataTypes.ANY));
}
else if(s.LocalName == "realmCode" ) {

			object de5d2faff01324b509a3064f03b16feda = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = de5d2faff01324b509a3064f03b16feda is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? de5d2faff01324b509a3064f03b16feda as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(de5d2faff01324b509a3064f03b16feda, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d365f80c3ece249138bd380a60dc4c96c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d365f80c3ece249138bd380a60dc4c96c is MARC.Everest.DataTypes.II ? d365f80c3ece249138bd380a60dc4c96c as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d365f80c3ece249138bd380a60dc4c96c, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object de267a037e4af40f783de67a652f389d7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = de267a037e4af40f783de67a652f389d7 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? de267a037e4af40f783de67a652f389d7 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(de267a037e4af40f783de67a652f389d7, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Code == null || instance.Code.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Code in MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Value == null || instance.Value.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT202310UV02.QueryMatchObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class daa5d179bdf404869afae0522cd0773d0 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.111";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ContactPerson != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "contactPerson", (MARC.Everest.Interfaces.IGraphable)instance.ContactPerson, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"CON".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "CON", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d8be71d934dd84cefa11647be742aa0a6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d8be71d934dd84cefa11647be742aa0a6 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d8be71d934dd84cefa11647be742aa0a6 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d8be71d934dd84cefa11647be742aa0a6, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d5ab8ef4eaf1a42a29d504719ed7b4804 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d5ab8ef4eaf1a42a29d504719ed7b4804 is MARC.Everest.DataTypes.CE<System.String> ? d5ab8ef4eaf1a42a29d504719ed7b4804 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d5ab8ef4eaf1a42a29d504719ed7b4804, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "addr" ) {

			object dacee4e1f2c6f4a5f84dfe7f291b6bd63 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = dacee4e1f2c6f4a5f84dfe7f291b6bd63 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? dacee4e1f2c6f4a5f84dfe7f291b6bd63 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(dacee4e1f2c6f4a5f84dfe7f291b6bd63, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object d7e110f245f8b4610ab388587f6d8634c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = d7e110f245f8b4610ab388587f6d8634c is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? d7e110f245f8b4610ab388587f6d8634c as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(d7e110f245f8b4610ab388587f6d8634c, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "contactPerson" ) {

			object d3f9fa1d66a264e72b14ed96931f1bb04 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person), currentInteractionType, resultContext); instance.ContactPerson = d3f9fa1d66a264e72b14ed96931f1bb04 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person ? d3f9fa1d66a264e72b14ed96931f1bb04 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person)MARC.Everest.Connectors.Util.FromWireFormat(d3f9fa1d66a264e72b14ed96931f1bb04, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Person));
}
else if(s.LocalName == "realmCode" ) {

			object d9a6dddece679439aa22ea20462309243 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d9a6dddece679439aa22ea20462309243 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d9a6dddece679439aa22ea20462309243 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d9a6dddece679439aa22ea20462309243, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d1d860b4ac20b4e1b8776f6605e97f83e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d1d860b4ac20b4e1b8776f6605e97f83e is MARC.Everest.DataTypes.II ? d1d860b4ac20b4e1b8776f6605e97f83e as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d1d860b4ac20b4e1b8776f6605e97f83e, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dd7db895cf42141eda28865ba692cf300 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dd7db895cf42141eda28865ba692cf300 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dd7db895cf42141eda28865ba692cf300 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dd7db895cf42141eda28865ba692cf300, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.ContactParty is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da209d74d4dc6443f92581705cbeb606b : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("Patient", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode == null && Host.CreateRequiredElements) { instance.StatusCode = new MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>(); instance.StatusCode.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ConfidentialityCode != null && !isInstanceNull) {

if(!instance.ConfidentialityCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "confidentialityCode", (MARC.Everest.Interfaces.IGraphable)instance.ConfidentialityCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.VeryImportantPersonCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "veryImportantPersonCode", (MARC.Everest.Interfaces.IGraphable)instance.VeryImportantPersonCode, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PatientEntityChoiceSubject != null && !isInstanceNull) {

 if(instance.PatientEntityChoiceSubject.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Person)) {

			retVal = Host.WriteElementUtil(s, "patientPerson", (MARC.Everest.Interfaces.IGraphable)instance.PatientEntityChoiceSubject, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Person), context, resultContext);
}
else if(instance.PatientEntityChoiceSubject.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.NonPersonLivingSubject)) {

			retVal = Host.WriteElementUtil(s, "patientNonPersonLivingSubject", (MARC.Everest.Interfaces.IGraphable)instance.PatientEntityChoiceSubject, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.NonPersonLivingSubject), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.PatientEntityChoiceSubject.GetType()), s.ToString(), null)); }
}
if(instance.ProviderOrganization == null && Host.CreateRequiredElements) { instance.ProviderOrganization = new MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization(); instance.ProviderOrganization.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.ProviderOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "providerOrganization", (MARC.Everest.Interfaces.IGraphable)instance.ProviderOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SubjectOf1 != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.SubjectOf1) { retVal = Host.WriteElementUtil(s, "subjectOf1", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SubjectOf2 != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.SubjectOf2) { retVal = Host.WriteElementUtil(s, "subjectOf2", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CoveredPartyOf != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.CoveredPartyOf) { retVal = Host.WriteElementUtil(s, "coveredPartyOf", ig, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PAT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PAT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dc0fc41217b0e43d294c90ee7974ca1ef = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dc0fc41217b0e43d294c90ee7974ca1ef is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dc0fc41217b0e43d294c90ee7974ca1ef as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dc0fc41217b0e43d294c90ee7974ca1ef, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "addr" ) {

			object d919c865b423f4c61abe3eeece996dbde = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d919c865b423f4c61abe3eeece996dbde is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d919c865b423f4c61abe3eeece996dbde as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d919c865b423f4c61abe3eeece996dbde, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object dea0a9ef723b54255978bfbbae4bb34bf = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = dea0a9ef723b54255978bfbbae4bb34bf is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? dea0a9ef723b54255978bfbbae4bb34bf as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(dea0a9ef723b54255978bfbbae4bb34bf, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "statusCode" ) {

			object dd80d32b360f942f89250bd9bd532ffb4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>), currentInteractionType, resultContext); instance.StatusCode = dd80d32b360f942f89250bd9bd532ffb4 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus> ? dd80d32b360f942f89250bd9bd532ffb4 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>)MARC.Everest.Connectors.Util.FromWireFormat(dd80d32b360f942f89250bd9bd532ffb4, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>));
}
else if(s.LocalName == "effectiveTime" ) {

			object dda6f8ce89bb2498b9785a38c26c0d1d3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = dda6f8ce89bb2498b9785a38c26c0d1d3 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? dda6f8ce89bb2498b9785a38c26c0d1d3 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(dda6f8ce89bb2498b9785a38c26c0d1d3, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "confidentialityCode" ) {

			object dd23061f3fc9c4db0a956f427eab68e3c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.ConfidentialityCode = dd23061f3fc9c4db0a956f427eab68e3c is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? dd23061f3fc9c4db0a956f427eab68e3c as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dd23061f3fc9c4db0a956f427eab68e3c, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "veryImportantPersonCode" ) {

			object dfa98b5f5507543d0980321579aeaf24b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.VeryImportantPersonCode = dfa98b5f5507543d0980321579aeaf24b is MARC.Everest.DataTypes.CE<System.String> ? dfa98b5f5507543d0980321579aeaf24b as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dfa98b5f5507543d0980321579aeaf24b, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "patientPerson" ) {

			object d899787ec2e64442db7dcfa7a74cc9385 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Person), currentInteractionType, resultContext); instance.PatientEntityChoiceSubject = d899787ec2e64442db7dcfa7a74cc9385 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Person ? d899787ec2e64442db7dcfa7a74cc9385 as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Person : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Person)MARC.Everest.Connectors.Util.FromWireFormat(d899787ec2e64442db7dcfa7a74cc9385, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Person));
}
else if(s.LocalName == "patientNonPersonLivingSubject" ) {

			object d82c638f3a3e84e2a82148d551e4c7b64 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.NonPersonLivingSubject), currentInteractionType, resultContext); instance.PatientEntityChoiceSubject = d82c638f3a3e84e2a82148d551e4c7b64 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.NonPersonLivingSubject ? d82c638f3a3e84e2a82148d551e4c7b64 as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.NonPersonLivingSubject : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.NonPersonLivingSubject)MARC.Everest.Connectors.Util.FromWireFormat(d82c638f3a3e84e2a82148d551e4c7b64, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.NonPersonLivingSubject));
}
else if(s.LocalName == "providerOrganization" ) {

			object d7f7ce53909644867b76475e69b51ef2e = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization), currentInteractionType, resultContext); instance.ProviderOrganization = d7f7ce53909644867b76475e69b51ef2e is MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization ? d7f7ce53909644867b76475e69b51ef2e as MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d7f7ce53909644867b76475e69b51ef2e, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization));
}
else if(s.LocalName == "subjectOf1" ) {

			object d2254a0bdb8f741a7a7430bb36cacc4de = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject), currentInteractionType, resultContext); instance.SubjectOf1.Add(d2254a0bdb8f741a7a7430bb36cacc4de is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject)d2254a0bdb8f741a7a7430bb36cacc4de : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject)MARC.Everest.Connectors.Util.FromWireFormat(d2254a0bdb8f741a7a7430bb36cacc4de, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Subject)));
}
else if(s.LocalName == "subjectOf2" ) {

			object de2b96e9de157411b9e0227e8006e4e80 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4), currentInteractionType, resultContext); instance.SubjectOf2.Add(de2b96e9de157411b9e0227e8006e4e80 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4 ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4)de2b96e9de157411b9e0227e8006e4e80 : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4)MARC.Everest.Connectors.Util.FromWireFormat(de2b96e9de157411b9e0227e8006e4e80, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.Subject4)));
}
else if(s.LocalName == "coveredPartyOf" ) {

			object d705bc3b282a74c3688127303ba4411de = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty), currentInteractionType, resultContext); instance.CoveredPartyOf.Add(d705bc3b282a74c3688127303ba4411de is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty ? (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty)d705bc3b282a74c3688127303ba4411de : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty)MARC.Everest.Connectors.Util.FromWireFormat(d705bc3b282a74c3688127303ba4411de, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty)));
}
else if(s.LocalName == "realmCode" ) {

			object d1cb5ef96220b4119acf1a3ec7063c2a6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d1cb5ef96220b4119acf1a3ec7063c2a6 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d1cb5ef96220b4119acf1a3ec7063c2a6 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d1cb5ef96220b4119acf1a3ec7063c2a6, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d8d9198b9f4d34f3f98deff3240ca3913 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d8d9198b9f4d34f3f98deff3240ca3913 is MARC.Everest.DataTypes.II ? d8d9198b9f4d34f3f98deff3240ca3913 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d8d9198b9f4d34f3f98deff3240ca3913, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d849f18bbe2bd460b8b093ac627945b91 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d849f18bbe2bd460b8b093ac627945b91 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d849f18bbe2bd460b8b093ac627945b91 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d849f18bbe2bd460b8b093ac627945b91, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.StatusCode == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property StatusCode in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.PatientEntityChoiceSubject == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property PatientEntityChoiceSubject in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SubjectOf1 == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SubjectOf1 in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class db133e206e2f942b7b1df4178cdc8e310 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SequenceNumber != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "sequenceNumber", (MARC.Everest.Interfaces.IGraphable)instance.SequenceNumber, typeof(MARC.Everest.DataTypes.INT), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Time != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "time", (MARC.Everest.Interfaces.IGraphable)instance.Time, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CoverageRecord != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "coverageRecord", (MARC.Everest.Interfaces.IGraphable)instance.CoverageRecord, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"COV".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "COV", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "sequenceNumber" ) {

			object d0c3dd584bda341afbf80e0da5abc0375 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.INT), currentInteractionType, resultContext); instance.SequenceNumber = d0c3dd584bda341afbf80e0da5abc0375 is MARC.Everest.DataTypes.INT ? d0c3dd584bda341afbf80e0da5abc0375 as MARC.Everest.DataTypes.INT : (MARC.Everest.DataTypes.INT)MARC.Everest.Connectors.Util.FromWireFormat(d0c3dd584bda341afbf80e0da5abc0375, typeof(MARC.Everest.DataTypes.INT));
}
else if(s.LocalName == "time" ) {

			object d2d9274f07228429d90b21ec499c6a17c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.Time = d2d9274f07228429d90b21ec499c6a17c is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d2d9274f07228429d90b21ec499c6a17c as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d2d9274f07228429d90b21ec499c6a17c, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "coverageRecord" ) {

			object d43f3e4081e534bae8bdf303f462a59a0 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord), currentInteractionType, resultContext); instance.CoverageRecord = d43f3e4081e534bae8bdf303f462a59a0 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord ? d43f3e4081e534bae8bdf303f462a59a0 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord)MARC.Everest.Connectors.Util.FromWireFormat(d43f3e4081e534bae8bdf303f462a59a0, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord));
}
else if(s.LocalName == "realmCode" ) {

			object d13c9ced0a8b548539de9558e98e27391 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d13c9ced0a8b548539de9558e98e27391 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d13c9ced0a8b548539de9558e98e27391 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d13c9ced0a8b548539de9558e98e27391, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d2d6df133c19c43359c506af1065a071d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d2d6df133c19c43359c506af1065a071d is MARC.Everest.DataTypes.II ? d2d6df133c19c43359c506af1065a071d as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d2d6df133c19c43359c506af1065a071d, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object db3c11ccac6b04428823095f01e1d695e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = db3c11ccac6b04428823095f01e1d695e is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? db3c11ccac6b04428823095f01e1d695e as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(db3c11ccac6b04428823095f01e1d695e, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.CoveredParty is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d2d98a9fa304248dcac1c5f3439ad1be6 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PriorityNumber != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "priorityNumber", (MARC.Everest.Interfaces.IGraphable)instance.PriorityNumber, typeof(MARC.Everest.DataTypes.INT), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PolicyOrProgram != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "policyOrProgram", (MARC.Everest.Interfaces.IGraphable)instance.PolicyOrProgram, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"COMP".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "COMP", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "priorityNumber" ) {

			object dba23a5daeab64bfcb6994248b64fdb99 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.INT), currentInteractionType, resultContext); instance.PriorityNumber = dba23a5daeab64bfcb6994248b64fdb99 is MARC.Everest.DataTypes.INT ? dba23a5daeab64bfcb6994248b64fdb99 as MARC.Everest.DataTypes.INT : (MARC.Everest.DataTypes.INT)MARC.Everest.Connectors.Util.FromWireFormat(dba23a5daeab64bfcb6994248b64fdb99, typeof(MARC.Everest.DataTypes.INT));
}
else if(s.LocalName == "policyOrProgram" ) {

			object de09e23d96f334fcc92e19d38f9a1dcb3 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram), currentInteractionType, resultContext); instance.PolicyOrProgram = de09e23d96f334fcc92e19d38f9a1dcb3 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram ? de09e23d96f334fcc92e19d38f9a1dcb3 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram)MARC.Everest.Connectors.Util.FromWireFormat(de09e23d96f334fcc92e19d38f9a1dcb3, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram));
}
else if(s.LocalName == "realmCode" ) {

			object d183bafde2743492280df8edc9dcdb4bd = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d183bafde2743492280df8edc9dcdb4bd is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d183bafde2743492280df8edc9dcdb4bd as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d183bafde2743492280df8edc9dcdb4bd, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dc6c4a61ec2bb454594051902fddb2b54 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dc6c4a61ec2bb454594051902fddb2b54 is MARC.Everest.DataTypes.II ? dc6c4a61ec2bb454594051902fddb2b54 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dc6c4a61ec2bb454594051902fddb2b54, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d1fffb10aaa954836a08efec2eaa819ab = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d1fffb10aaa954836a08efec2eaa819ab is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d1fffb10aaa954836a08efec2eaa819ab as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d1fffb10aaa954836a08efec2eaa819ab, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d7f60b806ed214bc2926bcd67bbf4bc9a : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.NegationInd != null && !isInstanceNull) {

			s.WriteAttributeString("negationInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.NegationInd));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.BeneficiaryChoice != null && !isInstanceNull) {

 if(instance.BeneficiaryChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary)) {

			retVal = Host.WriteElementUtil(s, "beneficiary", (MARC.Everest.Interfaces.IGraphable)instance.BeneficiaryChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary), context, resultContext);
}
else if(instance.BeneficiaryChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT050000UV01.Patient)) {

			retVal = Host.WriteElementUtil(s, "patient", (MARC.Everest.Interfaces.IGraphable)instance.BeneficiaryChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT050000UV01.Patient), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.BeneficiaryChoice.GetType()), s.ToString(), null)); }
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"BEN".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "BEN", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("negationInd") != null) instance.NegationInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("negationInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "beneficiary" ) {

			object d2750139ea94c49478e612012ce3887f1 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary), currentInteractionType, resultContext); instance.BeneficiaryChoice = d2750139ea94c49478e612012ce3887f1 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary ? d2750139ea94c49478e612012ce3887f1 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary)MARC.Everest.Connectors.Util.FromWireFormat(d2750139ea94c49478e612012ce3887f1, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary));
}
else if(s.LocalName == "patient" ) {

			object dfe82b3a450ea43289668e84f22db05f5 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT050000UV01.Patient), currentInteractionType, resultContext); instance.BeneficiaryChoice = dfe82b3a450ea43289668e84f22db05f5 is MARC.Everest.RMIM.UV.NE2008.COCT_MT050000UV01.Patient ? dfe82b3a450ea43289668e84f22db05f5 as MARC.Everest.RMIM.UV.NE2008.COCT_MT050000UV01.Patient : (MARC.Everest.RMIM.UV.NE2008.COCT_MT050000UV01.Patient)MARC.Everest.Connectors.Util.FromWireFormat(dfe82b3a450ea43289668e84f22db05f5, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT050000UV01.Patient));
}
else if(s.LocalName == "realmCode" ) {

			object d3ad9e6a176fb41899ffd2d8aa29365b7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d3ad9e6a176fb41899ffd2d8aa29365b7 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d3ad9e6a176fb41899ffd2d8aa29365b7 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d3ad9e6a176fb41899ffd2d8aa29365b7, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object db2b7c0f3e95246b59e1836a432fecd0d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = db2b7c0f3e95246b59e1836a432fecd0d is MARC.Everest.DataTypes.II ? db2b7c0f3e95246b59e1836a432fecd0d as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(db2b7c0f3e95246b59e1836a432fecd0d, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object daf6127f35b094c5fab3a353bd4c0beac = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = daf6127f35b094c5fab3a353bd4c0beac is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? daf6127f35b094c5fab3a353bd4c0beac as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(daf6127f35b094c5fab3a353bd4c0beac, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d901c4f26ce134b3eb8707de694797af4 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SemanticsText == null && Host.CreateRequiredElements) { instance.SemanticsText = new MARC.Everest.DataTypes.ST(); instance.SemanticsText.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.SemanticsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "semanticsText", (MARC.Everest.Interfaces.IGraphable)instance.SemanticsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "value" ) {

			object d8e8a7665adb24347ba46004776eac417 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN>), currentInteractionType, resultContext); instance.Value = d8e8a7665adb24347ba46004776eac417 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN> ? d8e8a7665adb24347ba46004776eac417 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN>)MARC.Everest.Connectors.Util.FromWireFormat(d8e8a7665adb24347ba46004776eac417, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.EN>));
}
else if(s.LocalName == "semanticsText" ) {

			object d27bdd3a4797642ba9d2b213de2400af8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SemanticsText = d27bdd3a4797642ba9d2b213de2400af8 is MARC.Everest.DataTypes.ST ? d27bdd3a4797642ba9d2b213de2400af8 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d27bdd3a4797642ba9d2b213de2400af8, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object d481eaf851b2241e5a1177a62d0d97313 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d481eaf851b2241e5a1177a62d0d97313 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d481eaf851b2241e5a1177a62d0d97313 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d481eaf851b2241e5a1177a62d0d97313, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d78cdcf284f8f4ee5a995f2c9bf97ee88 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d78cdcf284f8f4ee5a995f2c9bf97ee88 is MARC.Everest.DataTypes.II ? d78cdcf284f8f4ee5a995f2c9bf97ee88 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d78cdcf284f8f4ee5a995f2c9bf97ee88, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d0ff162ac61e84dfcbac6b0c66c028c0b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d0ff162ac61e84dfcbac6b0c66c028c0b is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d0ff162ac61e84dfcbac6b0c66c028c0b as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d0ff162ac61e84dfcbac6b0c66c028c0b, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Value == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
if(instance.SemanticsText == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property SemanticsText in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.LivingSubjectBirthPlaceName is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d92b1182a2f0a40c99de1e6115d4d7887 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.GTS), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.ANY), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation instance = new MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"OBS".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "OBS", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d437e59720ae44ed381265cac1e83c5de = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d437e59720ae44ed381265cac1e83c5de is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d437e59720ae44ed381265cac1e83c5de as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d437e59720ae44ed381265cac1e83c5de, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d0bb5c0c6482b43d4857b1b6ea0eefeb9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = d0bb5c0c6482b43d4857b1b6ea0eefeb9 is MARC.Everest.DataTypes.CD<System.String> ? d0bb5c0c6482b43d4857b1b6ea0eefeb9 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d0bb5c0c6482b43d4857b1b6ea0eefeb9, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "statusCode" ) {

			object d952438fd02c249e5b88944b54d804801 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), currentInteractionType, resultContext); instance.StatusCode = d952438fd02c249e5b88944b54d804801 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> ? d952438fd02c249e5b88944b54d804801 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>)MARC.Everest.Connectors.Util.FromWireFormat(d952438fd02c249e5b88944b54d804801, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d9cb1b9ee67a34813b9c587c3d94ff68e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.GTS), currentInteractionType, resultContext); instance.EffectiveTime = d9cb1b9ee67a34813b9c587c3d94ff68e is MARC.Everest.DataTypes.GTS ? d9cb1b9ee67a34813b9c587c3d94ff68e as MARC.Everest.DataTypes.GTS : (MARC.Everest.DataTypes.GTS)MARC.Everest.Connectors.Util.FromWireFormat(d9cb1b9ee67a34813b9c587c3d94ff68e, typeof(MARC.Everest.DataTypes.GTS));
}
else if(s.LocalName == "value" ) {

			object d50336a6345204dedb8dadebaea982fa5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ANY), currentInteractionType, resultContext); instance.Value = d50336a6345204dedb8dadebaea982fa5 is MARC.Everest.DataTypes.ANY ? d50336a6345204dedb8dadebaea982fa5 as MARC.Everest.DataTypes.ANY : (MARC.Everest.DataTypes.ANY)MARC.Everest.Connectors.Util.FromWireFormat(d50336a6345204dedb8dadebaea982fa5, typeof(MARC.Everest.DataTypes.ANY));
}
else if(s.LocalName == "realmCode" ) {

			object d4c15ce43db6949c492f97df9d145f2d4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d4c15ce43db6949c492f97df9d145f2d4 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d4c15ce43db6949c492f97df9d145f2d4 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d4c15ce43db6949c492f97df9d145f2d4, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d06e2a8cb887b4f36a0d07c3ab605b631 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d06e2a8cb887b4f36a0d07c3ab605b631 is MARC.Everest.DataTypes.II ? d06e2a8cb887b4f36a0d07c3ab605b631 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d06e2a8cb887b4f36a0d07c3ab605b631, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d0d7df10b77bc460eae3d25d778bafa56 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d0d7df10b77bc460eae3d25d778bafa56 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d0d7df10b77bc460eae3d25d778bafa56 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d0d7df10b77bc460eae3d25d778bafa56, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation instance = o as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Code == null || instance.Code.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Code in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Value == null || instance.Value.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Value in MARC.Everest.RMIM.UV.NE2008.PRPA_MT201303UV02.AdministrativeObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d4c12066b388d4896b367f17dd6ed9843 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("CoverageRecord", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ConfidentialityCode != null && !isInstanceNull) {

if(!instance.ConfidentialityCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "confidentialityCode", (MARC.Everest.Interfaces.IGraphable)instance.ConfidentialityCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Beneficiary != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "beneficiary", (MARC.Everest.Interfaces.IGraphable)instance.Beneficiary, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Component != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Component) { retVal = Host.WriteElementUtil(s, "component", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"COV".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "COV", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d4cb98feb008a4646873a1f6948fd0e75 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d4cb98feb008a4646873a1f6948fd0e75 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d4cb98feb008a4646873a1f6948fd0e75 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4cb98feb008a4646873a1f6948fd0e75, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "statusCode" ) {

			object df4a4abf2aa8d4bae9976f22ef7b1fc00 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), currentInteractionType, resultContext); instance.StatusCode = df4a4abf2aa8d4bae9976f22ef7b1fc00 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> ? df4a4abf2aa8d4bae9976f22ef7b1fc00 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>)MARC.Everest.Connectors.Util.FromWireFormat(df4a4abf2aa8d4bae9976f22ef7b1fc00, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>));
}
else if(s.LocalName == "effectiveTime" ) {

			object de9c47df80a1c4ecc8a94ed64029d6a49 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = de9c47df80a1c4ecc8a94ed64029d6a49 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? de9c47df80a1c4ecc8a94ed64029d6a49 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(de9c47df80a1c4ecc8a94ed64029d6a49, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "confidentialityCode" ) {

			object dfd48ea16632847eda747218c7321b70d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.ConfidentialityCode = dfd48ea16632847eda747218c7321b70d is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? dfd48ea16632847eda747218c7321b70d as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dfd48ea16632847eda747218c7321b70d, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "beneficiary" ) {

			object d817365156fa243cc96683218201793b2 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2), currentInteractionType, resultContext); instance.Beneficiary = d817365156fa243cc96683218201793b2 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2 ? d817365156fa243cc96683218201793b2 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2)MARC.Everest.Connectors.Util.FromWireFormat(d817365156fa243cc96683218201793b2, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Beneficiary2));
}
else if(s.LocalName == "component" ) {

			object d59922c27ec924bea85515538a999c489 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component), currentInteractionType, resultContext); instance.Component.Add(d59922c27ec924bea85515538a999c489 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component)d59922c27ec924bea85515538a999c489 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component)MARC.Everest.Connectors.Util.FromWireFormat(d59922c27ec924bea85515538a999c489, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Component)));
}
else if(s.LocalName == "realmCode" ) {

			object dc52763fee3214aed963cf8db8aa25fde = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dc52763fee3214aed963cf8db8aa25fde is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dc52763fee3214aed963cf8db8aa25fde as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dc52763fee3214aed963cf8db8aa25fde, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d34fe0ec7f76e4e1eaad75a02ccce6a3e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d34fe0ec7f76e4e1eaad75a02ccce6a3e is MARC.Everest.DataTypes.II ? d34fe0ec7f76e4e1eaad75a02ccce6a3e as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d34fe0ec7f76e4e1eaad75a02ccce6a3e, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d7976805f158748f09223d46587a62257 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d7976805f158748f09223d46587a62257 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d7976805f158748f09223d46587a62257 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d7976805f158748f09223d46587a62257, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageRecord is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class df2794c776fb240b5bd4f81dcb586423f : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.NegationInd != null && !isInstanceNull) {

			s.WriteAttributeString("negationInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.NegationInd));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CoveredParty == null && Host.CreateRequiredElements) { instance.CoveredParty = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty(); instance.CoveredParty.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.CoveredParty != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "coveredParty", (MARC.Everest.Interfaces.IGraphable)instance.CoveredParty, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"COV".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "COV", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("negationInd") != null) instance.NegationInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("negationInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "coveredParty" ) {

			object de8eb18dadb09436dad3b1d0de1c01cf8 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty), currentInteractionType, resultContext); instance.CoveredParty = de8eb18dadb09436dad3b1d0de1c01cf8 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty ? de8eb18dadb09436dad3b1d0de1c01cf8 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty)MARC.Everest.Connectors.Util.FromWireFormat(de8eb18dadb09436dad3b1d0de1c01cf8, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty));
}
else if(s.LocalName == "realmCode" ) {

			object d13d86769a6184f9a937163f4926fc413 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d13d86769a6184f9a937163f4926fc413 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d13d86769a6184f9a937163f4926fc413 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d13d86769a6184f9a937163f4926fc413, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object de71106cafed34b30a64ed4a42cd11c4d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = de71106cafed34b30a64ed4a42cd11c4d is MARC.Everest.DataTypes.II ? de71106cafed34b30a64ed4a42cd11c4d as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(de71106cafed34b30a64ed4a42cd11c4d, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object db2cc727d7afe439ca4f8689899bb53a5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = db2cc727d7afe439ca4f8689899bb53a5 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? db2cc727d7afe439ca4f8689899bb53a5 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(db2cc727d7afe439ca4f8689899bb53a5, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.CoveredParty == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property CoveredParty in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2 is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dacbff820223749f38b014f85c2bd2e52 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AsLocatedEntity != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "asLocatedEntity", (MARC.Everest.Interfaces.IGraphable)instance.AsLocatedEntity, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PSN".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PSN", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "name" ) {

			object d553d02e982a9415982790e1e00257ca5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), currentInteractionType, resultContext); instance.Name = d553d02e982a9415982790e1e00257ca5 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> ? d553d02e982a9415982790e1e00257ca5 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>)MARC.Everest.Connectors.Util.FromWireFormat(d553d02e982a9415982790e1e00257ca5, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>));
}
else if(s.LocalName == "asLocatedEntity" ) {

			object db88f66deb2ad4939a042ad61e188677e = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity), currentInteractionType, resultContext); instance.AsLocatedEntity = db88f66deb2ad4939a042ad61e188677e is MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity ? db88f66deb2ad4939a042ad61e188677e as MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity : (MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity)MARC.Everest.Connectors.Util.FromWireFormat(db88f66deb2ad4939a042ad61e188677e, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity));
}
else if(s.LocalName == "realmCode" ) {

			object dffb61142f90c4e70b57198255344143b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dffb61142f90c4e70b57198255344143b is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dffb61142f90c4e70b57198255344143b as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dffb61142f90c4e70b57198255344143b, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d05d8a500f636488fa72af4f8adfabd1c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d05d8a500f636488fa72af4f8adfabd1c is MARC.Everest.DataTypes.II ? d05d8a500f636488fa72af4f8adfabd1c as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d05d8a500f636488fa72af4f8adfabd1c, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d7fc00bc8e28542e8b02eea5721581794 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d7fc00bc8e28542e8b02eea5721581794 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d7fc00bc8e28542e8b02eea5721581794 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d7fc00bc8e28542e8b02eea5721581794, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d1d6ac2770dd446048e4459a4f831cbae : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.111";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ContactPerson != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "contactPerson", (MARC.Everest.Interfaces.IGraphable)instance.ContactPerson, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"CON".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "CON", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dadc130b0c1454113af26af1d11f4d31e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dadc130b0c1454113af26af1d11f4d31e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dadc130b0c1454113af26af1d11f4d31e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dadc130b0c1454113af26af1d11f4d31e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object dcd5b58fa1a704d5d993de9662b709c18 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = dcd5b58fa1a704d5d993de9662b709c18 is MARC.Everest.DataTypes.CE<System.String> ? dcd5b58fa1a704d5d993de9662b709c18 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dcd5b58fa1a704d5d993de9662b709c18, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "addr" ) {

			object d440e11103cf6476e85b7882d410e5de1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d440e11103cf6476e85b7882d410e5de1 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d440e11103cf6476e85b7882d410e5de1 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d440e11103cf6476e85b7882d410e5de1, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object dba47d6e6088b4192b806da9fea58d1d0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = dba47d6e6088b4192b806da9fea58d1d0 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? dba47d6e6088b4192b806da9fea58d1d0 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(dba47d6e6088b4192b806da9fea58d1d0, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "contactPerson" ) {

			object d7428c1bf11e0404bbcfb7119fac21e5f = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person), currentInteractionType, resultContext); instance.ContactPerson = d7428c1bf11e0404bbcfb7119fac21e5f is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person ? d7428c1bf11e0404bbcfb7119fac21e5f as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person)MARC.Everest.Connectors.Util.FromWireFormat(d7428c1bf11e0404bbcfb7119fac21e5f, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Person));
}
else if(s.LocalName == "realmCode" ) {

			object d3783733e65c84a96986f7305900ea38e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d3783733e65c84a96986f7305900ea38e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d3783733e65c84a96986f7305900ea38e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d3783733e65c84a96986f7305900ea38e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dd8e88293fd1742319937d752267e2a1d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dd8e88293fd1742319937d752267e2a1d is MARC.Everest.DataTypes.II ? dd8e88293fd1742319937d752267e2a1d as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dd8e88293fd1742319937d752267e2a1d, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dd82c3bd8a293492eb6db735b461be9d1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dd82c3bd8a293492eb6db735b461be9d1 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dd82c3bd8a293492eb6db735b461be9d1 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dd82c3bd8a293492eb6db735b461be9d1, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dcfb2fc9be012457fa80b5e3ca20802ee : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("Organization", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.1060";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Desc != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "desc", (MARC.Everest.Interfaces.IGraphable)instance.Desc, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StandardIndustryClassCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "standardIndustryClassCode", (MARC.Everest.Interfaces.IGraphable)instance.StandardIndustryClassCode, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AsOrganizationPartOf != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.AsOrganizationPartOf) { retVal = Host.WriteElementUtil(s, "asOrganizationPartOf", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ContactParty != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.ContactParty) { retVal = Host.WriteElementUtil(s, "contactParty", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.OrganizationContains != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.OrganizationContains) { retVal = Host.WriteElementUtil(s, "organizationContains", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ORG".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ORG", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d85eba10393ca4d128e9baa9289255492 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d85eba10393ca4d128e9baa9289255492 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d85eba10393ca4d128e9baa9289255492 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d85eba10393ca4d128e9baa9289255492, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d90ebce59355b4340848544d781de6c6f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d90ebce59355b4340848544d781de6c6f is MARC.Everest.DataTypes.CE<System.String> ? d90ebce59355b4340848544d781de6c6f as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d90ebce59355b4340848544d781de6c6f, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "name" ) {

			object d26492d8d1ada497f8ff1b868f7a68622 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), currentInteractionType, resultContext); instance.Name = d26492d8d1ada497f8ff1b868f7a68622 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> ? d26492d8d1ada497f8ff1b868f7a68622 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>)MARC.Everest.Connectors.Util.FromWireFormat(d26492d8d1ada497f8ff1b868f7a68622, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>));
}
else if(s.LocalName == "desc" ) {

			object df409ed0037f142818b5e33fd1c66ef6b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.Desc = df409ed0037f142818b5e33fd1c66ef6b is MARC.Everest.DataTypes.ED ? df409ed0037f142818b5e33fd1c66ef6b as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(df409ed0037f142818b5e33fd1c66ef6b, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "statusCode" ) {

			object d61abaf9fdfd44946a0169e8a96c42c06 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityStatus>), currentInteractionType, resultContext); instance.StatusCode = d61abaf9fdfd44946a0169e8a96c42c06 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityStatus> ? d61abaf9fdfd44946a0169e8a96c42c06 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityStatus>)MARC.Everest.Connectors.Util.FromWireFormat(d61abaf9fdfd44946a0169e8a96c42c06, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityStatus>));
}
else if(s.LocalName == "telecom" ) {

			object db1ed5139b6ee4f30acbcf4bf3f67ad12 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = db1ed5139b6ee4f30acbcf4bf3f67ad12 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? db1ed5139b6ee4f30acbcf4bf3f67ad12 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(db1ed5139b6ee4f30acbcf4bf3f67ad12, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "addr" ) {

			object dd104357c43a04f4184417669b83e3df7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = dd104357c43a04f4184417669b83e3df7 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? dd104357c43a04f4184417669b83e3df7 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(dd104357c43a04f4184417669b83e3df7, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "standardIndustryClassCode" ) {

			object d2742defc3ae84790ae199fe2e777494f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.StandardIndustryClassCode = d2742defc3ae84790ae199fe2e777494f is MARC.Everest.DataTypes.CE<System.String> ? d2742defc3ae84790ae199fe2e777494f as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d2742defc3ae84790ae199fe2e777494f, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "asOrganizationPartOf" ) {

			object d1c54470e88c145b5816ac7cc04f84c01 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf), currentInteractionType, resultContext); instance.AsOrganizationPartOf.Add(d1c54470e88c145b5816ac7cc04f84c01 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf)d1c54470e88c145b5816ac7cc04f84c01 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf)MARC.Everest.Connectors.Util.FromWireFormat(d1c54470e88c145b5816ac7cc04f84c01, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf)));
}
else if(s.LocalName == "contactParty" ) {

			object d4a60e778f6164c7fa16b269aad7dd324 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty), currentInteractionType, resultContext); instance.ContactParty.Add(d4a60e778f6164c7fa16b269aad7dd324 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty)d4a60e778f6164c7fa16b269aad7dd324 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty)MARC.Everest.Connectors.Util.FromWireFormat(d4a60e778f6164c7fa16b269aad7dd324, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.ContactParty)));
}
else if(s.LocalName == "organizationContains" ) {

			object dce8bb108cf4d4891bf78991e258f7153 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains), currentInteractionType, resultContext); instance.OrganizationContains.Add(dce8bb108cf4d4891bf78991e258f7153 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains)dce8bb108cf4d4891bf78991e258f7153 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains)MARC.Everest.Connectors.Util.FromWireFormat(dce8bb108cf4d4891bf78991e258f7153, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains)));
}
else if(s.LocalName == "realmCode" ) {

			object d86217443b2e24d1bb5edae082b3cf694 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d86217443b2e24d1bb5edae082b3cf694 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d86217443b2e24d1bb5edae082b3cf694 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d86217443b2e24d1bb5edae082b3cf694, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d3d2c24d29a494e129ffb8667194cc74a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d3d2c24d29a494e129ffb8667194cc74a is MARC.Everest.DataTypes.II ? d3d2c24d29a494e129ffb8667194cc74a as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d3d2c24d29a494e129ffb8667194cc74a, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dcd65a88adb6348198892a8ec66c03206 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dcd65a88adb6348198892a8ec66c03206 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dcd65a88adb6348198892a8ec66c03206 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dcd65a88adb6348198892a8ec66c03206, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da6eb9f6e8c054484bba6e2f8b452bc58 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("LocatedEntity", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Location != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "location", (MARC.Everest.Interfaces.IGraphable)instance.Location, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"LOCE".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "LOCE", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dde7615e8e97e4d96806b33f722c485f8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dde7615e8e97e4d96806b33f722c485f8 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dde7615e8e97e4d96806b33f722c485f8 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dde7615e8e97e4d96806b33f722c485f8, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "addr" ) {

			object ddad6e1414556456d8214da3b4dc8c9c5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = ddad6e1414556456d8214da3b4dc8c9c5 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? ddad6e1414556456d8214da3b4dc8c9c5 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(ddad6e1414556456d8214da3b4dc8c9c5, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object d0ac23cd42a89412ea6d8b58988887b3f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = d0ac23cd42a89412ea6d8b58988887b3f is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? d0ac23cd42a89412ea6d8b58988887b3f as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(d0ac23cd42a89412ea6d8b58988887b3f, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "statusCode" ) {

			object d89c24609bdd948aeb7b8fcb96e6b5e91 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>), currentInteractionType, resultContext); instance.StatusCode = d89c24609bdd948aeb7b8fcb96e6b5e91 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus> ? d89c24609bdd948aeb7b8fcb96e6b5e91 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>)MARC.Everest.Connectors.Util.FromWireFormat(d89c24609bdd948aeb7b8fcb96e6b5e91, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>));
}
else if(s.LocalName == "effectiveTime" ) {

			object df2c85366de0d494b951a5d4c282355a6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = df2c85366de0d494b951a5d4c282355a6 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? df2c85366de0d494b951a5d4c282355a6 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(df2c85366de0d494b951a5d4c282355a6, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "location" ) {

			object dac315bba4459484baee60456f1eca66e = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place), currentInteractionType, resultContext); instance.Location = dac315bba4459484baee60456f1eca66e is MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place ? dac315bba4459484baee60456f1eca66e as MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place : (MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place)MARC.Everest.Connectors.Util.FromWireFormat(dac315bba4459484baee60456f1eca66e, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place));
}
else if(s.LocalName == "realmCode" ) {

			object d5e90b2f9c4094e6f9ad208fd20686271 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d5e90b2f9c4094e6f9ad208fd20686271 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d5e90b2f9c4094e6f9ad208fd20686271 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d5e90b2f9c4094e6f9ad208fd20686271, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dfb78fd7d768741e6b1c6737049078b40 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dfb78fd7d768741e6b1c6737049078b40 is MARC.Everest.DataTypes.II ? dfb78fd7d768741e6b1c6737049078b40 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dfb78fd7d768741e6b1c6737049078b40, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d45a9990d564a4201a0cdecd39c0c0d21 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d45a9990d564a4201a0cdecd39c0c0d21 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d45a9990d564a4201a0cdecd39c0c0d21 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d45a9990d564a4201a0cdecd39c0c0d21, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT070000UV01.LocatedEntity is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class db47acd0cc45045478b273c4299a0e42e : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Location != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "location", (MARC.Everest.Interfaces.IGraphable)instance.Location, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"LOCE".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "LOCE", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d46656d46222c47f7b5c90ce474c98bea = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d46656d46222c47f7b5c90ce474c98bea is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d46656d46222c47f7b5c90ce474c98bea as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d46656d46222c47f7b5c90ce474c98bea, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "location" ) {

			object d3f88d74077c6495b9062aa44cb3a8b91 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place), currentInteractionType, resultContext); instance.Location = d3f88d74077c6495b9062aa44cb3a8b91 is MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place ? d3f88d74077c6495b9062aa44cb3a8b91 as MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place : (MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place)MARC.Everest.Connectors.Util.FromWireFormat(d3f88d74077c6495b9062aa44cb3a8b91, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place));
}
else if(s.LocalName == "realmCode" ) {

			object d5ae78e59f3b4493587f5f62668421c82 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d5ae78e59f3b4493587f5f62668421c82 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d5ae78e59f3b4493587f5f62668421c82 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d5ae78e59f3b4493587f5f62668421c82, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object db4bfeba74aa74da29553142cbf5bd1a2 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = db4bfeba74aa74da29553142cbf5bd1a2 is MARC.Everest.DataTypes.II ? db4bfeba74aa74da29553142cbf5bd1a2 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(db4bfeba74aa74da29553142cbf5bd1a2, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d67b0f34403db46a1a9a207d98cc2828d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d67b0f34403db46a1a9a207d98cc2828d is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d67b0f34403db46a1a9a207d98cc2828d as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d67b0f34403db46a1a9a207d98cc2828d, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d86b773bf032649c6928c1ae3afed77b5 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LocatedPlace != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "locatedPlace", (MARC.Everest.Interfaces.IGraphable)instance.LocatedPlace, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"LOCE".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "LOCE", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d9a70f79385a0463da71fdab3e7ccd8cb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d9a70f79385a0463da71fdab3e7ccd8cb is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d9a70f79385a0463da71fdab3e7ccd8cb as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d9a70f79385a0463da71fdab3e7ccd8cb, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "locatedPlace" ) {

			object dba82eb7566cb420c8f0a49208f219080 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place), currentInteractionType, resultContext); instance.LocatedPlace = dba82eb7566cb420c8f0a49208f219080 is MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place ? dba82eb7566cb420c8f0a49208f219080 as MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place : (MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place)MARC.Everest.Connectors.Util.FromWireFormat(dba82eb7566cb420c8f0a49208f219080, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place));
}
else if(s.LocalName == "realmCode" ) {

			object d19f62b390fbb4bc1a51c312074a95ff5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d19f62b390fbb4bc1a51c312074a95ff5 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d19f62b390fbb4bc1a51c312074a95ff5 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d19f62b390fbb4bc1a51c312074a95ff5, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d2acb87b5e749487e9ce166f1c48a5729 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d2acb87b5e749487e9ce166f1c48a5729 is MARC.Everest.DataTypes.II ? d2acb87b5e749487e9ce166f1c48a5729 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d2acb87b5e749487e9ce166f1c48a5729, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object db4044bdc9e2941eb80a2e1cda40ddabd = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = db4044bdc9e2941eb80a2e1cda40ddabd is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? db4044bdc9e2941eb80a2e1cda40ddabd as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(db4044bdc9e2941eb80a2e1cda40ddabd, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d3d30c972c6fa4d189b5546cce60bf932 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CE<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CoveredBeneficiaryCoveredPartyChoice != null && !isInstanceNull) {

 if(instance.CoveredBeneficiaryCoveredPartyChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.Person)) {

			retVal = Host.WriteElementUtil(s, "coveredPerson", (MARC.Everest.Interfaces.IGraphable)instance.CoveredBeneficiaryCoveredPartyChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.Person), context, resultContext);
}
else if(instance.CoveredBeneficiaryCoveredPartyChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.NonPersonLivingSubject)) {

			retVal = Host.WriteElementUtil(s, "coveredNonPersonLivingSubject", (MARC.Everest.Interfaces.IGraphable)instance.CoveredBeneficiaryCoveredPartyChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.NonPersonLivingSubject), context, resultContext);
}
else if(instance.CoveredBeneficiaryCoveredPartyChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)) {

			retVal = Host.WriteElementUtil(s, "coveredOrganization1", (MARC.Everest.Interfaces.IGraphable)instance.CoveredBeneficiaryCoveredPartyChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.CoveredBeneficiaryCoveredPartyChoice.GetType()), s.ToString(), null)); }
}
if(instance.UnderwritingOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "underwritingOrganization", (MARC.Everest.Interfaces.IGraphable)instance.UnderwritingOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SubjectOf1 != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.SubjectOf1) { retVal = Host.WriteElementUtil(s, "subjectOf1", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SubjectOf2 != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.SubjectOf2) { retVal = Host.WriteElementUtil(s, "subjectOf2", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Part != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Part) { retVal = Host.WriteElementUtil(s, "part", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.IndirectAuthority1 != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.IndirectAuthority1) { retVal = Host.WriteElementUtil(s, "indirectAuthority1", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.IndirectAuthority2 != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "indirectAuthority2", (MARC.Everest.Interfaces.IGraphable)instance.IndirectAuthority2, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"COVPTY".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "COVPTY", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d4ae0ab9ad7694ac5a46c7cbb9c18214b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d4ae0ab9ad7694ac5a46c7cbb9c18214b is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d4ae0ab9ad7694ac5a46c7cbb9c18214b as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4ae0ab9ad7694ac5a46c7cbb9c18214b, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object dc31f5edc8382455c8ee28b0e579ffbd4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = dc31f5edc8382455c8ee28b0e579ffbd4 is MARC.Everest.DataTypes.CE<System.String> ? dc31f5edc8382455c8ee28b0e579ffbd4 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dc31f5edc8382455c8ee28b0e579ffbd4, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "addr" ) {

			object ddc5359e9abd8451d99bca28f3296e96b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = ddc5359e9abd8451d99bca28f3296e96b is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? ddc5359e9abd8451d99bca28f3296e96b as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(ddc5359e9abd8451d99bca28f3296e96b, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object dafd8124c4a304e25a87be64a0e84d0d6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = dafd8124c4a304e25a87be64a0e84d0d6 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? dafd8124c4a304e25a87be64a0e84d0d6 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(dafd8124c4a304e25a87be64a0e84d0d6, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d20024e4e720c4087a5deaea232fc9819 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d20024e4e720c4087a5deaea232fc9819 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d20024e4e720c4087a5deaea232fc9819 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d20024e4e720c4087a5deaea232fc9819, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "coveredPerson" ) {

			object de020eb8ccf8c45388f3f36b01c642a02 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.Person), currentInteractionType, resultContext); instance.CoveredBeneficiaryCoveredPartyChoice = de020eb8ccf8c45388f3f36b01c642a02 is MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.Person ? de020eb8ccf8c45388f3f36b01c642a02 as MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.Person)MARC.Everest.Connectors.Util.FromWireFormat(de020eb8ccf8c45388f3f36b01c642a02, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.Person));
}
else if(s.LocalName == "coveredNonPersonLivingSubject" ) {

			object db3810a22c83640e99ec765e54b9f33ce = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.NonPersonLivingSubject), currentInteractionType, resultContext); instance.CoveredBeneficiaryCoveredPartyChoice = db3810a22c83640e99ec765e54b9f33ce is MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.NonPersonLivingSubject ? db3810a22c83640e99ec765e54b9f33ce as MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.NonPersonLivingSubject : (MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.NonPersonLivingSubject)MARC.Everest.Connectors.Util.FromWireFormat(db3810a22c83640e99ec765e54b9f33ce, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030007UV.NonPersonLivingSubject));
}
else if(s.LocalName == "coveredOrganization1" ) {

			object d90028feefed44879b3f4d04f3dcfe9dd = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.CoveredBeneficiaryCoveredPartyChoice = d90028feefed44879b3f4d04f3dcfe9dd is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d90028feefed44879b3f4d04f3dcfe9dd as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d90028feefed44879b3f4d04f3dcfe9dd, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "underwritingOrganization" ) {

			object d41ca345fb2d841f8a654c23bf94077ac = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.UnderwritingOrganization = d41ca345fb2d841f8a654c23bf94077ac is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d41ca345fb2d841f8a654c23bf94077ac as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d41ca345fb2d841f8a654c23bf94077ac, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "subjectOf1" ) {

			object da40447bdebb945e9bc519270d739883e = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject), currentInteractionType, resultContext); instance.SubjectOf1.Add(da40447bdebb945e9bc519270d739883e is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject)da40447bdebb945e9bc519270d739883e : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject)MARC.Everest.Connectors.Util.FromWireFormat(da40447bdebb945e9bc519270d739883e, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject)));
}
else if(s.LocalName == "subjectOf2" ) {

			object d3d3b4828bd8744fa95ac770f7bcfabaf = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3), currentInteractionType, resultContext); instance.SubjectOf2.Add(d3d3b4828bd8744fa95ac770f7bcfabaf is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3 ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3)d3d3b4828bd8744fa95ac770f7bcfabaf : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3)MARC.Everest.Connectors.Util.FromWireFormat(d3d3b4828bd8744fa95ac770f7bcfabaf, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3)));
}
else if(s.LocalName == "part" ) {

			object d4dbc700cabb447c8acc3971fe9952149 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part), currentInteractionType, resultContext); instance.Part.Add(d4dbc700cabb447c8acc3971fe9952149 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part)d4dbc700cabb447c8acc3971fe9952149 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part)MARC.Everest.Connectors.Util.FromWireFormat(d4dbc700cabb447c8acc3971fe9952149, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part)));
}
else if(s.LocalName == "indirectAuthority1" ) {

			object d58c1b264f46d4589a89264071c7018ff = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver), currentInteractionType, resultContext); instance.IndirectAuthority1.Add(d58c1b264f46d4589a89264071c7018ff is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver)d58c1b264f46d4589a89264071c7018ff : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver)MARC.Everest.Connectors.Util.FromWireFormat(d58c1b264f46d4589a89264071c7018ff, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver)));
}
else if(s.LocalName == "indirectAuthority2" ) {

			object d8a6f8de1ee7e489db4b2a56851b78362 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2), currentInteractionType, resultContext); instance.IndirectAuthority2 = d8a6f8de1ee7e489db4b2a56851b78362 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2 ? d8a6f8de1ee7e489db4b2a56851b78362 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2)MARC.Everest.Connectors.Util.FromWireFormat(d8a6f8de1ee7e489db4b2a56851b78362, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2));
}
else if(s.LocalName == "realmCode" ) {

			object df8bb223cc8124cc293dc5cc3ff190ee4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = df8bb223cc8124cc293dc5cc3ff190ee4 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? df8bb223cc8124cc293dc5cc3ff190ee4 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(df8bb223cc8124cc293dc5cc3ff190ee4, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d62f3a66d76074a2196ff378100bf6762 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d62f3a66d76074a2196ff378100bf6762 is MARC.Everest.DataTypes.II ? d62f3a66d76074a2196ff378100bf6762 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d62f3a66d76074a2196ff378100bf6762, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d0f823c5238ae41f1804baa00775697c8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d0f823c5238ae41f1804baa00775697c8 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d0f823c5238ae41f1804baa00775697c8 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d0f823c5238ae41f1804baa00775697c8, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class df649dc6457ba4b6fa6aba8a682a62df4 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Verification != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "verification", (MARC.Everest.Interfaces.IGraphable)instance.Verification, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SBJ".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SBJ", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "verification" ) {

			object d3fe67d162b3d4ece91b3342553c878b4 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification), currentInteractionType, resultContext); instance.Verification = d3fe67d162b3d4ece91b3342553c878b4 is MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification ? d3fe67d162b3d4ece91b3342553c878b4 as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification : (MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification)MARC.Everest.Connectors.Util.FromWireFormat(d3fe67d162b3d4ece91b3342553c878b4, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification));
}
else if(s.LocalName == "realmCode" ) {

			object dbb0c7b71c3b14cd3ba4b1475b6e38e0e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dbb0c7b71c3b14cd3ba4b1475b6e38e0e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dbb0c7b71c3b14cd3ba4b1475b6e38e0e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dbb0c7b71c3b14cd3ba4b1475b6e38e0e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object ddb0354da9a284a3e80044265806b464b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = ddb0354da9a284a3e80044265806b464b is MARC.Everest.DataTypes.II ? ddb0354da9a284a3e80044265806b464b as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(ddb0354da9a284a3e80044265806b464b, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d4e1bd2dafe7943c1adff7fb9072fb6fd = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d4e1bd2dafe7943c1adff7fb9072fb6fd is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d4e1bd2dafe7943c1adff7fb9072fb6fd as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4e1bd2dafe7943c1adff7fb9072fb6fd, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject3 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class df8ed4a10fe9b413c97d549938141404d : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EligibilityStatusObservation != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "eligibilityStatusObservation", (MARC.Everest.Interfaces.IGraphable)instance.EligibilityStatusObservation, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SBJ".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SBJ", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "eligibilityStatusObservation" ) {

			object dc346dd1bc9a6437b8dcf97f306a97ef9 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation), currentInteractionType, resultContext); instance.EligibilityStatusObservation = dc346dd1bc9a6437b8dcf97f306a97ef9 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation ? dc346dd1bc9a6437b8dcf97f306a97ef9 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation)MARC.Everest.Connectors.Util.FromWireFormat(dc346dd1bc9a6437b8dcf97f306a97ef9, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation));
}
else if(s.LocalName == "realmCode" ) {

			object d7f08dde9e02642328548ab625f05a38f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d7f08dde9e02642328548ab625f05a38f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d7f08dde9e02642328548ab625f05a38f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d7f08dde9e02642328548ab625f05a38f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dd990180cdbf846b7b38d253d74769364 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dd990180cdbf846b7b38d253d74769364 is MARC.Everest.DataTypes.II ? dd990180cdbf846b7b38d253d74769364 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dd990180cdbf846b7b38d253d74769364, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dbf53166e9abf4dd387d408420d71da7b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dbf53166e9abf4dd387d408420d71da7b is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dbf53166e9abf4dd387d408420d71da7b as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dbf53166e9abf4dd387d408420d71da7b, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Subject is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class de83bf3e0c05e4528a634b0012fe23ede : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.111";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PartOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "partOrganization", (MARC.Everest.Interfaces.IGraphable)instance.PartOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PART".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PART", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d06235746857240dab805536c060ae5ca = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d06235746857240dab805536c060ae5ca is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d06235746857240dab805536c060ae5ca as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d06235746857240dab805536c060ae5ca, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d177c05d16d3a49a4af56672240b1775e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d177c05d16d3a49a4af56672240b1775e is MARC.Everest.DataTypes.CE<System.String> ? d177c05d16d3a49a4af56672240b1775e as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d177c05d16d3a49a4af56672240b1775e, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "statusCode" ) {

			object d550ab8448de74d16a4545bbb81526e35 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>), currentInteractionType, resultContext); instance.StatusCode = d550ab8448de74d16a4545bbb81526e35 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus> ? d550ab8448de74d16a4545bbb81526e35 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>)MARC.Everest.Connectors.Util.FromWireFormat(d550ab8448de74d16a4545bbb81526e35, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d6e829546568e4f8899687225e3ddc3d6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d6e829546568e4f8899687225e3ddc3d6 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d6e829546568e4f8899687225e3ddc3d6 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d6e829546568e4f8899687225e3ddc3d6, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "partOrganization" ) {

			object df0f69b492afc4bbdbb6a122d657b8e1b = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.PartOrganization = df0f69b492afc4bbdbb6a122d657b8e1b is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? df0f69b492afc4bbdbb6a122d657b8e1b as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(df0f69b492afc4bbdbb6a122d657b8e1b, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "realmCode" ) {

			object d51309ab05b924b2e9ff2f4610d35da1c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d51309ab05b924b2e9ff2f4610d35da1c is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d51309ab05b924b2e9ff2f4610d35da1c as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d51309ab05b924b2e9ff2f4610d35da1c, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dff2ada61ec7f4494bcf8d9658b4592ca = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dff2ada61ec7f4494bcf8d9658b4592ca is MARC.Everest.DataTypes.II ? dff2ada61ec7f4494bcf8d9658b4592ca as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dff2ada61ec7f4494bcf8d9658b4592ca, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d40b5c608bf2841d6a14314e7db7272a8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d40b5c608bf2841d6a14314e7db7272a8 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d40b5c608bf2841d6a14314e7db7272a8 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d40b5c608bf2841d6a14314e7db7272a8, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationContains is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d184dbf48822040aa9716d54667646db2 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CD<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value != null && !isInstanceNull) {

if(!instance.Value.IsEmpty)
			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ED>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"OBS".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "OBS", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d8d1d008e275b4b729630cf62c4e7a335 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d8d1d008e275b4b729630cf62c4e7a335 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d8d1d008e275b4b729630cf62c4e7a335 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d8d1d008e275b4b729630cf62c4e7a335, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d9b647eae259b46aa8226d4eb0da7d2d7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = d9b647eae259b46aa8226d4eb0da7d2d7 is MARC.Everest.DataTypes.CD<System.String> ? d9b647eae259b46aa8226d4eb0da7d2d7 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d9b647eae259b46aa8226d4eb0da7d2d7, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "effectiveTime" ) {

			object dd32bc584511140b7a57400708d209cc8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = dd32bc584511140b7a57400708d209cc8 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? dd32bc584511140b7a57400708d209cc8 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(dd32bc584511140b7a57400708d209cc8, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "value" ) {

			object d057a71b11f3f45ccb564657a05453383 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ED>), currentInteractionType, resultContext); instance.Value = d057a71b11f3f45ccb564657a05453383 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ED> ? d057a71b11f3f45ccb564657a05453383 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ED> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ED>)MARC.Everest.Connectors.Util.FromWireFormat(d057a71b11f3f45ccb564657a05453383, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ED>));
}
else if(s.LocalName == "realmCode" ) {

			object d31c29c9cefcc49f4bc4ab5a81dc62af5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d31c29c9cefcc49f4bc4ab5a81dc62af5 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d31c29c9cefcc49f4bc4ab5a81dc62af5 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d31c29c9cefcc49f4bc4ab5a81dc62af5, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d6fbdf7f77c9141e086366aabf1ade687 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d6fbdf7f77c9141e086366aabf1ade687 is MARC.Everest.DataTypes.II ? d6fbdf7f77c9141e086366aabf1ade687 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d6fbdf7f77c9141e086366aabf1ade687, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d68308fda85e14bf3a5b352e0eea920cc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d68308fda85e14bf3a5b352e0eea920cc is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d68308fda85e14bf3a5b352e0eea920cc as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d68308fda85e14bf3a5b352e0eea920cc, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.EligibilityStatusObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d5a39784a674b4a6b9da4b8d10f0b58f6 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.VerificationRequest != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "verificationRequest", (MARC.Everest.Interfaces.IGraphable)instance.VerificationRequest, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"FLFS".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "FLFS", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "verificationRequest" ) {

			object d307c98f86ec845f49a96d23666e9a645 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest), currentInteractionType, resultContext); instance.VerificationRequest = d307c98f86ec845f49a96d23666e9a645 is MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest ? d307c98f86ec845f49a96d23666e9a645 as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest : (MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest)MARC.Everest.Connectors.Util.FromWireFormat(d307c98f86ec845f49a96d23666e9a645, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest));
}
else if(s.LocalName == "realmCode" ) {

			object df09fc6e8de1344aa880be3066cd05974 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = df09fc6e8de1344aa880be3066cd05974 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? df09fc6e8de1344aa880be3066cd05974 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(df09fc6e8de1344aa880be3066cd05974, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object db1cf9cf160af4627b9cdcb3748e855c9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = db1cf9cf160af4627b9cdcb3748e855c9 is MARC.Everest.DataTypes.II ? db1cf9cf160af4627b9cdcb3748e855c9 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(db1cf9cf160af4627b9cdcb3748e855c9, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d93864a5f040746bf9d89fc509dbdf1d2 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d93864a5f040746bf9d89fc509dbdf1d2 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d93864a5f040746bf9d89fc509dbdf1d2 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d93864a5f040746bf9d89fc509dbdf1d2, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d30ad7fc5a2404df7a8fba5252194da2a : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SignatureCode != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.SignatureCode.CodeSystem) && instance.SignatureCode.NullFlavor == null) instance.SignatureCode.CodeSystem = "";
			retVal = Host.WriteElementUtil(s, "signatureCode", (MARC.Everest.Interfaces.IGraphable)instance.SignatureCode, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SignatureText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "signatureText", (MARC.Everest.Interfaces.IGraphable)instance.SignatureText, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedEntity != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "assignedEntity", (MARC.Everest.Interfaces.IGraphable)instance.AssignedEntity, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"PPRF".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "PPRF", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "signatureCode" ) {

			object d14bb894abbdb4545b4cc8c84ddeb9a1b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.SignatureCode = d14bb894abbdb4545b4cc8c84ddeb9a1b is MARC.Everest.DataTypes.CE<System.String> ? d14bb894abbdb4545b4cc8c84ddeb9a1b as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d14bb894abbdb4545b4cc8c84ddeb9a1b, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "signatureText" ) {

			object d11031525e9f74201a94e9e41e2f13489 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.SignatureText = d11031525e9f74201a94e9e41e2f13489 is MARC.Everest.DataTypes.ED ? d11031525e9f74201a94e9e41e2f13489 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d11031525e9f74201a94e9e41e2f13489, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "assignedEntity" ) {

			object de614200062c2452aadd8c800a7fa318f = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity), currentInteractionType, resultContext); instance.AssignedEntity = de614200062c2452aadd8c800a7fa318f is MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity ? de614200062c2452aadd8c800a7fa318f as MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity)MARC.Everest.Connectors.Util.FromWireFormat(de614200062c2452aadd8c800a7fa318f, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity));
}
else if(s.LocalName == "realmCode" ) {

			object d6ff4c792f1dc46d0a63e63b2b05d139c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d6ff4c792f1dc46d0a63e63b2b05d139c is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d6ff4c792f1dc46d0a63e63b2b05d139c as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d6ff4c792f1dc46d0a63e63b2b05d139c, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d37acf285326a4314a0993f778a7ad284 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d37acf285326a4314a0993f778a7ad284 is MARC.Everest.DataTypes.II ? d37acf285326a4314a0993f778a7ad284 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d37acf285326a4314a0993f778a7ad284, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d112d8a765bd04152a2bb673b81fb74c3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d112d8a765bd04152a2bb673b81fb74c3 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d112d8a765bd04152a2bb673b81fb74c3 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d112d8a765bd04152a2bb673b81fb74c3, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d790ba5a3572d4f0d8f706927fd6bd62d : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("Organization", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.1060";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ORG".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ORG", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object da36086fff0af4749a8c6752e7f6a15eb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = da36086fff0af4749a8c6752e7f6a15eb is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? da36086fff0af4749a8c6752e7f6a15eb as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(da36086fff0af4749a8c6752e7f6a15eb, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d16b3592efbff42fba776326801751a3a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d16b3592efbff42fba776326801751a3a is MARC.Everest.DataTypes.CE<System.String> ? d16b3592efbff42fba776326801751a3a as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d16b3592efbff42fba776326801751a3a, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "name" ) {

			object d2dbe7c8cdc0542f483f1e147dfe4ef61 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), currentInteractionType, resultContext); instance.Name = d2dbe7c8cdc0542f483f1e147dfe4ef61 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> ? d2dbe7c8cdc0542f483f1e147dfe4ef61 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>)MARC.Everest.Connectors.Util.FromWireFormat(d2dbe7c8cdc0542f483f1e147dfe4ef61, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>));
}
else if(s.LocalName == "addr" ) {

			object d64ec920b4bf547c497f4a23dc4ceaacc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d64ec920b4bf547c497f4a23dc4ceaacc is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d64ec920b4bf547c497f4a23dc4ceaacc as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d64ec920b4bf547c497f4a23dc4ceaacc, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "realmCode" ) {

			object d44228ab5b9824fe6b69933f7440e1b3e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d44228ab5b9824fe6b69933f7440e1b3e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d44228ab5b9824fe6b69933f7440e1b3e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d44228ab5b9824fe6b69933f7440e1b3e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dafba14a801f44a31b74885b20a750aec = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dafba14a801f44a31b74885b20a750aec is MARC.Everest.DataTypes.II ? dafba14a801f44a31b74885b20a750aec as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dafba14a801f44a31b74885b20a750aec, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d2fd740b2d1d74c25811ca1d18d7aa5af = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d2fd740b2d1d74c25811ca1d18d7aa5af is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d2fd740b2d1d74c25811ca1d18d7aa5af as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d2fd740b2d1d74c25811ca1d18d7aa5af, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dcbea1320485d4b38baba45c8964a2814 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.111";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.WholeOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "wholeOrganization", (MARC.Everest.Interfaces.IGraphable)instance.WholeOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PART".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PART", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dd4dc3bb31d644ce5893528d6ec78cdf0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dd4dc3bb31d644ce5893528d6ec78cdf0 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dd4dc3bb31d644ce5893528d6ec78cdf0 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dd4dc3bb31d644ce5893528d6ec78cdf0, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d04dc222e7bdf415b9f7abada465eff01 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d04dc222e7bdf415b9f7abada465eff01 is MARC.Everest.DataTypes.CE<System.String> ? d04dc222e7bdf415b9f7abada465eff01 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d04dc222e7bdf415b9f7abada465eff01, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "statusCode" ) {

			object d523ce662073549ec9678ea1917e24c3c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>), currentInteractionType, resultContext); instance.StatusCode = d523ce662073549ec9678ea1917e24c3c is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus> ? d523ce662073549ec9678ea1917e24c3c as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>)MARC.Everest.Connectors.Util.FromWireFormat(d523ce662073549ec9678ea1917e24c3c, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleStatus>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d179ffcbdedc34948a2d9a2544cf049eb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d179ffcbdedc34948a2d9a2544cf049eb is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d179ffcbdedc34948a2d9a2544cf049eb as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d179ffcbdedc34948a2d9a2544cf049eb, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "wholeOrganization" ) {

			object d39b5a3723e6c437fa489759c0ddce42d = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.WholeOrganization = d39b5a3723e6c437fa489759c0ddce42d is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d39b5a3723e6c437fa489759c0ddce42d as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d39b5a3723e6c437fa489759c0ddce42d, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "realmCode" ) {

			object dabee0463e5634a579ec111d738897993 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dabee0463e5634a579ec111d738897993 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dabee0463e5634a579ec111d738897993 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dabee0463e5634a579ec111d738897993, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d322b9652df9649e18d4ebabb354fc7ff = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d322b9652df9649e18d4ebabb354fc7ff is MARC.Everest.DataTypes.II ? d322b9652df9649e18d4ebabb354fc7ff as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d322b9652df9649e18d4ebabb354fc7ff, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dc3552f914d424be9bdc5fcc300c47cbd = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dc3552f914d424be9bdc5fcc300c47cbd is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dc3552f914d424be9bdc5fcc300c47cbd as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dc3552f914d424be9bdc5fcc300c47cbd, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.OrganizationPartOf is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dcf04940a24c04696a4561f354809c170 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("AssignedEntity", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CE<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.111";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedPrincipalChoiceList != null && !isInstanceNull) {

 if(instance.AssignedPrincipalChoiceList.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person)) {

			retVal = Host.WriteElementUtil(s, "assignedPerson", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPrincipalChoiceList, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person), context, resultContext);
}
else if(instance.AssignedPrincipalChoiceList.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization)) {

			retVal = Host.WriteElementUtil(s, "assignedOrganization", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPrincipalChoiceList, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization), context, resultContext);
}
else if(instance.AssignedPrincipalChoiceList.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device)) {

			retVal = Host.WriteElementUtil(s, "assignedDevice", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPrincipalChoiceList, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.AssignedPrincipalChoiceList.GetType()), s.ToString(), null)); }
}
if(instance.RepresentedOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "representedOrganization", (MARC.Everest.Interfaces.IGraphable)instance.RepresentedOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ASSIGNED".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ASSIGNED", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object de3a9b29ccab543248ab80ecaf806e58f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = de3a9b29ccab543248ab80ecaf806e58f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? de3a9b29ccab543248ab80ecaf806e58f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(de3a9b29ccab543248ab80ecaf806e58f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object dbc468ba441f54d8b9e7ecd7157f75f99 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = dbc468ba441f54d8b9e7ecd7157f75f99 is MARC.Everest.DataTypes.CE<System.String> ? dbc468ba441f54d8b9e7ecd7157f75f99 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dbc468ba441f54d8b9e7ecd7157f75f99, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "addr" ) {

			object d4bee5ce485db4f3c8b6f308c8a051fa7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d4bee5ce485db4f3c8b6f308c8a051fa7 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d4bee5ce485db4f3c8b6f308c8a051fa7 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d4bee5ce485db4f3c8b6f308c8a051fa7, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "assignedPerson" ) {

			object d6a8832c34e384c4fb99c4d34e5f88e65 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person), currentInteractionType, resultContext); instance.AssignedPrincipalChoiceList = d6a8832c34e384c4fb99c4d34e5f88e65 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person ? d6a8832c34e384c4fb99c4d34e5f88e65 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person)MARC.Everest.Connectors.Util.FromWireFormat(d6a8832c34e384c4fb99c4d34e5f88e65, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person));
}
else if(s.LocalName == "assignedOrganization" ) {

			object defa31c409b0a49a1aed3968585188751 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization), currentInteractionType, resultContext); instance.AssignedPrincipalChoiceList = defa31c409b0a49a1aed3968585188751 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization ? defa31c409b0a49a1aed3968585188751 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization)MARC.Everest.Connectors.Util.FromWireFormat(defa31c409b0a49a1aed3968585188751, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization));
}
else if(s.LocalName == "assignedDevice" ) {

			object dad45bdd08eed44fe9d9e1e5153de183f = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device), currentInteractionType, resultContext); instance.AssignedPrincipalChoiceList = dad45bdd08eed44fe9d9e1e5153de183f is MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device ? dad45bdd08eed44fe9d9e1e5153de183f as MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device)MARC.Everest.Connectors.Util.FromWireFormat(dad45bdd08eed44fe9d9e1e5153de183f, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device));
}
else if(s.LocalName == "representedOrganization" ) {

			object d7490f1abcf574486b893676ef4bc3553 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization), currentInteractionType, resultContext); instance.RepresentedOrganization = d7490f1abcf574486b893676ef4bc3553 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization ? d7490f1abcf574486b893676ef4bc3553 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d7490f1abcf574486b893676ef4bc3553, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150002UV01.Organization));
}
else if(s.LocalName == "realmCode" ) {

			object d1f9eca31615844cc9ff3936e6229ad9a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d1f9eca31615844cc9ff3936e6229ad9a is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d1f9eca31615844cc9ff3936e6229ad9a as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d1f9eca31615844cc9ff3936e6229ad9a, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d189c468608cf4738b6f9e5a578443037 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d189c468608cf4738b6f9e5a578443037 is MARC.Everest.DataTypes.II ? d189c468608cf4738b6f9e5a578443037 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d189c468608cf4738b6f9e5a578443037, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dc1e68f67bb434772bf35ff19439d6727 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dc1e68f67bb434772bf35ff19439d6727 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dc1e68f67bb434772bf35ff19439d6727 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dc1e68f67bb434772bf35ff19439d6727, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT090002UV01.AssignedEntity is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d0f7b47e934cc4815a27cbeaf7b7f832e : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("Verification", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.TS), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ReasonCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "reasonCode", (MARC.Everest.Interfaces.IGraphable)instance.ReasonCode, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.MethodCode != null && !isInstanceNull) {

if(!instance.MethodCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "methodCode", (MARC.Everest.Interfaces.IGraphable)instance.MethodCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PrimaryPerformer != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.PrimaryPerformer) { retVal = Host.WriteElementUtil(s, "primaryPerformer", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.InFulfillmentOf != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.InFulfillmentOf) { retVal = Host.WriteElementUtil(s, "inFulfillmentOf", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Support != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Support) { retVal = Host.WriteElementUtil(s, "support", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"OBS".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "OBS", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dfe6c8ab3d89545fd882f98e8156de713 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dfe6c8ab3d89545fd882f98e8156de713 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dfe6c8ab3d89545fd882f98e8156de713 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dfe6c8ab3d89545fd882f98e8156de713, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d2b0169f800d441cbae19e0ef6b5acb15 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = d2b0169f800d441cbae19e0ef6b5acb15 is MARC.Everest.DataTypes.CD<System.String> ? d2b0169f800d441cbae19e0ef6b5acb15 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d2b0169f800d441cbae19e0ef6b5acb15, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "statusCode" ) {

			object d7469b81f11ad4c5280ee14eee319f03c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), currentInteractionType, resultContext); instance.StatusCode = d7469b81f11ad4c5280ee14eee319f03c is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> ? d7469b81f11ad4c5280ee14eee319f03c as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>)MARC.Everest.Connectors.Util.FromWireFormat(d7469b81f11ad4c5280ee14eee319f03c, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d9574a02793a245a28735b5a9313ade1f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.TS), currentInteractionType, resultContext); instance.EffectiveTime = d9574a02793a245a28735b5a9313ade1f is MARC.Everest.DataTypes.TS ? d9574a02793a245a28735b5a9313ade1f as MARC.Everest.DataTypes.TS : (MARC.Everest.DataTypes.TS)MARC.Everest.Connectors.Util.FromWireFormat(d9574a02793a245a28735b5a9313ade1f, typeof(MARC.Everest.DataTypes.TS));
}
else if(s.LocalName == "reasonCode" ) {

			object d72bb8b240d51475fbf35e122651497b5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.ReasonCode = d72bb8b240d51475fbf35e122651497b5 is MARC.Everest.DataTypes.CE<System.String> ? d72bb8b240d51475fbf35e122651497b5 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d72bb8b240d51475fbf35e122651497b5, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "value" ) {

			object dfc3a555db89a419aae734e109842c4aa = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Value = dfc3a555db89a419aae734e109842c4aa is MARC.Everest.DataTypes.CE<System.String> ? dfc3a555db89a419aae734e109842c4aa as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dfc3a555db89a419aae734e109842c4aa, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "methodCode" ) {

			object d484e0f7e50d7419b9f3e570d58819964 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.MethodCode = d484e0f7e50d7419b9f3e570d58819964 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? d484e0f7e50d7419b9f3e570d58819964 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d484e0f7e50d7419b9f3e570d58819964, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "primaryPerformer" ) {

			object d52400f9711d444a88f6958e98f457276 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer), currentInteractionType, resultContext); instance.PrimaryPerformer.Add(d52400f9711d444a88f6958e98f457276 is MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer)d52400f9711d444a88f6958e98f457276 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer)MARC.Everest.Connectors.Util.FromWireFormat(d52400f9711d444a88f6958e98f457276, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.PrimaryPerformer)));
}
else if(s.LocalName == "inFulfillmentOf" ) {

			object dfd64d3a8764247b4a4bff82b1cf6fba9 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf), currentInteractionType, resultContext); instance.InFulfillmentOf.Add(dfd64d3a8764247b4a4bff82b1cf6fba9 is MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf)dfd64d3a8764247b4a4bff82b1cf6fba9 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf)MARC.Everest.Connectors.Util.FromWireFormat(dfd64d3a8764247b4a4bff82b1cf6fba9, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InFulfillmentOf)));
}
else if(s.LocalName == "support" ) {

			object db020ac8f4d484d0a9b3b34cea8cede0b = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support), currentInteractionType, resultContext); instance.Support.Add(db020ac8f4d484d0a9b3b34cea8cede0b is MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support)db020ac8f4d484d0a9b3b34cea8cede0b : (MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support)MARC.Everest.Connectors.Util.FromWireFormat(db020ac8f4d484d0a9b3b34cea8cede0b, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support)));
}
else if(s.LocalName == "realmCode" ) {

			object da8714f022b314308a1d8bbcb71659c58 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = da8714f022b314308a1d8bbcb71659c58 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? da8714f022b314308a1d8bbcb71659c58 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(da8714f022b314308a1d8bbcb71659c58, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d26b08a16db2448ed984da9651d5deb36 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d26b08a16db2448ed984da9651d5deb36 is MARC.Everest.DataTypes.II ? d26b08a16db2448ed984da9651d5deb36 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d26b08a16db2448ed984da9651d5deb36, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object da17632d0f8064231ad004c52ef93bea8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = da17632d0f8064231ad004c52ef93bea8 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? da17632d0f8064231ad004c52ef93bea8 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(da17632d0f8064231ad004c52ef93bea8, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Verification is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dc1ad22518ef64db19fca94a67fbf5c02 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("Place", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Desc != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "desc", (MARC.Everest.Interfaces.IGraphable)instance.Desc, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.DirectionsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "directionsText", (MARC.Everest.Interfaces.IGraphable)instance.DirectionsText, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PositionText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "positionText", (MARC.Everest.Interfaces.IGraphable)instance.PositionText, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.GpsText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "gpsText", (MARC.Everest.Interfaces.IGraphable)instance.GpsText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AsLocatedEntityPartOf != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.AsLocatedEntityPartOf) { retVal = Host.WriteElementUtil(s, "asLocatedEntityPartOf", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LocatedEntityHasParts != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.LocatedEntityHasParts) { retVal = Host.WriteElementUtil(s, "locatedEntityHasParts", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PLC".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PLC", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d6ef498db27d94d23a18de04f005b3ddd = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d6ef498db27d94d23a18de04f005b3ddd is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d6ef498db27d94d23a18de04f005b3ddd as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d6ef498db27d94d23a18de04f005b3ddd, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d781cf7f139d04be0bea871dd5f752bb1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d781cf7f139d04be0bea871dd5f752bb1 is MARC.Everest.DataTypes.CE<System.String> ? d781cf7f139d04be0bea871dd5f752bb1 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d781cf7f139d04be0bea871dd5f752bb1, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "name" ) {

			object d4235c35d5b0f4756a0a08cd42234a62f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>), currentInteractionType, resultContext); instance.Name = d4235c35d5b0f4756a0a08cd42234a62f is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> ? d4235c35d5b0f4756a0a08cd42234a62f as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>)MARC.Everest.Connectors.Util.FromWireFormat(d4235c35d5b0f4756a0a08cd42234a62f, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.EN>));
}
else if(s.LocalName == "desc" ) {

			object dd104c61bad5c4b4ba9dcffec4b6bb735 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.Desc = dd104c61bad5c4b4ba9dcffec4b6bb735 is MARC.Everest.DataTypes.ED ? dd104c61bad5c4b4ba9dcffec4b6bb735 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(dd104c61bad5c4b4ba9dcffec4b6bb735, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "directionsText" ) {

			object d18d4dee30f6d4524a1b20625a774420a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.DirectionsText = d18d4dee30f6d4524a1b20625a774420a is MARC.Everest.DataTypes.ED ? d18d4dee30f6d4524a1b20625a774420a as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d18d4dee30f6d4524a1b20625a774420a, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "positionText" ) {

			object d348cb2d4936344c69ae290cc71d25e8b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.PositionText = d348cb2d4936344c69ae290cc71d25e8b is MARC.Everest.DataTypes.ED ? d348cb2d4936344c69ae290cc71d25e8b as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d348cb2d4936344c69ae290cc71d25e8b, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "gpsText" ) {

			object dd549c9e406cb452dbe184d60cff9dfe1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.GpsText = dd549c9e406cb452dbe184d60cff9dfe1 is MARC.Everest.DataTypes.ST ? dd549c9e406cb452dbe184d60cff9dfe1 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(dd549c9e406cb452dbe184d60cff9dfe1, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "asLocatedEntityPartOf" ) {

			object d83c8f6a04e0e40dbaf7f059bec9386c7 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf), currentInteractionType, resultContext); instance.AsLocatedEntityPartOf.Add(d83c8f6a04e0e40dbaf7f059bec9386c7 is MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf)d83c8f6a04e0e40dbaf7f059bec9386c7 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf)MARC.Everest.Connectors.Util.FromWireFormat(d83c8f6a04e0e40dbaf7f059bec9386c7, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityPartOf)));
}
else if(s.LocalName == "locatedEntityHasParts" ) {

			object d415113a2a15c4536a600599f927586f2 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts), currentInteractionType, resultContext); instance.LocatedEntityHasParts.Add(d415113a2a15c4536a600599f927586f2 is MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts)d415113a2a15c4536a600599f927586f2 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts)MARC.Everest.Connectors.Util.FromWireFormat(d415113a2a15c4536a600599f927586f2, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.LocatedEntityHasParts)));
}
else if(s.LocalName == "realmCode" ) {

			object de12da0f9a7424f18bcc1a56b0c444d8d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = de12da0f9a7424f18bcc1a56b0c444d8d is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? de12da0f9a7424f18bcc1a56b0c444d8d as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(de12da0f9a7424f18bcc1a56b0c444d8d, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dacfac6b041fd4ce4b4a10d8c26e6ef94 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dacfac6b041fd4ce4b4a10d8c26e6ef94 is MARC.Everest.DataTypes.II ? dacfac6b041fd4ce4b4a10d8c26e6ef94 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dacfac6b041fd4ce4b4a10d8c26e6ef94, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object da39ceea97e37472f9e31dbec3859d21c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = da39ceea97e37472f9e31dbec3859d21c is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? da39ceea97e37472f9e31dbec3859d21c as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(da39ceea97e37472f9e31dbec3859d21c, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT710000UV01.Place is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9b938882a63543bf8222fd62eee86ee5 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.InformationProvision != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "informationProvision", (MARC.Everest.Interfaces.IGraphable)instance.InformationProvision, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SPRT".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SPRT", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "informationProvision" ) {

			object dca0665df19904e02bd212d5d3d36e4bc = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision), currentInteractionType, resultContext); instance.InformationProvision = dca0665df19904e02bd212d5d3d36e4bc is MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision ? dca0665df19904e02bd212d5d3d36e4bc as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision : (MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision)MARC.Everest.Connectors.Util.FromWireFormat(dca0665df19904e02bd212d5d3d36e4bc, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision));
}
else if(s.LocalName == "realmCode" ) {

			object d751912425dec41aca15a5079f0b8e76b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d751912425dec41aca15a5079f0b8e76b is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d751912425dec41aca15a5079f0b8e76b as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d751912425dec41aca15a5079f0b8e76b, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d65574972a18441198604e67ead5cade3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d65574972a18441198604e67ead5cade3 is MARC.Everest.DataTypes.II ? d65574972a18441198604e67ead5cade3 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d65574972a18441198604e67ead5cade3, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object daedcc6acede04936bf5c886dfd0d38bd = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = daedcc6acede04936bf5c886dfd0d38bd is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? daedcc6acede04936bf5c886dfd0d38bd as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(daedcc6acede04936bf5c886dfd0d38bd, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Support is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d28e3d64e56e542fabb88a9575e7b3d5d : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"OBS".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "OBS", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"RQO".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "RQO", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object db5e82a8238e0493a9c21a7decb245045 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = db5e82a8238e0493a9c21a7decb245045 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? db5e82a8238e0493a9c21a7decb245045 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(db5e82a8238e0493a9c21a7decb245045, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "realmCode" ) {

			object dc09c7be05f0345e68e270bcfea918be9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dc09c7be05f0345e68e270bcfea918be9 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dc09c7be05f0345e68e270bcfea918be9 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dc09c7be05f0345e68e270bcfea918be9, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d8532709f8ff64a13ab0a94f5fca30527 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d8532709f8ff64a13ab0a94f5fca30527 is MARC.Everest.DataTypes.II ? d8532709f8ff64a13ab0a94f5fca30527 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d8532709f8ff64a13ab0a94f5fca30527, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dfd6661adb51f49c49da3c8142d3b081a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dfd6661adb51f49c49da3c8142d3b081a is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dfd6661adb51f49c49da3c8142d3b081a as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dfd6661adb51f49c49da3c8142d3b081a, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.VerificationRequest is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dcd32453fcbab48e1bcc297a2c57339bf : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Responsible != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "responsible", (MARC.Everest.Interfaces.IGraphable)instance.Responsible, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"PRF".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "PRF", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "responsible" ) {

			object d279b1ab73ea14b42808abf8aa9af20ba = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible), currentInteractionType, resultContext); instance.Responsible = d279b1ab73ea14b42808abf8aa9af20ba is MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible ? d279b1ab73ea14b42808abf8aa9af20ba as MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible : (MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible)MARC.Everest.Connectors.Util.FromWireFormat(d279b1ab73ea14b42808abf8aa9af20ba, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible));
}
else if(s.LocalName == "realmCode" ) {

			object de2cf2928112c4c3e8febd520fdc49302 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = de2cf2928112c4c3e8febd520fdc49302 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? de2cf2928112c4c3e8febd520fdc49302 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(de2cf2928112c4c3e8febd520fdc49302, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d811ef0c824824e47bf339752dfaa6f6b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d811ef0c824824e47bf339752dfaa6f6b is MARC.Everest.DataTypes.II ? d811ef0c824824e47bf339752dfaa6f6b as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d811ef0c824824e47bf339752dfaa6f6b, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object df4a62caaa7e94d2fa73de9622a5ec5f3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = df4a62caaa7e94d2fa73de9622a5ec5f3 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? df4a62caaa7e94d2fa73de9622a5ec5f3 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(df4a62caaa7e94d2fa73de9622a5ec5f3, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9ad248c8115f468b80e7df1784aeff0b : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Performer != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "performer", (MARC.Everest.Interfaces.IGraphable)instance.Performer, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"INFRM".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "INFRM", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "performer" ) {

			object d8e34f6bfeb6a4d43a6a72e6685b1ae59 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer), currentInteractionType, resultContext); instance.Performer = d8e34f6bfeb6a4d43a6a72e6685b1ae59 is MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer ? d8e34f6bfeb6a4d43a6a72e6685b1ae59 as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer : (MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer)MARC.Everest.Connectors.Util.FromWireFormat(d8e34f6bfeb6a4d43a6a72e6685b1ae59, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.Performer));
}
else if(s.LocalName == "realmCode" ) {

			object dc72469066497488c8d87b7a3d482e0f4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dc72469066497488c8d87b7a3d482e0f4 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dc72469066497488c8d87b7a3d482e0f4 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dc72469066497488c8d87b7a3d482e0f4, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dab036d9b427c480cae5adad26cecf4ef = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dab036d9b427c480cae5adad26cecf4ef is MARC.Everest.DataTypes.II ? dab036d9b427c480cae5adad26cecf4ef as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dab036d9b427c480cae5adad26cecf4ef, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d4a76838aae0f45f5b6d0c9eec1c8ebf6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d4a76838aae0f45f5b6d0c9eec1c8ebf6 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d4a76838aae0f45f5b6d0c9eec1c8ebf6 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4a76838aae0f45f5b6d0c9eec1c8ebf6, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT810000UV.InformationProvision is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da6fbb1bca21640079eb5041d08c0e78b : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PriorityNumber != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "priorityNumber", (MARC.Everest.Interfaces.IGraphable)instance.PriorityNumber, typeof(MARC.Everest.DataTypes.INT), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PersonalRelationship != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "personalRelationship", (MARC.Everest.Interfaces.IGraphable)instance.PersonalRelationship, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"PART".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "PART", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "priorityNumber" ) {

			object d36e310ad261640549e1638ad6b720909 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.INT), currentInteractionType, resultContext); instance.PriorityNumber = d36e310ad261640549e1638ad6b720909 is MARC.Everest.DataTypes.INT ? d36e310ad261640549e1638ad6b720909 as MARC.Everest.DataTypes.INT : (MARC.Everest.DataTypes.INT)MARC.Everest.Connectors.Util.FromWireFormat(d36e310ad261640549e1638ad6b720909, typeof(MARC.Everest.DataTypes.INT));
}
else if(s.LocalName == "effectiveTime" ) {

			object d1d921c2a3cac4135af9f1f1440ab3d8a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d1d921c2a3cac4135af9f1f1440ab3d8a is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d1d921c2a3cac4135af9f1f1440ab3d8a as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d1d921c2a3cac4135af9f1f1440ab3d8a, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "personalRelationship" ) {

			object de3856ca8000346e78b92a8f796448c86 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship), currentInteractionType, resultContext); instance.PersonalRelationship = de3856ca8000346e78b92a8f796448c86 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship ? de3856ca8000346e78b92a8f796448c86 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship)MARC.Everest.Connectors.Util.FromWireFormat(de3856ca8000346e78b92a8f796448c86, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship));
}
else if(s.LocalName == "realmCode" ) {

			object d15594cc79b924672ad646ba5fd6d2123 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d15594cc79b924672ad646ba5fd6d2123 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d15594cc79b924672ad646ba5fd6d2123 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d15594cc79b924672ad646ba5fd6d2123, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d4f91ca055fa14cc8b54624222f5489b3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d4f91ca055fa14cc8b54624222f5489b3 is MARC.Everest.DataTypes.II ? d4f91ca055fa14cc8b54624222f5489b3 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d4f91ca055fa14cc8b54624222f5489b3, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d97a17c7e657840c3b479a076107c4ce0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d97a17c7e657840c3b479a076107c4ce0 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d97a17c7e657840c3b479a076107c4ce0 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d97a17c7e657840c3b479a076107c4ce0, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Part is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da6fb38c0cf4541479761ca7ecc1ece86 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ResponsibleParty != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "responsibleParty", (MARC.Everest.Interfaces.IGraphable)instance.ResponsibleParty, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"INDAUTH".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "INDAUTH", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "responsibleParty" ) {

			object d370a739fb31e4e88b6e9681214a9ffef = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty), currentInteractionType, resultContext); instance.ResponsibleParty = d370a739fb31e4e88b6e9681214a9ffef is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty ? d370a739fb31e4e88b6e9681214a9ffef as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty)MARC.Everest.Connectors.Util.FromWireFormat(d370a739fb31e4e88b6e9681214a9ffef, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty));
}
else if(s.LocalName == "realmCode" ) {

			object dffd43f9747ab4a12aff45fc4b6f701db = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dffd43f9747ab4a12aff45fc4b6f701db is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dffd43f9747ab4a12aff45fc4b6f701db as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dffd43f9747ab4a12aff45fc4b6f701db, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dd826ede0f5cc4f1ea8cb78deaceba091 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dd826ede0f5cc4f1ea8cb78deaceba091 is MARC.Everest.DataTypes.II ? dd826ede0f5cc4f1ea8cb78deaceba091 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dd826ede0f5cc4f1ea8cb78deaceba091, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object de979602699ee4e51aafad36505af0dac = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = de979602699ee4e51aafad36505af0dac is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? de979602699ee4e51aafad36505af0dac as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(de979602699ee4e51aafad36505af0dac, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d6ca2e3591e1a40bba96087a1a24a1c3f : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CE<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.RelationshipHolder != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "relationshipHolder", (MARC.Everest.Interfaces.IGraphable)instance.RelationshipHolder, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PersonalRelationshipWith != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "personalRelationshipWith", (MARC.Everest.Interfaces.IGraphable)instance.PersonalRelationshipWith, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PRS".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PRS", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d8d8539ee5344492081a6a0d859c388ad = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d8d8539ee5344492081a6a0d859c388ad is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d8d8539ee5344492081a6a0d859c388ad as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d8d8539ee5344492081a6a0d859c388ad, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object dd67367774f3941acbf7dfca1b2a69164 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = dd67367774f3941acbf7dfca1b2a69164 is MARC.Everest.DataTypes.CE<System.String> ? dd67367774f3941acbf7dfca1b2a69164 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dd67367774f3941acbf7dfca1b2a69164, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "relationshipHolder" ) {

			object d03f6d05036c647b984272e9d5a2351ce = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person), currentInteractionType, resultContext); instance.RelationshipHolder = d03f6d05036c647b984272e9d5a2351ce is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person ? d03f6d05036c647b984272e9d5a2351ce as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person)MARC.Everest.Connectors.Util.FromWireFormat(d03f6d05036c647b984272e9d5a2351ce, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person));
}
else if(s.LocalName == "personalRelationshipWith" ) {

			object d771dcd7ccdf84e628d037441337ca57d = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person), currentInteractionType, resultContext); instance.PersonalRelationshipWith = d771dcd7ccdf84e628d037441337ca57d is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person ? d771dcd7ccdf84e628d037441337ca57d as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person)MARC.Everest.Connectors.Util.FromWireFormat(d771dcd7ccdf84e628d037441337ca57d, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person));
}
else if(s.LocalName == "realmCode" ) {

			object d2c1e9f65f02942ed9f3f0d0c70ee6c31 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d2c1e9f65f02942ed9f3f0d0c70ee6c31 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d2c1e9f65f02942ed9f3f0d0c70ee6c31 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d2c1e9f65f02942ed9f3f0d0c70ee6c31, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object df2d0b5e10945459691e14d229907275f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = df2d0b5e10945459691e14d229907275f is MARC.Everest.DataTypes.II ? df2d0b5e10945459691e14d229907275f as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(df2d0b5e10945459691e14d229907275f, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object df2aa4ab5723640c0a4213c97c01bdbd4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = df2aa4ab5723640c0a4213c97c01bdbd4 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? df2aa4ab5723640c0a4213c97c01bdbd4 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(df2aa4ab5723640c0a4213c97c01bdbd4, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PersonalRelationship is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class df1e6eddca3e847a39035b1397c9d4798 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("Responsible", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AgentEntityChoicePlayer != null && !isInstanceNull) {

 if(instance.AgentEntityChoicePlayer.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization)) {

			retVal = Host.WriteElementUtil(s, "agentOrganization", (MARC.Everest.Interfaces.IGraphable)instance.AgentEntityChoicePlayer, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization), context, resultContext);
}
else if(instance.AgentEntityChoicePlayer.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person)) {

			retVal = Host.WriteElementUtil(s, "agentPerson", (MARC.Everest.Interfaces.IGraphable)instance.AgentEntityChoicePlayer, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person), context, resultContext);
}
else if(instance.AgentEntityChoicePlayer.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT140007UV.Device)) {

			retVal = Host.WriteElementUtil(s, "agentDevice", (MARC.Everest.Interfaces.IGraphable)instance.AgentEntityChoicePlayer, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT140007UV.Device), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.AgentEntityChoicePlayer.GetType()), s.ToString(), null)); }
}
if(instance.RepresentedEntityChoiceScoper != null && !isInstanceNull) {

 if(instance.RepresentedEntityChoiceScoper.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization)) {

			retVal = Host.WriteElementUtil(s, "representedOrganization", (MARC.Everest.Interfaces.IGraphable)instance.RepresentedEntityChoiceScoper, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization), context, resultContext);
}
else if(instance.RepresentedEntityChoiceScoper.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person)) {

			retVal = Host.WriteElementUtil(s, "representedPerson", (MARC.Everest.Interfaces.IGraphable)instance.RepresentedEntityChoiceScoper, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.RepresentedEntityChoiceScoper.GetType()), s.ToString(), null)); }
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"AGNT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "AGNT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d3e7168f020e74a3196ade60fc7724a8d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d3e7168f020e74a3196ade60fc7724a8d is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d3e7168f020e74a3196ade60fc7724a8d as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d3e7168f020e74a3196ade60fc7724a8d, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object ddf03da7ee92b466298a1ae5773fa9deb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = ddf03da7ee92b466298a1ae5773fa9deb is MARC.Everest.DataTypes.CE<System.String> ? ddf03da7ee92b466298a1ae5773fa9deb as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(ddf03da7ee92b466298a1ae5773fa9deb, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d58002265a2e24a8bbac797046533557e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d58002265a2e24a8bbac797046533557e is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d58002265a2e24a8bbac797046533557e as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d58002265a2e24a8bbac797046533557e, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "agentOrganization" ) {

			object d43f9ceeb24ba4cdcab8fc717adb1d7db = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization), currentInteractionType, resultContext); instance.AgentEntityChoicePlayer = d43f9ceeb24ba4cdcab8fc717adb1d7db is MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization ? d43f9ceeb24ba4cdcab8fc717adb1d7db as MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d43f9ceeb24ba4cdcab8fc717adb1d7db, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization));
}
else if(s.LocalName == "agentPerson" ) {

			object da90f0c4f7fb145699dccee0616ef5360 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person), currentInteractionType, resultContext); instance.AgentEntityChoicePlayer = da90f0c4f7fb145699dccee0616ef5360 is MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person ? da90f0c4f7fb145699dccee0616ef5360 as MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person)MARC.Everest.Connectors.Util.FromWireFormat(da90f0c4f7fb145699dccee0616ef5360, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person));
}
else if(s.LocalName == "agentDevice" ) {

			object dea421a7dbef14fc096b7c19f37771a12 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT140007UV.Device), currentInteractionType, resultContext); instance.AgentEntityChoicePlayer = dea421a7dbef14fc096b7c19f37771a12 is MARC.Everest.RMIM.UV.NE2008.COCT_MT140007UV.Device ? dea421a7dbef14fc096b7c19f37771a12 as MARC.Everest.RMIM.UV.NE2008.COCT_MT140007UV.Device : (MARC.Everest.RMIM.UV.NE2008.COCT_MT140007UV.Device)MARC.Everest.Connectors.Util.FromWireFormat(dea421a7dbef14fc096b7c19f37771a12, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT140007UV.Device));
}
else if(s.LocalName == "representedOrganization" ) {

			object d99253710b2a64628bef0a3468c9d8345 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization), currentInteractionType, resultContext); instance.RepresentedEntityChoiceScoper = d99253710b2a64628bef0a3468c9d8345 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization ? d99253710b2a64628bef0a3468c9d8345 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d99253710b2a64628bef0a3468c9d8345, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150007UV.Organization));
}
else if(s.LocalName == "representedPerson" ) {

			object dae14952427454383a8c54c1c16394670 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person), currentInteractionType, resultContext); instance.RepresentedEntityChoiceScoper = dae14952427454383a8c54c1c16394670 is MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person ? dae14952427454383a8c54c1c16394670 as MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person)MARC.Everest.Connectors.Util.FromWireFormat(dae14952427454383a8c54c1c16394670, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT030207UV.Person));
}
else if(s.LocalName == "realmCode" ) {

			object dcf0b07aa888148ca89f7c236452cd0bf = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dcf0b07aa888148ca89f7c236452cd0bf is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dcf0b07aa888148ca89f7c236452cd0bf as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dcf0b07aa888148ca89f7c236452cd0bf, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d52fbedbff1204b2aa898dd4883eb31b3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d52fbedbff1204b2aa898dd4883eb31b3 is MARC.Everest.DataTypes.II ? d52fbedbff1204b2aa898dd4883eb31b3 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d52fbedbff1204b2aa898dd4883eb31b3, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d892c3bf4441a49ad8e09f2f9ab059670 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d892c3bf4441a49ad8e09f2f9ab059670 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d892c3bf4441a49ad8e09f2f9ab059670 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d892c3bf4441a49ad8e09f2f9ab059670, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT040008UV.Responsible is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dcc9f4d8ae2da499d853ecfa0bdc8ce8a : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PolicyHolder != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "policyHolder", (MARC.Everest.Interfaces.IGraphable)instance.PolicyHolder, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"INDAUTH".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "INDAUTH", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "policyHolder" ) {

			object dac9f187c34d94007b7c92b0406d4382f = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder), currentInteractionType, resultContext); instance.PolicyHolder = dac9f187c34d94007b7c92b0406d4382f is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder ? dac9f187c34d94007b7c92b0406d4382f as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder)MARC.Everest.Connectors.Util.FromWireFormat(dac9f187c34d94007b7c92b0406d4382f, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder));
}
else if(s.LocalName == "realmCode" ) {

			object d2e0ad002fa704df49b196c4cd6087cc8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d2e0ad002fa704df49b196c4cd6087cc8 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d2e0ad002fa704df49b196c4cd6087cc8 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d2e0ad002fa704df49b196c4cd6087cc8, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object de1691278738d473f9f08b9151315797b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = de1691278738d473f9f08b9151315797b is MARC.Everest.DataTypes.II ? de1691278738d473f9f08b9151315797b as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(de1691278738d473f9f08b9151315797b, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object da403a141a5a54c3ca447559de8540e56 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = da403a141a5a54c3ca447559de8540e56 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? da403a141a5a54c3ca447559de8540e56 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(da403a141a5a54c3ca447559de8540e56, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.IndirectAuthorithyOver2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9c49b1c7f6014ca395b7380fdab46235 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.DeterminerCode != null && !isInstanceNull) {

			s.WriteAttributeString("determinerCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.DeterminerCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name == null && Host.CreateRequiredElements) { instance.Name = new MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.PN>(); instance.Name.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.PN>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.BirthTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "birthTime", (MARC.Everest.Interfaces.IGraphable)instance.BirthTime, typeof(MARC.Everest.DataTypes.TS), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PSN".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PSN", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityClass>)); }
if(s.GetAttribute("determinerCode") != null){ if(!"INSTANCE".Equals(s.GetAttribute("determinerCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("determinerCode"), "INSTANCE", false, s.ToString()));  instance.DeterminerCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("determinerCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.EntityDeterminer>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "name" ) {

			object dfdfdbe2ab8c046568ebbdc96dc9d0d86 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.PN>), currentInteractionType, resultContext); instance.Name = dfdfdbe2ab8c046568ebbdc96dc9d0d86 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.PN> ? dfdfdbe2ab8c046568ebbdc96dc9d0d86 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.PN> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.PN>)MARC.Everest.Connectors.Util.FromWireFormat(dfdfdbe2ab8c046568ebbdc96dc9d0d86, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.PN>));
}
else if(s.LocalName == "telecom" ) {

			object df62f69526a984a378642b3629e0b4317 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = df62f69526a984a378642b3629e0b4317 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? df62f69526a984a378642b3629e0b4317 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(df62f69526a984a378642b3629e0b4317, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "birthTime" ) {

			object de0c39e243ea24e67a2a999b4eeaffbbb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.TS), currentInteractionType, resultContext); instance.BirthTime = de0c39e243ea24e67a2a999b4eeaffbbb is MARC.Everest.DataTypes.TS ? de0c39e243ea24e67a2a999b4eeaffbbb as MARC.Everest.DataTypes.TS : (MARC.Everest.DataTypes.TS)MARC.Everest.Connectors.Util.FromWireFormat(de0c39e243ea24e67a2a999b4eeaffbbb, typeof(MARC.Everest.DataTypes.TS));
}
else if(s.LocalName == "addr" ) {

			object d85eb9805c3a146c5843498c481df86d1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d85eb9805c3a146c5843498c481df86d1 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d85eb9805c3a146c5843498c481df86d1 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d85eb9805c3a146c5843498c481df86d1, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "realmCode" ) {

			object dfd7963b7cfb14a939937d3bcb6cf68b8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dfd7963b7cfb14a939937d3bcb6cf68b8 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dfd7963b7cfb14a939937d3bcb6cf68b8 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dfd7963b7cfb14a939937d3bcb6cf68b8, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object db6816688765048aab28e2f2720ac7389 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = db6816688765048aab28e2f2720ac7389 is MARC.Everest.DataTypes.II ? db6816688765048aab28e2f2720ac7389 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(db6816688765048aab28e2f2720ac7389, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d9af289b11cfa48309f69f4493241295f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d9af289b11cfa48309f69f4493241295f is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d9af289b11cfa48309f69f4493241295f as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d9af289b11cfa48309f69f4493241295f, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.DeterminerCode == null || instance.DeterminerCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property DeterminerCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Name == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Name in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d1b5936e4d2004d36a8f332e0a2e8d670 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PolicyHolder != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "policyHolder", (MARC.Everest.Interfaces.IGraphable)instance.PolicyHolder, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"HLD".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "HLD", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "policyHolder" ) {

			object d168226f1e4124b688d768bcb87a373bd = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder), currentInteractionType, resultContext); instance.PolicyHolder = d168226f1e4124b688d768bcb87a373bd is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder ? d168226f1e4124b688d768bcb87a373bd as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder)MARC.Everest.Connectors.Util.FromWireFormat(d168226f1e4124b688d768bcb87a373bd, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder));
}
else if(s.LocalName == "realmCode" ) {

			object ddf29466bb0a441bb8d81770c9463d05c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = ddf29466bb0a441bb8d81770c9463d05c is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? ddf29466bb0a441bb8d81770c9463d05c as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(ddf29466bb0a441bb8d81770c9463d05c, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d45e47c65c4bf462bae1d16dccb4d457a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d45e47c65c4bf462bae1d16dccb4d457a is MARC.Everest.DataTypes.II ? d45e47c65c4bf462bae1d16dccb4d457a as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d45e47c65c4bf462bae1d16dccb4d457a, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d3e7407d93daa44f5aff480c1a76a91af = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d3e7407d93daa44f5aff480c1a76a91af is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d3e7407d93daa44f5aff480c1a76a91af as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d3e7407d93daa44f5aff480c1a76a91af, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d84f5b51e82fa44dfab24eb33fbead762 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CE<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AgentPerson != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "agentPerson", (MARC.Everest.Interfaces.IGraphable)instance.AgentPerson, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.RepresentedEntityChoice != null && !isInstanceNull) {

 if(instance.RepresentedEntityChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization)) {

			retVal = Host.WriteElementUtil(s, "representedOrganization", (MARC.Everest.Interfaces.IGraphable)instance.RepresentedEntityChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization), context, resultContext);
}
else if(instance.RepresentedEntityChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person)) {

			retVal = Host.WriteElementUtil(s, "representedPerson", (MARC.Everest.Interfaces.IGraphable)instance.RepresentedEntityChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.RepresentedEntityChoice.GetType()), s.ToString(), null)); }
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"AGNT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "AGNT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object de89637d5980a4c7db69c010fcd6e3ef6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = de89637d5980a4c7db69c010fcd6e3ef6 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? de89637d5980a4c7db69c010fcd6e3ef6 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(de89637d5980a4c7db69c010fcd6e3ef6, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object dc443788437474daca210a7b7463ad157 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = dc443788437474daca210a7b7463ad157 is MARC.Everest.DataTypes.CE<System.String> ? dc443788437474daca210a7b7463ad157 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dc443788437474daca210a7b7463ad157, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "addr" ) {

			object d583f2236bb2a4f118b168bcbf10a0d9f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d583f2236bb2a4f118b168bcbf10a0d9f is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d583f2236bb2a4f118b168bcbf10a0d9f as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d583f2236bb2a4f118b168bcbf10a0d9f, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object d38df395539244ef68f3ed3c5f13b5553 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = d38df395539244ef68f3ed3c5f13b5553 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? d38df395539244ef68f3ed3c5f13b5553 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(d38df395539244ef68f3ed3c5f13b5553, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "agentPerson" ) {

			object db1beda071af34a4f970ee5cf2ff39fa4 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person), currentInteractionType, resultContext); instance.AgentPerson = db1beda071af34a4f970ee5cf2ff39fa4 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person ? db1beda071af34a4f970ee5cf2ff39fa4 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person)MARC.Everest.Connectors.Util.FromWireFormat(db1beda071af34a4f970ee5cf2ff39fa4, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person));
}
else if(s.LocalName == "representedOrganization" ) {

			object d14468cab64d142c390bdfb08f2daf290 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization), currentInteractionType, resultContext); instance.RepresentedEntityChoice = d14468cab64d142c390bdfb08f2daf290 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization ? d14468cab64d142c390bdfb08f2daf290 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d14468cab64d142c390bdfb08f2daf290, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization));
}
else if(s.LocalName == "representedPerson" ) {

			object dbb8941375acc4ed7a5b35abf8b2174c9 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person), currentInteractionType, resultContext); instance.RepresentedEntityChoice = dbb8941375acc4ed7a5b35abf8b2174c9 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person ? dbb8941375acc4ed7a5b35abf8b2174c9 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person)MARC.Everest.Connectors.Util.FromWireFormat(dbb8941375acc4ed7a5b35abf8b2174c9, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person));
}
else if(s.LocalName == "realmCode" ) {

			object d61eeefb3a04c431b9a52d3824b93b639 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d61eeefb3a04c431b9a52d3824b93b639 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d61eeefb3a04c431b9a52d3824b93b639 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d61eeefb3a04c431b9a52d3824b93b639, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d98649586a6a94264a2607ce1da3f981d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d98649586a6a94264a2607ce1da3f981d is MARC.Everest.DataTypes.II ? d98649586a6a94264a2607ce1da3f981d as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d98649586a6a94264a2607ce1da3f981d, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d50b463200fe04a77920bed3df93e8746 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d50b463200fe04a77920bed3df93e8746 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d50b463200fe04a77920bed3df93e8746 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d50b463200fe04a77920bed3df93e8746, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ResponsibleParty is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d7e705b3364784c59ab37e0ccf2f3d010 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.FunctionCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "functionCode", (MARC.Everest.Interfaces.IGraphable)instance.FunctionCode, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Sponsor != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "sponsor", (MARC.Everest.Interfaces.IGraphable)instance.Sponsor, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"RESP".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "RESP", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "functionCode" ) {

			object df5c08ce02c91404a89e75a31783fe15f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.FunctionCode = df5c08ce02c91404a89e75a31783fe15f is MARC.Everest.DataTypes.CD<System.String> ? df5c08ce02c91404a89e75a31783fe15f as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(df5c08ce02c91404a89e75a31783fe15f, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "sponsor" ) {

			object da96ef4bf97b14c41a15e595594c8230e = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor), currentInteractionType, resultContext); instance.Sponsor = da96ef4bf97b14c41a15e595594c8230e is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor ? da96ef4bf97b14c41a15e595594c8230e as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor)MARC.Everest.Connectors.Util.FromWireFormat(da96ef4bf97b14c41a15e595594c8230e, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor));
}
else if(s.LocalName == "realmCode" ) {

			object d70fc207a7d5a47f381df3d48cb9144aa = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d70fc207a7d5a47f381df3d48cb9144aa is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d70fc207a7d5a47f381df3d48cb9144aa as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d70fc207a7d5a47f381df3d48cb9144aa, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d9a962131c82141f7a4be0597c579896e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d9a962131c82141f7a4be0597c579896e is MARC.Everest.DataTypes.II ? d9a962131c82141f7a4be0597c579896e as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d9a962131c82141f7a4be0597c579896e, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d6b6655d7429a4b919174e1d4e0118f23 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d6b6655d7429a4b919174e1d4e0118f23 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d6b6655d7429a4b919174e1d4e0118f23 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d6b6655d7429a4b919174e1d4e0118f23, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dad614c7d263341618072ed3bfc1cf624 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ConfidentialityCode != null && !isInstanceNull) {

if(!instance.ConfidentialityCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "confidentialityCode", (MARC.Everest.Interfaces.IGraphable)instance.ConfidentialityCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CoveredParty == null && Host.CreateRequiredElements) { instance.CoveredParty = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2(); instance.CoveredParty.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.CoveredParty != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "coveredParty", (MARC.Everest.Interfaces.IGraphable)instance.CoveredParty, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Holder != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "holder", (MARC.Everest.Interfaces.IGraphable)instance.Holder, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ResponsibleParty != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "responsibleParty", (MARC.Everest.Interfaces.IGraphable)instance.ResponsibleParty, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PrimaryPerformer != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.PrimaryPerformer) { retVal = Host.WriteElementUtil(s, "primaryPerformer", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Author != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Author) { retVal = Host.WriteElementUtil(s, "author", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Definition != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "definition", (MARC.Everest.Interfaces.IGraphable)instance.Definition, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ReplacementOf != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "replacementOf", (MARC.Everest.Interfaces.IGraphable)instance.ReplacementOf, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Limitation1 != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Limitation1) { retVal = Host.WriteElementUtil(s, "limitation1", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Limitation2 != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Limitation2) { retVal = Host.WriteElementUtil(s, "limitation2", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CoverageOf != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.CoverageOf) { retVal = Host.WriteElementUtil(s, "coverageOf", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"COV".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "COV", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d3f54a5bf2ac747d998b7a07f30a9fff7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d3f54a5bf2ac747d998b7a07f30a9fff7 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d3f54a5bf2ac747d998b7a07f30a9fff7 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d3f54a5bf2ac747d998b7a07f30a9fff7, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d57775bcfc88b40a3a964a1daad01d037 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = d57775bcfc88b40a3a964a1daad01d037 is MARC.Everest.DataTypes.CD<System.String> ? d57775bcfc88b40a3a964a1daad01d037 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d57775bcfc88b40a3a964a1daad01d037, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "statusCode" ) {

			object da8a3565a32f74ce0bd960f0494425f8f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), currentInteractionType, resultContext); instance.StatusCode = da8a3565a32f74ce0bd960f0494425f8f is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> ? da8a3565a32f74ce0bd960f0494425f8f as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>)MARC.Everest.Connectors.Util.FromWireFormat(da8a3565a32f74ce0bd960f0494425f8f, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>));
}
else if(s.LocalName == "effectiveTime" ) {

			object dfa0f09934c8d416fbd908671517733d0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = dfa0f09934c8d416fbd908671517733d0 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? dfa0f09934c8d416fbd908671517733d0 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(dfa0f09934c8d416fbd908671517733d0, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "confidentialityCode" ) {

			object ddacd44180b1a4f5c80b0e09ae1799fe5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.ConfidentialityCode = ddacd44180b1a4f5c80b0e09ae1799fe5 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? ddacd44180b1a4f5c80b0e09ae1799fe5 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(ddacd44180b1a4f5c80b0e09ae1799fe5, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "coveredParty" ) {

			object d89250a97483f41e5b3638369101415dc = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2), currentInteractionType, resultContext); instance.CoveredParty = d89250a97483f41e5b3638369101415dc is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2 ? d89250a97483f41e5b3638369101415dc as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2)MARC.Everest.Connectors.Util.FromWireFormat(d89250a97483f41e5b3638369101415dc, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveredParty2));
}
else if(s.LocalName == "holder" ) {

			object d0b097774380e409fb74da265f496319b = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder), currentInteractionType, resultContext); instance.Holder = d0b097774380e409fb74da265f496319b is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder ? d0b097774380e409fb74da265f496319b as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder)MARC.Everest.Connectors.Util.FromWireFormat(d0b097774380e409fb74da265f496319b, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Holder));
}
else if(s.LocalName == "responsibleParty" ) {

			object d43656a24965d46d79679a51d68f3bf43 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2), currentInteractionType, resultContext); instance.ResponsibleParty = d43656a24965d46d79679a51d68f3bf43 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2 ? d43656a24965d46d79679a51d68f3bf43 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2)MARC.Everest.Connectors.Util.FromWireFormat(d43656a24965d46d79679a51d68f3bf43, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ResponsibleParty2));
}
else if(s.LocalName == "primaryPerformer" ) {

			object db8ad6c6bfc194b6eba37920296265327 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer), currentInteractionType, resultContext); instance.PrimaryPerformer.Add(db8ad6c6bfc194b6eba37920296265327 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer)db8ad6c6bfc194b6eba37920296265327 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer)MARC.Everest.Connectors.Util.FromWireFormat(db8ad6c6bfc194b6eba37920296265327, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer)));
}
else if(s.LocalName == "author" ) {

			object d9a95391a810243f38649ca6aecd697ac = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2), currentInteractionType, resultContext); instance.Author.Add(d9a95391a810243f38649ca6aecd697ac is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2 ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2)d9a95391a810243f38649ca6aecd697ac : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2)MARC.Everest.Connectors.Util.FromWireFormat(d9a95391a810243f38649ca6aecd697ac, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2)));
}
else if(s.LocalName == "definition" ) {

			object dcbc89ac72b4243ae88da3b7d72029701 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3), currentInteractionType, resultContext); instance.Definition = dcbc89ac72b4243ae88da3b7d72029701 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3 ? dcbc89ac72b4243ae88da3b7d72029701 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3)MARC.Everest.Connectors.Util.FromWireFormat(dcbc89ac72b4243ae88da3b7d72029701, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3));
}
else if(s.LocalName == "replacementOf" ) {

			object d73ecf0d89bea48ad9d4066a626a15cf4 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf), currentInteractionType, resultContext); instance.ReplacementOf = d73ecf0d89bea48ad9d4066a626a15cf4 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf ? d73ecf0d89bea48ad9d4066a626a15cf4 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf)MARC.Everest.Connectors.Util.FromWireFormat(d73ecf0d89bea48ad9d4066a626a15cf4, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf));
}
else if(s.LocalName == "limitation1" ) {

			object d95a92bacd3ac4cbaa71915f6f68806f1 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3), currentInteractionType, resultContext); instance.Limitation1.Add(d95a92bacd3ac4cbaa71915f6f68806f1 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3 ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3)d95a92bacd3ac4cbaa71915f6f68806f1 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3)MARC.Everest.Connectors.Util.FromWireFormat(d95a92bacd3ac4cbaa71915f6f68806f1, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3)));
}
else if(s.LocalName == "limitation2" ) {

			object d831ce057ee6c4876aa60f777ca9cec38 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation), currentInteractionType, resultContext); instance.Limitation2.Add(d831ce057ee6c4876aa60f777ca9cec38 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation)d831ce057ee6c4876aa60f777ca9cec38 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation)MARC.Everest.Connectors.Util.FromWireFormat(d831ce057ee6c4876aa60f777ca9cec38, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation)));
}
else if(s.LocalName == "coverageOf" ) {

			object d844db68450764b2c83d79c461c6d7720 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2), currentInteractionType, resultContext); instance.CoverageOf.Add(d844db68450764b2c83d79c461c6d7720 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2 ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2)d844db68450764b2c83d79c461c6d7720 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2)MARC.Everest.Connectors.Util.FromWireFormat(d844db68450764b2c83d79c461c6d7720, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2)));
}
else if(s.LocalName == "realmCode" ) {

			object d36f4f5b3249f4efd832a0b6e4a1ea0ce = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d36f4f5b3249f4efd832a0b6e4a1ea0ce is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d36f4f5b3249f4efd832a0b6e4a1ea0ce as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d36f4f5b3249f4efd832a0b6e4a1ea0ce, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d4241570321834b6ebe8724fde757362b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d4241570321834b6ebe8724fde757362b is MARC.Everest.DataTypes.II ? d4241570321834b6ebe8724fde757362b as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d4241570321834b6ebe8724fde757362b, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dff330d16f2d74f36ad2a2ce34c62ba31 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dff330d16f2d74f36ad2a2ce34c62ba31 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dff330d16f2d74f36ad2a2ce34c62ba31 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dff330d16f2d74f36ad2a2ce34c62ba31, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Code == null || instance.Code.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Code in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.CoveredParty == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property CoveredParty in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgram is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d1e6630e1b15643469f734816d4d29f91 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Payor != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "payor", (MARC.Everest.Interfaces.IGraphable)instance.Payor, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"DIRAUTH".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "DIRAUTH", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "payor" ) {

			object d9170867460fa45609230dd07fa8a5204 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor), currentInteractionType, resultContext); instance.Payor = d9170867460fa45609230dd07fa8a5204 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor ? d9170867460fa45609230dd07fa8a5204 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor)MARC.Everest.Connectors.Util.FromWireFormat(d9170867460fa45609230dd07fa8a5204, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor));
}
else if(s.LocalName == "realmCode" ) {

			object dced53228672144348c4cd83f702b9594 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dced53228672144348c4cd83f702b9594 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dced53228672144348c4cd83f702b9594 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dced53228672144348c4cd83f702b9594, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dd4cc19867ff54701b7cd024018076fc8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dd4cc19867ff54701b7cd024018076fc8 is MARC.Everest.DataTypes.II ? dd4cc19867ff54701b7cd024018076fc8 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dd4cc19867ff54701b7cd024018076fc8, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d93c4f670aad64f128685442ba0e29b61 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d93c4f670aad64f128685442ba0e29b61 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d93c4f670aad64f128685442ba0e29b61 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d93c4f670aad64f128685442ba0e29b61, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d65468f0c2b6d48ffb2d9e32045bf992a : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Payor != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "payor", (MARC.Everest.Interfaces.IGraphable)instance.Payor, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"DIRAUTH".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "DIRAUTH", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "payor" ) {

			object d2e4beae8b5d248a09ec221cdd0693279 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor), currentInteractionType, resultContext); instance.Payor = d2e4beae8b5d248a09ec221cdd0693279 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor ? d2e4beae8b5d248a09ec221cdd0693279 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor)MARC.Everest.Connectors.Util.FromWireFormat(d2e4beae8b5d248a09ec221cdd0693279, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor));
}
else if(s.LocalName == "realmCode" ) {

			object df66d3eb28e924a9eb6551bf18ffa0ffb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = df66d3eb28e924a9eb6551bf18ffa0ffb is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? df66d3eb28e924a9eb6551bf18ffa0ffb as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(df66d3eb28e924a9eb6551bf18ffa0ffb, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dc3d7d4c31dd747e39963591618e326e4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dc3d7d4c31dd747e39963591618e326e4 is MARC.Everest.DataTypes.II ? dc3d7d4c31dd747e39963591618e326e4 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dc3d7d4c31dd747e39963591618e326e4, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d12b38a57e78c45769a2636063ed9c2bf = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d12b38a57e78c45769a2636063ed9c2bf is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d12b38a57e78c45769a2636063ed9c2bf as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d12b38a57e78c45769a2636063ed9c2bf, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9654f5062cfb4092ab5b88e92db791f0 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Underwriter != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "underwriter", (MARC.Everest.Interfaces.IGraphable)instance.Underwriter, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"DIRAUTH".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "DIRAUTH", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "underwriter" ) {

			object dbfba5c53398c4a5f81e4ae0e202ccab7 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter), currentInteractionType, resultContext); instance.Underwriter = dbfba5c53398c4a5f81e4ae0e202ccab7 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter ? dbfba5c53398c4a5f81e4ae0e202ccab7 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter)MARC.Everest.Connectors.Util.FromWireFormat(dbfba5c53398c4a5f81e4ae0e202ccab7, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter));
}
else if(s.LocalName == "realmCode" ) {

			object d1ae689c43fd84e21894ccca4d5316fc5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d1ae689c43fd84e21894ccca4d5316fc5 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d1ae689c43fd84e21894ccca4d5316fc5 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d1ae689c43fd84e21894ccca4d5316fc5, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d8c5d0e8ef5684910b6ad7744c046d99b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d8c5d0e8ef5684910b6ad7744c046d99b is MARC.Everest.DataTypes.II ? d8c5d0e8ef5684910b6ad7744c046d99b as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d8c5d0e8ef5684910b6ad7744c046d99b, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object db26521607abd478c9422d68ae50e0cca = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = db26521607abd478c9422d68ae50e0cca is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? db26521607abd478c9422d68ae50e0cca as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(db26521607abd478c9422d68ae50e0cca, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class db6eaf1cda4474964812da0527dd4425e : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.FunctionCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "functionCode", (MARC.Everest.Interfaces.IGraphable)instance.FunctionCode, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Payor != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "payor", (MARC.Everest.Interfaces.IGraphable)instance.Payor, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"PPRF".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "PPRF", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "functionCode" ) {

			object d7a41c0888dca434886b7e1bf743b8a5c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.FunctionCode = d7a41c0888dca434886b7e1bf743b8a5c is MARC.Everest.DataTypes.CD<System.String> ? d7a41c0888dca434886b7e1bf743b8a5c as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d7a41c0888dca434886b7e1bf743b8a5c, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "payor" ) {

			object d1aaa9fbfce544ad9a21a151cbb100692 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor), currentInteractionType, resultContext); instance.Payor = d1aaa9fbfce544ad9a21a151cbb100692 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor ? d1aaa9fbfce544ad9a21a151cbb100692 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor)MARC.Everest.Connectors.Util.FromWireFormat(d1aaa9fbfce544ad9a21a151cbb100692, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor));
}
else if(s.LocalName == "realmCode" ) {

			object d207b6afcd1d244f3af74fcfb6dbf4c98 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d207b6afcd1d244f3af74fcfb6dbf4c98 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d207b6afcd1d244f3af74fcfb6dbf4c98 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d207b6afcd1d244f3af74fcfb6dbf4c98, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d31fd18b837e948499dd7caf212ccb02c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d31fd18b837e948499dd7caf212ccb02c is MARC.Everest.DataTypes.II ? d31fd18b837e948499dd7caf212ccb02c as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d31fd18b837e948499dd7caf212ccb02c, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d5f624bc9222c4349b5e75ce059bb28bb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d5f624bc9222c4349b5e75ce059bb28bb is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d5f624bc9222c4349b5e75ce059bb28bb as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d5f624bc9222c4349b5e75ce059bb28bb, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PrimaryPerformer is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d852db709929241f28a07ef92175a1661 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SponsorOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "sponsorOrganization", (MARC.Everest.Interfaces.IGraphable)instance.SponsorOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.UnderwritingOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "underwritingOrganization", (MARC.Everest.Interfaces.IGraphable)instance.UnderwritingOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.DirectAuthorityOver != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.DirectAuthorityOver) { retVal = Host.WriteElementUtil(s, "directAuthorityOver", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"SPNSR".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "SPNSR", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d6a695776a3f04c718659f5478835732a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d6a695776a3f04c718659f5478835732a is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d6a695776a3f04c718659f5478835732a as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d6a695776a3f04c718659f5478835732a, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object dacb1c385156c45a295ec63f102255bee = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = dacb1c385156c45a295ec63f102255bee is MARC.Everest.DataTypes.CE<System.String> ? dacb1c385156c45a295ec63f102255bee as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dacb1c385156c45a295ec63f102255bee, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "name" ) {

			object d7ae2845c0b2d4ecb8d0d57d1f5d18cbc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), currentInteractionType, resultContext); instance.Name = d7ae2845c0b2d4ecb8d0d57d1f5d18cbc is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> ? d7ae2845c0b2d4ecb8d0d57d1f5d18cbc as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>)MARC.Everest.Connectors.Util.FromWireFormat(d7ae2845c0b2d4ecb8d0d57d1f5d18cbc, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>));
}
else if(s.LocalName == "addr" ) {

			object d4520ab5402b8413897c5c69f80363d3d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d4520ab5402b8413897c5c69f80363d3d is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d4520ab5402b8413897c5c69f80363d3d as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d4520ab5402b8413897c5c69f80363d3d, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object df1b58f284cd64001b54b96c3e59d47bc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = df1b58f284cd64001b54b96c3e59d47bc is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? df1b58f284cd64001b54b96c3e59d47bc as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(df1b58f284cd64001b54b96c3e59d47bc, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d0322544301f3472882e123a399f56ee7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d0322544301f3472882e123a399f56ee7 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d0322544301f3472882e123a399f56ee7 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d0322544301f3472882e123a399f56ee7, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "sponsorOrganization" ) {

			object d4615bb9e74424383a729f11e0dfa5349 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.SponsorOrganization = d4615bb9e74424383a729f11e0dfa5349 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d4615bb9e74424383a729f11e0dfa5349 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d4615bb9e74424383a729f11e0dfa5349, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "underwritingOrganization" ) {

			object d6a5cb35c20614d2fb8e4114073cddee9 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.UnderwritingOrganization = d6a5cb35c20614d2fb8e4114073cddee9 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d6a5cb35c20614d2fb8e4114073cddee9 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d6a5cb35c20614d2fb8e4114073cddee9, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "directAuthorityOver" ) {

			object d453edd591f094af7b7e60abc3c36a0be = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3), currentInteractionType, resultContext); instance.DirectAuthorityOver.Add(d453edd591f094af7b7e60abc3c36a0be is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3 ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3)d453edd591f094af7b7e60abc3c36a0be : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3)MARC.Everest.Connectors.Util.FromWireFormat(d453edd591f094af7b7e60abc3c36a0be, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3)));
}
else if(s.LocalName == "realmCode" ) {

			object dd881c2fcfc1647d0b481d115c6fa65a1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dd881c2fcfc1647d0b481d115c6fa65a1 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dd881c2fcfc1647d0b481d115c6fa65a1 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dd881c2fcfc1647d0b481d115c6fa65a1, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d1cc7c208ea5441dc98feb57bd7b73650 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d1cc7c208ea5441dc98feb57bd7b73650 is MARC.Everest.DataTypes.II ? d1cc7c208ea5441dc98feb57bd7b73650 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d1cc7c208ea5441dc98feb57bd7b73650, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d94ce070c7f594d7f9da7c2917f022968 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d94ce070c7f594d7f9da7c2917f022968 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d94ce070c7f594d7f9da7c2917f022968 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d94ce070c7f594d7f9da7c2917f022968, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Sponsor is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d11749999f1054249b05a75c9d1945078 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.InvoicePayorOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "invoicePayorOrganization", (MARC.Everest.Interfaces.IGraphable)instance.InvoicePayorOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.UnderwritingOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "underwritingOrganization", (MARC.Everest.Interfaces.IGraphable)instance.UnderwritingOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.DirectAuthorityOver != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.DirectAuthorityOver) { retVal = Host.WriteElementUtil(s, "directAuthorityOver", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PAYOR".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PAYOR", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d519f58d703f94b36a1786376f40a3055 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d519f58d703f94b36a1786376f40a3055 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d519f58d703f94b36a1786376f40a3055 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d519f58d703f94b36a1786376f40a3055, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d94572cac56814a34914171b90c625fdb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d94572cac56814a34914171b90c625fdb is MARC.Everest.DataTypes.CE<System.String> ? d94572cac56814a34914171b90c625fdb as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d94572cac56814a34914171b90c625fdb, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "name" ) {

			object daf6169168a4044c09c0b2162567a0d69 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), currentInteractionType, resultContext); instance.Name = daf6169168a4044c09c0b2162567a0d69 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> ? daf6169168a4044c09c0b2162567a0d69 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>)MARC.Everest.Connectors.Util.FromWireFormat(daf6169168a4044c09c0b2162567a0d69, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>));
}
else if(s.LocalName == "addr" ) {

			object d2e7b07e49b164f1e9f13f542b979aba2 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d2e7b07e49b164f1e9f13f542b979aba2 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d2e7b07e49b164f1e9f13f542b979aba2 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d2e7b07e49b164f1e9f13f542b979aba2, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object db59de752db1042b5aed54154d9d066ac = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = db59de752db1042b5aed54154d9d066ac is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? db59de752db1042b5aed54154d9d066ac as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(db59de752db1042b5aed54154d9d066ac, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d3b50bce9a98942db9f308dd0dd13bfae = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d3b50bce9a98942db9f308dd0dd13bfae is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d3b50bce9a98942db9f308dd0dd13bfae as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d3b50bce9a98942db9f308dd0dd13bfae, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "invoicePayorOrganization" ) {

			object d8057f7a854354d388278731c54f75873 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.InvoicePayorOrganization = d8057f7a854354d388278731c54f75873 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d8057f7a854354d388278731c54f75873 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d8057f7a854354d388278731c54f75873, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "underwritingOrganization" ) {

			object d01f46d2b99af4d57b768134df5f488ff = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.UnderwritingOrganization = d01f46d2b99af4d57b768134df5f488ff is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d01f46d2b99af4d57b768134df5f488ff as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d01f46d2b99af4d57b768134df5f488ff, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "directAuthorityOver" ) {

			object dc36909471844416199784b13ae2a9f7f = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4), currentInteractionType, resultContext); instance.DirectAuthorityOver.Add(dc36909471844416199784b13ae2a9f7f is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4 ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4)dc36909471844416199784b13ae2a9f7f : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4)MARC.Everest.Connectors.Util.FromWireFormat(dc36909471844416199784b13ae2a9f7f, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver4)));
}
else if(s.LocalName == "realmCode" ) {

			object d69ab2d1e71b742f79cb71d83b09b7bc9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d69ab2d1e71b742f79cb71d83b09b7bc9 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d69ab2d1e71b742f79cb71d83b09b7bc9 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d69ab2d1e71b742f79cb71d83b09b7bc9, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d52c848f0279d4854a41a3c219f725403 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d52c848f0279d4854a41a3c219f725403 is MARC.Everest.DataTypes.II ? d52c848f0279d4854a41a3c219f725403 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d52c848f0279d4854a41a3c219f725403, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d762a083392dd4ba59bd93d4aff6b54b4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d762a083392dd4ba59bd93d4aff6b54b4 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d762a083392dd4ba59bd93d4aff6b54b4 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d762a083392dd4ba59bd93d4aff6b54b4, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Payor is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class df4c41b16844b41f387d97b79a5766b37 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.FunctionCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "functionCode", (MARC.Everest.Interfaces.IGraphable)instance.FunctionCode, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Underwriter != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "underwriter", (MARC.Everest.Interfaces.IGraphable)instance.Underwriter, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"AUT".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "AUT", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "functionCode" ) {

			object d9091c733844d4a33a0ef5c1e3bd84e15 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.FunctionCode = d9091c733844d4a33a0ef5c1e3bd84e15 is MARC.Everest.DataTypes.CD<System.String> ? d9091c733844d4a33a0ef5c1e3bd84e15 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d9091c733844d4a33a0ef5c1e3bd84e15, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "underwriter" ) {

			object d03a76b9008a44e36953c2d9fbb3dbcc5 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter), currentInteractionType, resultContext); instance.Underwriter = d03a76b9008a44e36953c2d9fbb3dbcc5 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter ? d03a76b9008a44e36953c2d9fbb3dbcc5 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter)MARC.Everest.Connectors.Util.FromWireFormat(d03a76b9008a44e36953c2d9fbb3dbcc5, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter));
}
else if(s.LocalName == "realmCode" ) {

			object d9c62babad17f4918b3a1e7893a108ab6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d9c62babad17f4918b3a1e7893a108ab6 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d9c62babad17f4918b3a1e7893a108ab6 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d9c62babad17f4918b3a1e7893a108ab6, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object da795566f37334e6595271325c037538f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = da795566f37334e6595271325c037538f is MARC.Everest.DataTypes.II ? da795566f37334e6595271325c037538f as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(da795566f37334e6595271325c037538f, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d50312afd6f734d0c8566d34799f62d3c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d50312afd6f734d0c8566d34799f62d3c is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d50312afd6f734d0c8566d34799f62d3c as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d50312afd6f734d0c8566d34799f62d3c, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Author2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class db596f4b313d44e27920006552c9e1aa9 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CoverageDefinition != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "coverageDefinition", (MARC.Everest.Interfaces.IGraphable)instance.CoverageDefinition, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"INST".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "INST", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "coverageDefinition" ) {

			object d63e3b2c8cc574c1f98e80191a007b7c0 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition), currentInteractionType, resultContext); instance.CoverageDefinition = d63e3b2c8cc574c1f98e80191a007b7c0 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition ? d63e3b2c8cc574c1f98e80191a007b7c0 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition)MARC.Everest.Connectors.Util.FromWireFormat(d63e3b2c8cc574c1f98e80191a007b7c0, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition));
}
else if(s.LocalName == "realmCode" ) {

			object d649fb14d985d4348996d870b5468404e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d649fb14d985d4348996d870b5468404e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d649fb14d985d4348996d870b5468404e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d649fb14d985d4348996d870b5468404e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d2066e0c10c044a1f9ef58adca1d5cfc1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d2066e0c10c044a1f9ef58adca1d5cfc1 is MARC.Everest.DataTypes.II ? d2066e0c10c044a1f9ef58adca1d5cfc1 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d2066e0c10c044a1f9ef58adca1d5cfc1, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d4955e87b32d543148f9dd0bb849a7ff9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d4955e87b32d543148f9dd0bb849a7ff9 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d4955e87b32d543148f9dd0bb849a7ff9 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4955e87b32d543148f9dd0bb849a7ff9, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition3 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d675fadaacc0843b481323a821a1c435a : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PolicyOrProgramFinancialLimit != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "policyOrProgramFinancialLimit", (MARC.Everest.Interfaces.IGraphable)instance.PolicyOrProgramFinancialLimit, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"LIMIT".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "LIMIT", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "policyOrProgramFinancialLimit" ) {

			object db647ad1544694f31bc92c465700ea62c = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit), currentInteractionType, resultContext); instance.PolicyOrProgramFinancialLimit = db647ad1544694f31bc92c465700ea62c is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit ? db647ad1544694f31bc92c465700ea62c as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit)MARC.Everest.Connectors.Util.FromWireFormat(db647ad1544694f31bc92c465700ea62c, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit));
}
else if(s.LocalName == "realmCode" ) {

			object d12ceaaed3fac47bf8d4c230466fbbd76 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d12ceaaed3fac47bf8d4c230466fbbd76 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d12ceaaed3fac47bf8d4c230466fbbd76 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d12ceaaed3fac47bf8d4c230466fbbd76, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d4ff47d971e6d4bd7b01f009716487335 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d4ff47d971e6d4bd7b01f009716487335 is MARC.Everest.DataTypes.II ? d4ff47d971e6d4bd7b01f009716487335 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d4ff47d971e6d4bd7b01f009716487335, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d5d6aa7fab31e4815be1018363472768a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d5d6aa7fab31e4815be1018363472768a is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d5d6aa7fab31e4815be1018363472768a as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d5d6aa7fab31e4815be1018363472768a, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation3 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class db09010ca37154c19b9593d36cfb88d05 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Underwriter != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "underwriter", (MARC.Everest.Interfaces.IGraphable)instance.Underwriter, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"DIRAUTH".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "DIRAUTH", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.RoleLinkType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "underwriter" ) {

			object d93826b6cb63b4393a4686bbc10ad9442 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter), currentInteractionType, resultContext); instance.Underwriter = d93826b6cb63b4393a4686bbc10ad9442 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter ? d93826b6cb63b4393a4686bbc10ad9442 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter)MARC.Everest.Connectors.Util.FromWireFormat(d93826b6cb63b4393a4686bbc10ad9442, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter));
}
else if(s.LocalName == "realmCode" ) {

			object d82f9beec5f80454f9f0df63416c8f92a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d82f9beec5f80454f9f0df63416c8f92a is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d82f9beec5f80454f9f0df63416c8f92a as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d82f9beec5f80454f9f0df63416c8f92a, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d8fc5ce03a08c46b7a89c6c241f5e0099 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d8fc5ce03a08c46b7a89c6c241f5e0099 is MARC.Everest.DataTypes.II ? d8fc5ce03a08c46b7a89c6c241f5e0099 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d8fc5ce03a08c46b7a89c6c241f5e0099, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object df0330f07ca4942be994251c3d51ee8fd = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = df0330f07ca4942be994251c3d51ee8fd is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? df0330f07ca4942be994251c3d51ee8fd as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(df0330f07ca4942be994251c3d51ee8fd, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver3 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d0c0bcf5b595e4f7d88d3447efbc50917 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Title != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "title", (MARC.Everest.Interfaces.IGraphable)instance.Title, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Text != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "text", (MARC.Everest.Interfaces.IGraphable)instance.Text, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"COV".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "COV", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"DEF".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "DEF", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d754ad5ec62ac4551ad473ce2459d5574 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d754ad5ec62ac4551ad473ce2459d5574 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d754ad5ec62ac4551ad473ce2459d5574 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d754ad5ec62ac4551ad473ce2459d5574, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "title" ) {

			object db4e62b04275f48f79e85b2abdd093268 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.Title = db4e62b04275f48f79e85b2abdd093268 is MARC.Everest.DataTypes.ST ? db4e62b04275f48f79e85b2abdd093268 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(db4e62b04275f48f79e85b2abdd093268, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "text" ) {

			object d00eefd34d67e4fdea2e9975ed49ec5e0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.Text = d00eefd34d67e4fdea2e9975ed49ec5e0 is MARC.Everest.DataTypes.ST ? d00eefd34d67e4fdea2e9975ed49ec5e0 as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d00eefd34d67e4fdea2e9975ed49ec5e0, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "realmCode" ) {

			object dc75c0211a2c24672ada7d8dcd20a52a2 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dc75c0211a2c24672ada7d8dcd20a52a2 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dc75c0211a2c24672ada7d8dcd20a52a2 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dc75c0211a2c24672ada7d8dcd20a52a2, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d8054455111d0485bb95de518c33fa5b3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d8054455111d0485bb95de518c33fa5b3 is MARC.Everest.DataTypes.II ? d8054455111d0485bb95de518c33fa5b3 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d8054455111d0485bb95de518c33fa5b3, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dc7c97e8a6ddd42e28b511e5704bb7efb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dc7c97e8a6ddd42e28b511e5704bb7efb is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dc7c97e8a6ddd42e28b511e5704bb7efb as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dc7c97e8a6ddd42e28b511e5704bb7efb, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageDefinition is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class de32f1f72055347b5a5877a2562cd1fb2 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode == null && Host.CreateRequiredElements) { instance.StatusCode = new MARC.Everest.DataTypes.CS<System.String>(); instance.StatusCode.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"COV".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "COV", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object de5e6de034c644c639120d2161bc9bb85 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = de5e6de034c644c639120d2161bc9bb85 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? de5e6de034c644c639120d2161bc9bb85 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(de5e6de034c644c639120d2161bc9bb85, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "statusCode" ) {

			object d767c2f2abfb5435a8e61fadfdbae9a48 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<System.String>), currentInteractionType, resultContext); instance.StatusCode = d767c2f2abfb5435a8e61fadfdbae9a48 is MARC.Everest.DataTypes.CS<System.String> ? d767c2f2abfb5435a8e61fadfdbae9a48 as MARC.Everest.DataTypes.CS<System.String> : (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d767c2f2abfb5435a8e61fadfdbae9a48, typeof(MARC.Everest.DataTypes.CS<System.String>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d3e0abdebd5344ab19c81c9069cdf6e21 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d3e0abdebd5344ab19c81c9069cdf6e21 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d3e0abdebd5344ab19c81c9069cdf6e21 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d3e0abdebd5344ab19c81c9069cdf6e21, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "realmCode" ) {

			object d378cc5167cba4b4fa449d07d50234ff9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d378cc5167cba4b4fa449d07d50234ff9 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d378cc5167cba4b4fa449d07d50234ff9 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d378cc5167cba4b4fa449d07d50234ff9, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object df76f87ea35bd46abad477a3674f3c0f1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = df76f87ea35bd46abad477a3674f3c0f1 is MARC.Everest.DataTypes.II ? df76f87ea35bd46abad477a3674f3c0f1 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(df76f87ea35bd46abad477a3674f3c0f1, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d7efc06417d484d9aa0c90dbf7809d217 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d7efc06417d484d9aa0c90dbf7809d217 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d7efc06417d484d9aa0c90dbf7809d217 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d7efc06417d484d9aa0c90dbf7809d217, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.StatusCode == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property StatusCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d5c9f230f1f6b484dbfdde9fa9821ba57 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PreviousPolicyOrProgram != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "previousPolicyOrProgram", (MARC.Everest.Interfaces.IGraphable)instance.PreviousPolicyOrProgram, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"RPLC".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "RPLC", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "previousPolicyOrProgram" ) {

			object dfb8f12e315844a70ae33a6834861d3e7 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram), currentInteractionType, resultContext); instance.PreviousPolicyOrProgram = dfb8f12e315844a70ae33a6834861d3e7 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram ? dfb8f12e315844a70ae33a6834861d3e7 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram)MARC.Everest.Connectors.Util.FromWireFormat(dfb8f12e315844a70ae33a6834861d3e7, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PreviousPolicyOrProgram));
}
else if(s.LocalName == "realmCode" ) {

			object daa8aacfeec7f4b919dd6b87085d9a1ec = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = daa8aacfeec7f4b919dd6b87085d9a1ec is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? daa8aacfeec7f4b919dd6b87085d9a1ec as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(daa8aacfeec7f4b919dd6b87085d9a1ec, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d1f94dbd2045d403da2d4513627ff313e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d1f94dbd2045d403da2d4513627ff313e is MARC.Everest.DataTypes.II ? d1f94dbd2045d403da2d4513627ff313e as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d1f94dbd2045d403da2d4513627ff313e, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d5c5b2ff7c31e44cfb09a01b84c6ca44c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d5c5b2ff7c31e44cfb09a01b84c6ca44c is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d5c5b2ff7c31e44cfb09a01b84c6ca44c as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d5c5b2ff7c31e44cfb09a01b84c6ca44c, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.ReplacementOf is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d7e0b04ac217949679bb63f1fc2fb763f : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CD<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.NetAmt == null && Host.CreateRequiredElements) { instance.NetAmt = new MARC.Everest.DataTypes.MO(); instance.NetAmt.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.NetAmt != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "netAmt", (MARC.Everest.Interfaces.IGraphable)instance.NetAmt, typeof(MARC.Everest.DataTypes.MO), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"INVE".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "INVE", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"DEF".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "DEF", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d46d9fe14f94746bb9b85434e7725509e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d46d9fe14f94746bb9b85434e7725509e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d46d9fe14f94746bb9b85434e7725509e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d46d9fe14f94746bb9b85434e7725509e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object dc8bb7cf8d0df4a8c856cd2f1b46771d7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = dc8bb7cf8d0df4a8c856cd2f1b46771d7 is MARC.Everest.DataTypes.CD<System.String> ? dc8bb7cf8d0df4a8c856cd2f1b46771d7 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dc8bb7cf8d0df4a8c856cd2f1b46771d7, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "effectiveTime" ) {

			object ddc23601e46ea480e8070873c35ac8f0b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = ddc23601e46ea480e8070873c35ac8f0b is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? ddc23601e46ea480e8070873c35ac8f0b as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(ddc23601e46ea480e8070873c35ac8f0b, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "netAmt" ) {

			object d6a44bba728ac4d0fac3caa2f2ed580e7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.MO), currentInteractionType, resultContext); instance.NetAmt = d6a44bba728ac4d0fac3caa2f2ed580e7 is MARC.Everest.DataTypes.MO ? d6a44bba728ac4d0fac3caa2f2ed580e7 as MARC.Everest.DataTypes.MO : (MARC.Everest.DataTypes.MO)MARC.Everest.Connectors.Util.FromWireFormat(d6a44bba728ac4d0fac3caa2f2ed580e7, typeof(MARC.Everest.DataTypes.MO));
}
else if(s.LocalName == "realmCode" ) {

			object d34cb96e81c5d43f4889b2d584222b101 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d34cb96e81c5d43f4889b2d584222b101 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d34cb96e81c5d43f4889b2d584222b101 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d34cb96e81c5d43f4889b2d584222b101, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d17630de2f31740558701e1fc6f5ea374 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d17630de2f31740558701e1fc6f5ea374 is MARC.Everest.DataTypes.II ? d17630de2f31740558701e1fc6f5ea374 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d17630de2f31740558701e1fc6f5ea374, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d71bb7119f82d4f3a8b14f35c51d55979 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d71bb7119f82d4f3a8b14f35c51d55979 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d71bb7119f82d4f3a8b14f35c51d55979 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d71bb7119f82d4f3a8b14f35c51d55979, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.PolicyOrProgramFinancialLimit is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dfd732bde2dd54788abf87072d13820c6 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CoverageLimitObservation != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "coverageLimitObservation", (MARC.Everest.Interfaces.IGraphable)instance.CoverageLimitObservation, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"LIMIT".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "LIMIT", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "coverageLimitObservation" ) {

			object d44f91b22af9a48bab7767eccc2ef1e72 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation), currentInteractionType, resultContext); instance.CoverageLimitObservation = d44f91b22af9a48bab7767eccc2ef1e72 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation ? d44f91b22af9a48bab7767eccc2ef1e72 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation)MARC.Everest.Connectors.Util.FromWireFormat(d44f91b22af9a48bab7767eccc2ef1e72, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation));
}
else if(s.LocalName == "realmCode" ) {

			object ddac7b7d805fd4bbcb050be8f698ff8ee = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = ddac7b7d805fd4bbcb050be8f698ff8ee is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? ddac7b7d805fd4bbcb050be8f698ff8ee as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(ddac7b7d805fd4bbcb050be8f698ff8ee, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object de8d9e6b9077c43b493be5b8bdaefa66d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = de8d9e6b9077c43b493be5b8bdaefa66d is MARC.Everest.DataTypes.II ? de8d9e6b9077c43b493be5b8bdaefa66d as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(de8d9e6b9077c43b493be5b8bdaefa66d, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d28bb86b946dd45e997257c604618993d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d28bb86b946dd45e997257c604618993d is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d28bb86b946dd45e997257c604618993d as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d28bb86b946dd45e997257c604618993d, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d5289fcab3a9e4b439a3ffba5ed7e72cd : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Name != null && !isInstanceNull) {

if(!instance.Name.IsEmpty)
			retVal = Host.WriteElementUtil(s, "name", (MARC.Everest.Interfaces.IGraphable)instance.Name, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.UnderwritingOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "underwritingOrganization", (MARC.Everest.Interfaces.IGraphable)instance.UnderwritingOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ScoperOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "scoperOrganization", (MARC.Everest.Interfaces.IGraphable)instance.ScoperOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.DirectAuthorityOver1 != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.DirectAuthorityOver1) { retVal = Host.WriteElementUtil(s, "directAuthorityOver1", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.DirectAuthorityOver2 != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.DirectAuthorityOver2) { retVal = Host.WriteElementUtil(s, "directAuthorityOver2", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"UNDWRT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "UNDWRT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dd7c6cb2c8fd24bd4a053c9f2a7c5d9ba = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dd7c6cb2c8fd24bd4a053c9f2a7c5d9ba is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dd7c6cb2c8fd24bd4a053c9f2a7c5d9ba as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dd7c6cb2c8fd24bd4a053c9f2a7c5d9ba, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object da66477d50f9d42d7b44e5737f62f29ec = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = da66477d50f9d42d7b44e5737f62f29ec is MARC.Everest.DataTypes.CE<System.String> ? da66477d50f9d42d7b44e5737f62f29ec as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(da66477d50f9d42d7b44e5737f62f29ec, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "name" ) {

			object d03827fa8655f48c48f189e991d611686 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>), currentInteractionType, resultContext); instance.Name = d03827fa8655f48c48f189e991d611686 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> ? d03827fa8655f48c48f189e991d611686 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>)MARC.Everest.Connectors.Util.FromWireFormat(d03827fa8655f48c48f189e991d611686, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.ON>));
}
else if(s.LocalName == "addr" ) {

			object d0c27bd938c8a4cdaaea47f1cb9c78ed6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d0c27bd938c8a4cdaaea47f1cb9c78ed6 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d0c27bd938c8a4cdaaea47f1cb9c78ed6 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d0c27bd938c8a4cdaaea47f1cb9c78ed6, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object d4539f28d6a0840758cdac0871cf0e302 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = d4539f28d6a0840758cdac0871cf0e302 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? d4539f28d6a0840758cdac0871cf0e302 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(d4539f28d6a0840758cdac0871cf0e302, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d2f0f45e79e7e4ca790bc901b1507a793 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d2f0f45e79e7e4ca790bc901b1507a793 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d2f0f45e79e7e4ca790bc901b1507a793 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d2f0f45e79e7e4ca790bc901b1507a793, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "underwritingOrganization" ) {

			object d012a968f55394f6da1fce7794907fafe = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.UnderwritingOrganization = d012a968f55394f6da1fce7794907fafe is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d012a968f55394f6da1fce7794907fafe as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d012a968f55394f6da1fce7794907fafe, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "scoperOrganization" ) {

			object d7f8a52f8bb0347a6871d894bbc82d670 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.ScoperOrganization = d7f8a52f8bb0347a6871d894bbc82d670 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d7f8a52f8bb0347a6871d894bbc82d670 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d7f8a52f8bb0347a6871d894bbc82d670, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "directAuthorityOver1" ) {

			object dd33fc5ef9ab74961a93f4b4115b773d3 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2), currentInteractionType, resultContext); instance.DirectAuthorityOver1.Add(dd33fc5ef9ab74961a93f4b4115b773d3 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2 ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2)dd33fc5ef9ab74961a93f4b4115b773d3 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2)MARC.Everest.Connectors.Util.FromWireFormat(dd33fc5ef9ab74961a93f4b4115b773d3, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver2)));
}
else if(s.LocalName == "directAuthorityOver2" ) {

			object db79a34a033b4494cafea5788f44d0ce8 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver), currentInteractionType, resultContext); instance.DirectAuthorityOver2.Add(db79a34a033b4494cafea5788f44d0ce8 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver)db79a34a033b4494cafea5788f44d0ce8 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver)MARC.Everest.Connectors.Util.FromWireFormat(db79a34a033b4494cafea5788f44d0ce8, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.DirectAuthorityOver)));
}
else if(s.LocalName == "realmCode" ) {

			object d06451b7739434dedb3dcc553169e4281 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d06451b7739434dedb3dcc553169e4281 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d06451b7739434dedb3dcc553169e4281 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d06451b7739434dedb3dcc553169e4281, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d016eefa3d66a4956ae3bfd9f1a8dfaa4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d016eefa3d66a4956ae3bfd9f1a8dfaa4 is MARC.Everest.DataTypes.II ? d016eefa3d66a4956ae3bfd9f1a8dfaa4 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d016eefa3d66a4956ae3bfd9f1a8dfaa4, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d1a980cfe0e4146abb75a550558877c75 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d1a980cfe0e4146abb75a550558877c75 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d1a980cfe0e4146abb75a550558877c75 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d1a980cfe0e4146abb75a550558877c75, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Underwriter is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d2ccd92e8e8a4470f941ed835e9d3ec5f : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.NegationInd != null && !isInstanceNull) {

			s.WriteAttributeString("negationInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.NegationInd));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Benefit != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "benefit", (MARC.Everest.Interfaces.IGraphable)instance.Benefit, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"COVBY".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "COVBY", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("negationInd") != null) instance.NegationInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("negationInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "benefit" ) {

			object d1c3e26631d1a4bdf9babf29fde7adc58 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit), currentInteractionType, resultContext); instance.Benefit = d1c3e26631d1a4bdf9babf29fde7adc58 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit ? d1c3e26631d1a4bdf9babf29fde7adc58 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit)MARC.Everest.Connectors.Util.FromWireFormat(d1c3e26631d1a4bdf9babf29fde7adc58, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit));
}
else if(s.LocalName == "realmCode" ) {

			object d0156c048acfd4ebdb5ebfddd2fddf2c6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d0156c048acfd4ebdb5ebfddd2fddf2c6 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d0156c048acfd4ebdb5ebfddd2fddf2c6 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d0156c048acfd4ebdb5ebfddd2fddf2c6, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object deca40e9269ef49b99f14e59bbb33a627 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = deca40e9269ef49b99f14e59bbb33a627 is MARC.Everest.DataTypes.II ? deca40e9269ef49b99f14e59bbb33a627 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(deca40e9269ef49b99f14e59bbb33a627, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d030355d2ad8341f992b29d7af8622c95 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d030355d2ad8341f992b29d7af8622c95 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d030355d2ad8341f992b29d7af8622c95 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d030355d2ad8341f992b29d7af8622c95, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Coverage2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d973d7295c316484f96bbeb3585065bd6 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CD<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value == null && Host.CreateRequiredElements) { instance.Value = new MARC.Everest.DataTypes.CE<System.String>(); instance.Value.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Value != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"OBS".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "OBS", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"DEF".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "DEF", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dc72f94bffb034bab9264cb4e54f52cbe = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dc72f94bffb034bab9264cb4e54f52cbe is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dc72f94bffb034bab9264cb4e54f52cbe as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dc72f94bffb034bab9264cb4e54f52cbe, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d9e1904ea299c47c99525220e785f7c02 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = d9e1904ea299c47c99525220e785f7c02 is MARC.Everest.DataTypes.CD<System.String> ? d9e1904ea299c47c99525220e785f7c02 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d9e1904ea299c47c99525220e785f7c02, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d7b9b984eec64439695e261efb3a9ee5e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d7b9b984eec64439695e261efb3a9ee5e is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d7b9b984eec64439695e261efb3a9ee5e as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d7b9b984eec64439695e261efb3a9ee5e, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "value" ) {

			object d97ba7d7a1291462381f4af199188aa95 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Value = d97ba7d7a1291462381f4af199188aa95 is MARC.Everest.DataTypes.CE<System.String> ? d97ba7d7a1291462381f4af199188aa95 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d97ba7d7a1291462381f4af199188aa95, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "realmCode" ) {

			object d11381909102b4255b1de513f9e193a76 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d11381909102b4255b1de513f9e193a76 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d11381909102b4255b1de513f9e193a76 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d11381909102b4255b1de513f9e193a76, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d0ac86d2a3b9e4cdba5066710c7c1082c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d0ac86d2a3b9e4cdba5066710c7c1082c is MARC.Everest.DataTypes.II ? d0ac86d2a3b9e4cdba5066710c7c1082c as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d0ac86d2a3b9e4cdba5066710c7c1082c, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object df83a0c606eef4a02998f0e8bdf0e21d6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = df83a0c606eef4a02998f0e8bdf0e21d6 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? df83a0c606eef4a02998f0e8bdf0e21d6 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(df83a0c606eef4a02998f0e8bdf0e21d6, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.CoverageLimitObservation is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da5e816a1a56648a28390cfa92bfc4c73 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CoveragePolicy != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "coveragePolicy", (MARC.Everest.Interfaces.IGraphable)instance.CoveragePolicy, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"REFR".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "REFR", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "coveragePolicy" ) {

			object ddbaebf36e098451c99510833072eb884 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy), currentInteractionType, resultContext); instance.CoveragePolicy = ddbaebf36e098451c99510833072eb884 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy ? ddbaebf36e098451c99510833072eb884 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy)MARC.Everest.Connectors.Util.FromWireFormat(ddbaebf36e098451c99510833072eb884, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy));
}
else if(s.LocalName == "realmCode" ) {

			object d0b91383eb56d426098110538274fabd2 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d0b91383eb56d426098110538274fabd2 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d0b91383eb56d426098110538274fabd2 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d0b91383eb56d426098110538274fabd2, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d15b7f0d874eb463d9bbb8bb390c7ce2f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d15b7f0d874eb463d9bbb8bb390c7ce2f is MARC.Everest.DataTypes.II ? d15b7f0d874eb463d9bbb8bb390c7ce2f as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d15b7f0d874eb463d9bbb8bb390c7ce2f, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d88f6b2f75f6e4ea9a674945679ac4b6b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d88f6b2f75f6e4ea9a674945679ac4b6b is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d88f6b2f75f6e4ea9a674945679ac4b6b as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d88f6b2f75f6e4ea9a674945679ac4b6b, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d51ce2d3cbbd648cfb1d7b853723e3366 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ClinicalStatement != null && !isInstanceNull) {

 if(instance.ClinicalStatement.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference)) {

			retVal = Host.WriteElementUtil(s, "actReference", (MARC.Everest.Interfaces.IGraphable)instance.ClinicalStatement, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference), context, resultContext);
}
else if(instance.ClinicalStatement.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act)) {

			retVal = Host.WriteElementUtil(s, "act", (MARC.Everest.Interfaces.IGraphable)instance.ClinicalStatement, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act), context, resultContext);
}
else if(instance.ClinicalStatement.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer)) {

			retVal = Host.WriteElementUtil(s, "organizer", (MARC.Everest.Interfaces.IGraphable)instance.ClinicalStatement, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer), context, resultContext);
}
else if(instance.ClinicalStatement.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure)) {

			retVal = Host.WriteElementUtil(s, "procedure", (MARC.Everest.Interfaces.IGraphable)instance.ClinicalStatement, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure), context, resultContext);
}
else if(instance.ClinicalStatement.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter)) {

			retVal = Host.WriteElementUtil(s, "encounter", (MARC.Everest.Interfaces.IGraphable)instance.ClinicalStatement, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter), context, resultContext);
}
else if(instance.ClinicalStatement.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration)) {

			retVal = Host.WriteElementUtil(s, "substanceAdministration", (MARC.Everest.Interfaces.IGraphable)instance.ClinicalStatement, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration), context, resultContext);
}
else if(instance.ClinicalStatement.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply)) {

			retVal = Host.WriteElementUtil(s, "supply", (MARC.Everest.Interfaces.IGraphable)instance.ClinicalStatement, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply), context, resultContext);
}
else if(instance.ClinicalStatement.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation)) {

			retVal = Host.WriteElementUtil(s, "observation", (MARC.Everest.Interfaces.IGraphable)instance.ClinicalStatement, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.ClinicalStatement.GetType()), s.ToString(), null)); }
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"PRCN".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "PRCN", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "actReference" ) {

			object d1abfc28abe7c46db86f6bd2b513d0d4c = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference), currentInteractionType, resultContext); instance.ClinicalStatement = d1abfc28abe7c46db86f6bd2b513d0d4c is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference ? d1abfc28abe7c46db86f6bd2b513d0d4c as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference)MARC.Everest.Connectors.Util.FromWireFormat(d1abfc28abe7c46db86f6bd2b513d0d4c, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference));
}
else if(s.LocalName == "act" ) {

			object dd6e6fa84c6be4801a36a1ba869a138b2 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act), currentInteractionType, resultContext); instance.ClinicalStatement = dd6e6fa84c6be4801a36a1ba869a138b2 is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act ? dd6e6fa84c6be4801a36a1ba869a138b2 as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act)MARC.Everest.Connectors.Util.FromWireFormat(dd6e6fa84c6be4801a36a1ba869a138b2, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act));
}
else if(s.LocalName == "organizer" ) {

			object de597c358b9084765ae636ec44ece92dd = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer), currentInteractionType, resultContext); instance.ClinicalStatement = de597c358b9084765ae636ec44ece92dd is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer ? de597c358b9084765ae636ec44ece92dd as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer)MARC.Everest.Connectors.Util.FromWireFormat(de597c358b9084765ae636ec44ece92dd, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer));
}
else if(s.LocalName == "procedure" ) {

			object d78d641681e2042189aab5bfb63b8a0e9 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure), currentInteractionType, resultContext); instance.ClinicalStatement = d78d641681e2042189aab5bfb63b8a0e9 is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure ? d78d641681e2042189aab5bfb63b8a0e9 as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure)MARC.Everest.Connectors.Util.FromWireFormat(d78d641681e2042189aab5bfb63b8a0e9, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure));
}
else if(s.LocalName == "encounter" ) {

			object d5e2ad60c574c4532be1285e33515ebf6 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter), currentInteractionType, resultContext); instance.ClinicalStatement = d5e2ad60c574c4532be1285e33515ebf6 is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter ? d5e2ad60c574c4532be1285e33515ebf6 as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter)MARC.Everest.Connectors.Util.FromWireFormat(d5e2ad60c574c4532be1285e33515ebf6, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter));
}
else if(s.LocalName == "substanceAdministration" ) {

			object d71c37c4969064edbb0bfeefcd9469973 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration), currentInteractionType, resultContext); instance.ClinicalStatement = d71c37c4969064edbb0bfeefcd9469973 is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration ? d71c37c4969064edbb0bfeefcd9469973 as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration)MARC.Everest.Connectors.Util.FromWireFormat(d71c37c4969064edbb0bfeefcd9469973, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration));
}
else if(s.LocalName == "supply" ) {

			object df6c3bcd3810049b393434fae4cd0d698 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply), currentInteractionType, resultContext); instance.ClinicalStatement = df6c3bcd3810049b393434fae4cd0d698 is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply ? df6c3bcd3810049b393434fae4cd0d698 as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply)MARC.Everest.Connectors.Util.FromWireFormat(df6c3bcd3810049b393434fae4cd0d698, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply));
}
else if(s.LocalName == "observation" ) {

			object d947e161653c84400aaded05d72bf73e6 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation), currentInteractionType, resultContext); instance.ClinicalStatement = d947e161653c84400aaded05d72bf73e6 is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation ? d947e161653c84400aaded05d72bf73e6 as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation)MARC.Everest.Connectors.Util.FromWireFormat(d947e161653c84400aaded05d72bf73e6, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation));
}
else if(s.LocalName == "realmCode" ) {

			object d106d2817981748a7bc28289d5fde3262 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d106d2817981748a7bc28289d5fde3262 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d106d2817981748a7bc28289d5fde3262 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d106d2817981748a7bc28289d5fde3262, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object df1a4b8f4f999478fb5a8c97669eb9cc0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = df1a4b8f4f999478fb5a8c97669eb9cc0 is MARC.Everest.DataTypes.II ? df1a4b8f4f999478fb5a8c97669eb9cc0 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(df1a4b8f4f999478fb5a8c97669eb9cc0, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dd20569f8d9424f218a796b0cd74327a9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dd20569f8d9424f218a796b0cd74327a9 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dd20569f8d9424f218a796b0cd74327a9 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dd20569f8d9424f218a796b0cd74327a9, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d18b234a564ec4d5fbf5cafdb644e9d9c : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CoverageChargeChoice != null && !isInstanceNull) {

 if(instance.CoverageChargeChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.FinancialParticipationCharge)) {

			retVal = Host.WriteElementUtil(s, "financialParticipationCharge", (MARC.Everest.Interfaces.IGraphable)instance.CoverageChargeChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.FinancialParticipationCharge), context, resultContext);
}
else if(instance.CoverageChargeChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageCharge)) {

			retVal = Host.WriteElementUtil(s, "coverageCharge", (MARC.Everest.Interfaces.IGraphable)instance.CoverageChargeChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageCharge), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.CoverageChargeChoice.GetType()), s.ToString(), null)); }
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2 instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"LIMIT".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "LIMIT", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "financialParticipationCharge" ) {

			object db7d247c5dd854326b5a6e00ce68779e0 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.FinancialParticipationCharge), currentInteractionType, resultContext); instance.CoverageChargeChoice = db7d247c5dd854326b5a6e00ce68779e0 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.FinancialParticipationCharge ? db7d247c5dd854326b5a6e00ce68779e0 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.FinancialParticipationCharge : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.FinancialParticipationCharge)MARC.Everest.Connectors.Util.FromWireFormat(db7d247c5dd854326b5a6e00ce68779e0, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.FinancialParticipationCharge));
}
else if(s.LocalName == "coverageCharge" ) {

			object dfe9ea47b5c1a4c43a6a2c8bbbc9e7b1a = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageCharge), currentInteractionType, resultContext); instance.CoverageChargeChoice = dfe9ea47b5c1a4c43a6a2c8bbbc9e7b1a is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageCharge ? dfe9ea47b5c1a4c43a6a2c8bbbc9e7b1a as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageCharge : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageCharge)MARC.Everest.Connectors.Util.FromWireFormat(dfe9ea47b5c1a4c43a6a2c8bbbc9e7b1a, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoverageCharge));
}
else if(s.LocalName == "realmCode" ) {

			object dca4fe4f90bcd42ca9efeb71fd2b6f041 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dca4fe4f90bcd42ca9efeb71fd2b6f041 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dca4fe4f90bcd42ca9efeb71fd2b6f041 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dca4fe4f90bcd42ca9efeb71fd2b6f041, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d8884a5570d5e4cdbbbd982ff5953c71c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d8884a5570d5e4cdbbbd982ff5953c71c is MARC.Everest.DataTypes.II ? d8884a5570d5e4cdbbbd982ff5953c71c as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d8884a5570d5e4cdbbbd982ff5953c71c, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d5358e17664ad496387cb1d892005adcc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d5358e17664ad496387cb1d892005adcc is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d5358e17664ad496387cb1d892005adcc as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d5358e17664ad496387cb1d892005adcc, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2 instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d30bf6d6582cd4653ba6f0fc8f5d658d3 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.NegationInd != null && !isInstanceNull) {

			s.WriteAttributeString("negationInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.NegationInd));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CD<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ConfidentialityCode != null && !isInstanceNull) {

if(!instance.ConfidentialityCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "confidentialityCode", (MARC.Everest.Interfaces.IGraphable)instance.ConfidentialityCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ReasonCode != null && !isInstanceNull) {

if(!instance.ReasonCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "reasonCode", (MARC.Everest.Interfaces.IGraphable)instance.ReasonCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Definition != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Definition) { retVal = Host.WriteElementUtil(s, "definition", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Precondition != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Precondition) { retVal = Host.WriteElementUtil(s, "precondition", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Reference != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Reference) { retVal = Host.WriteElementUtil(s, "reference", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Limitation != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Limitation) { retVal = Host.WriteElementUtil(s, "limitation", ig, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"PCPR".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "PCPR", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("moodCode") != null) instance.MoodCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<System.String>));
			if(s.GetAttribute("negationInd") != null) instance.NegationInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("negationInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dc19bcbef855446539c97c40b62a53efa = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dc19bcbef855446539c97c40b62a53efa is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dc19bcbef855446539c97c40b62a53efa as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dc19bcbef855446539c97c40b62a53efa, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object db9666dbe0e4f459abf944684a636e56d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = db9666dbe0e4f459abf944684a636e56d is MARC.Everest.DataTypes.CD<System.String> ? db9666dbe0e4f459abf944684a636e56d as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(db9666dbe0e4f459abf944684a636e56d, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d27643e4f8b534e0b942c8d42da70f733 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d27643e4f8b534e0b942c8d42da70f733 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d27643e4f8b534e0b942c8d42da70f733 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d27643e4f8b534e0b942c8d42da70f733, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "confidentialityCode" ) {

			object def89c8a891cb4c0689911f1e4e7371e7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.ConfidentialityCode = def89c8a891cb4c0689911f1e4e7371e7 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? def89c8a891cb4c0689911f1e4e7371e7 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(def89c8a891cb4c0689911f1e4e7371e7, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "reasonCode" ) {

			object d1798b8c3794a4614bb1e2cba42f74d8e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.ReasonCode = d1798b8c3794a4614bb1e2cba42f74d8e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? d1798b8c3794a4614bb1e2cba42f74d8e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d1798b8c3794a4614bb1e2cba42f74d8e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "definition" ) {

			object d0cc16354310f456ba778835c31412f02 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition), currentInteractionType, resultContext); instance.Definition.Add(d0cc16354310f456ba778835c31412f02 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition)d0cc16354310f456ba778835c31412f02 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition)MARC.Everest.Connectors.Util.FromWireFormat(d0cc16354310f456ba778835c31412f02, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition)));
}
else if(s.LocalName == "precondition" ) {

			object d280323031cb549d9a4fc9beee37c023a = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition), currentInteractionType, resultContext); instance.Precondition.Add(d280323031cb549d9a4fc9beee37c023a is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition)d280323031cb549d9a4fc9beee37c023a : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition)MARC.Everest.Connectors.Util.FromWireFormat(d280323031cb549d9a4fc9beee37c023a, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Precondition)));
}
else if(s.LocalName == "reference" ) {

			object d2e26af6f20e9447a942aea552a6d83e7 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference), currentInteractionType, resultContext); instance.Reference.Add(d2e26af6f20e9447a942aea552a6d83e7 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference)d2e26af6f20e9447a942aea552a6d83e7 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference)MARC.Everest.Connectors.Util.FromWireFormat(d2e26af6f20e9447a942aea552a6d83e7, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Reference)));
}
else if(s.LocalName == "limitation" ) {

			object d35af27e7b50a4a01beff83ed9de9b3d0 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2), currentInteractionType, resultContext); instance.Limitation.Add(d35af27e7b50a4a01beff83ed9de9b3d0 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2 ? (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2)d35af27e7b50a4a01beff83ed9de9b3d0 : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2)MARC.Everest.Connectors.Util.FromWireFormat(d35af27e7b50a4a01beff83ed9de9b3d0, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Limitation2)));
}
else if(s.LocalName == "realmCode" ) {

			object d7f16beb8a5264f6ea90d29f20e566e4e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d7f16beb8a5264f6ea90d29f20e566e4e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d7f16beb8a5264f6ea90d29f20e566e4e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d7f16beb8a5264f6ea90d29f20e566e4e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d2bad73c5ce504d71b9b0715ca6bed367 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d2bad73c5ce504d71b9b0715ca6bed367 is MARC.Everest.DataTypes.II ? d2bad73c5ce504d71b9b0715ca6bed367 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d2bad73c5ce504d71b9b0715ca6bed367, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object deffd06fa1ffa41cc986dcb26bcc4582b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = deffd06fa1ffa41cc986dcb26bcc4582b is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? deffd06fa1ffa41cc986dcb26bcc4582b as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(deffd06fa1ffa41cc986dcb26bcc4582b, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Benefit is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d40111d071c0944cab67828a870bfa663 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CD<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ReasonCode != null && !isInstanceNull) {

if(!instance.ReasonCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "reasonCode", (MARC.Everest.Interfaces.IGraphable)instance.ReasonCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"POL".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "POL", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"DEF".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "DEF", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d6321751f496247208f22aa9908250738 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d6321751f496247208f22aa9908250738 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d6321751f496247208f22aa9908250738 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d6321751f496247208f22aa9908250738, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d32aab251dc6e4f018347dd04b6323d85 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = d32aab251dc6e4f018347dd04b6323d85 is MARC.Everest.DataTypes.CD<System.String> ? d32aab251dc6e4f018347dd04b6323d85 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d32aab251dc6e4f018347dd04b6323d85, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "statusCode" ) {

			object dd52b6ef6c62d4a81bab15b7a409c9790 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), currentInteractionType, resultContext); instance.StatusCode = dd52b6ef6c62d4a81bab15b7a409c9790 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> ? dd52b6ef6c62d4a81bab15b7a409c9790 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>)MARC.Everest.Connectors.Util.FromWireFormat(dd52b6ef6c62d4a81bab15b7a409c9790, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>));
}
else if(s.LocalName == "effectiveTime" ) {

			object d821ebb0667d94bf69f6ee2fd13b45e20 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d821ebb0667d94bf69f6ee2fd13b45e20 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d821ebb0667d94bf69f6ee2fd13b45e20 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d821ebb0667d94bf69f6ee2fd13b45e20, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "reasonCode" ) {

			object d2b568937c1264e4bac3517c0e3992e14 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.ReasonCode = d2b568937c1264e4bac3517c0e3992e14 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? d2b568937c1264e4bac3517c0e3992e14 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d2b568937c1264e4bac3517c0e3992e14, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "realmCode" ) {

			object d8b310615483947cd836bf5fb5e73348c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d8b310615483947cd836bf5fb5e73348c is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d8b310615483947cd836bf5fb5e73348c as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d8b310615483947cd836bf5fb5e73348c, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object deab6b5b2d1704355849ab500126adae0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = deab6b5b2d1704355849ab500126adae0 is MARC.Everest.DataTypes.II ? deab6b5b2d1704355849ab500126adae0 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(deab6b5b2d1704355849ab500126adae0, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d12e3c8278add4b43ac7192fe4b5fd790 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d12e3c8278add4b43ac7192fe4b5fd790 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d12e3c8278add4b43ac7192fe4b5fd790 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d12e3c8278add4b43ac7192fe4b5fd790, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.CoveragePolicy is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class df269629dab3846beaf2a9fe631648a75 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.BenefitChoice != null && !isInstanceNull) {

 if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT300000UV04.SupplyEvent)) {

			retVal = Host.WriteElementUtil(s, "supplyEvent1", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT300000UV04.SupplyEvent), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration)) {

			retVal = Host.WriteElementUtil(s, "substanceAdministration", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure)) {

			retVal = Host.WriteElementUtil(s, "procedure", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter)) {

			retVal = Host.WriteElementUtil(s, "encounter", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT490000UV04.BillableClinicalProduct)) {

			retVal = Host.WriteElementUtil(s, "billableClinicalProduct1", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT490000UV04.BillableClinicalProduct), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer)) {

			retVal = Host.WriteElementUtil(s, "organizer", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference)) {

			retVal = Host.WriteElementUtil(s, "actReference", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act)) {

			retVal = Host.WriteElementUtil(s, "act", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT060000UV01.Transportation)) {

			retVal = Host.WriteElementUtil(s, "transportation", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT060000UV01.Transportation), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ServiceDefinition)) {

			retVal = Host.WriteElementUtil(s, "serviceDefinition", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ServiceDefinition), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply)) {

			retVal = Host.WriteElementUtil(s, "supply", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT290000UV06.BillableClinicalService)) {

			retVal = Host.WriteElementUtil(s, "billableClinicalService1", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT290000UV06.BillableClinicalService), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation)) {

			retVal = Host.WriteElementUtil(s, "observation", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT600000UV06.SupplyEvent)) {

			retVal = Host.WriteElementUtil(s, "supplyEvent2", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT600000UV06.SupplyEvent), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT310000UV04.AccomodationSupplied)) {

			retVal = Host.WriteElementUtil(s, "accomodationSupplied1", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT310000UV04.AccomodationSupplied), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT740000UV04.OralHealthService)) {

			retVal = Host.WriteElementUtil(s, "oralHealthService1", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT740000UV04.OralHealthService), context, resultContext);
}
else if(instance.BenefitChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT280000UV04.CrossReference)) {

			retVal = Host.WriteElementUtil(s, "crossReference1", (MARC.Everest.Interfaces.IGraphable)instance.BenefitChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT280000UV04.CrossReference), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.BenefitChoice.GetType()), s.ToString(), null)); }
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"INST".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "INST", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "supplyEvent1" ) {

			object d4f321d5492f9484584705cca71389fa6 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT300000UV04.SupplyEvent), currentInteractionType, resultContext); instance.BenefitChoice = d4f321d5492f9484584705cca71389fa6 is MARC.Everest.RMIM.UV.NE2008.COCT_MT300000UV04.SupplyEvent ? d4f321d5492f9484584705cca71389fa6 as MARC.Everest.RMIM.UV.NE2008.COCT_MT300000UV04.SupplyEvent : (MARC.Everest.RMIM.UV.NE2008.COCT_MT300000UV04.SupplyEvent)MARC.Everest.Connectors.Util.FromWireFormat(d4f321d5492f9484584705cca71389fa6, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT300000UV04.SupplyEvent));
}
else if(s.LocalName == "substanceAdministration" ) {

			object daaba7f4a51014c3182b519be3e950cde = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration), currentInteractionType, resultContext); instance.BenefitChoice = daaba7f4a51014c3182b519be3e950cde is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration ? daaba7f4a51014c3182b519be3e950cde as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration)MARC.Everest.Connectors.Util.FromWireFormat(daaba7f4a51014c3182b519be3e950cde, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.SubstanceAdministration));
}
else if(s.LocalName == "procedure" ) {

			object db68f30c64cf84b659ce524400366d74d = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure), currentInteractionType, resultContext); instance.BenefitChoice = db68f30c64cf84b659ce524400366d74d is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure ? db68f30c64cf84b659ce524400366d74d as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure)MARC.Everest.Connectors.Util.FromWireFormat(db68f30c64cf84b659ce524400366d74d, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Procedure));
}
else if(s.LocalName == "encounter" ) {

			object d3e19f3380dbc477ba1594e1774ba8882 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter), currentInteractionType, resultContext); instance.BenefitChoice = d3e19f3380dbc477ba1594e1774ba8882 is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter ? d3e19f3380dbc477ba1594e1774ba8882 as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter)MARC.Everest.Connectors.Util.FromWireFormat(d3e19f3380dbc477ba1594e1774ba8882, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Encounter));
}
else if(s.LocalName == "billableClinicalProduct1" ) {

			object dbaf54dc259e54c8e8bae36a41f700f01 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT490000UV04.BillableClinicalProduct), currentInteractionType, resultContext); instance.BenefitChoice = dbaf54dc259e54c8e8bae36a41f700f01 is MARC.Everest.RMIM.UV.NE2008.COCT_MT490000UV04.BillableClinicalProduct ? dbaf54dc259e54c8e8bae36a41f700f01 as MARC.Everest.RMIM.UV.NE2008.COCT_MT490000UV04.BillableClinicalProduct : (MARC.Everest.RMIM.UV.NE2008.COCT_MT490000UV04.BillableClinicalProduct)MARC.Everest.Connectors.Util.FromWireFormat(dbaf54dc259e54c8e8bae36a41f700f01, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT490000UV04.BillableClinicalProduct));
}
else if(s.LocalName == "organizer" ) {

			object da37798608eae411f98e9b34e0f36d48c = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer), currentInteractionType, resultContext); instance.BenefitChoice = da37798608eae411f98e9b34e0f36d48c is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer ? da37798608eae411f98e9b34e0f36d48c as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer)MARC.Everest.Connectors.Util.FromWireFormat(da37798608eae411f98e9b34e0f36d48c, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Organizer));
}
else if(s.LocalName == "actReference" ) {

			object d63b77711674346d3ab30cd5f4b3cf038 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference), currentInteractionType, resultContext); instance.BenefitChoice = d63b77711674346d3ab30cd5f4b3cf038 is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference ? d63b77711674346d3ab30cd5f4b3cf038 as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference)MARC.Everest.Connectors.Util.FromWireFormat(d63b77711674346d3ab30cd5f4b3cf038, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.ActReference));
}
else if(s.LocalName == "act" ) {

			object d74e7022fd68c47e692f128a4ae19c6f6 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act), currentInteractionType, resultContext); instance.BenefitChoice = d74e7022fd68c47e692f128a4ae19c6f6 is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act ? d74e7022fd68c47e692f128a4ae19c6f6 as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act)MARC.Everest.Connectors.Util.FromWireFormat(d74e7022fd68c47e692f128a4ae19c6f6, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Act));
}
else if(s.LocalName == "transportation" ) {

			object df1346a339c74433fad330453f749b452 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT060000UV01.Transportation), currentInteractionType, resultContext); instance.BenefitChoice = df1346a339c74433fad330453f749b452 is MARC.Everest.RMIM.UV.NE2008.COCT_MT060000UV01.Transportation ? df1346a339c74433fad330453f749b452 as MARC.Everest.RMIM.UV.NE2008.COCT_MT060000UV01.Transportation : (MARC.Everest.RMIM.UV.NE2008.COCT_MT060000UV01.Transportation)MARC.Everest.Connectors.Util.FromWireFormat(df1346a339c74433fad330453f749b452, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT060000UV01.Transportation));
}
else if(s.LocalName == "serviceDefinition" ) {

			object d596bb999b4aa49208e834f65a01434b5 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ServiceDefinition), currentInteractionType, resultContext); instance.BenefitChoice = d596bb999b4aa49208e834f65a01434b5 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ServiceDefinition ? d596bb999b4aa49208e834f65a01434b5 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ServiceDefinition : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ServiceDefinition)MARC.Everest.Connectors.Util.FromWireFormat(d596bb999b4aa49208e834f65a01434b5, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.ServiceDefinition));
}
else if(s.LocalName == "supply" ) {

			object db0721faf60954e80b46d01101d1f2f2c = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply), currentInteractionType, resultContext); instance.BenefitChoice = db0721faf60954e80b46d01101d1f2f2c is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply ? db0721faf60954e80b46d01101d1f2f2c as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply)MARC.Everest.Connectors.Util.FromWireFormat(db0721faf60954e80b46d01101d1f2f2c, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Supply));
}
else if(s.LocalName == "billableClinicalService1" ) {

			object d91172136fb344ff78335e3cee3b5e7d0 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT290000UV06.BillableClinicalService), currentInteractionType, resultContext); instance.BenefitChoice = d91172136fb344ff78335e3cee3b5e7d0 is MARC.Everest.RMIM.UV.NE2008.COCT_MT290000UV06.BillableClinicalService ? d91172136fb344ff78335e3cee3b5e7d0 as MARC.Everest.RMIM.UV.NE2008.COCT_MT290000UV06.BillableClinicalService : (MARC.Everest.RMIM.UV.NE2008.COCT_MT290000UV06.BillableClinicalService)MARC.Everest.Connectors.Util.FromWireFormat(d91172136fb344ff78335e3cee3b5e7d0, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT290000UV06.BillableClinicalService));
}
else if(s.LocalName == "observation" ) {

			object dddedca2c83b243ed933308cc8a8ebaf2 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation), currentInteractionType, resultContext); instance.BenefitChoice = dddedca2c83b243ed933308cc8a8ebaf2 is MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation ? dddedca2c83b243ed933308cc8a8ebaf2 as MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation : (MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation)MARC.Everest.Connectors.Util.FromWireFormat(dddedca2c83b243ed933308cc8a8ebaf2, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT530000UV.Observation));
}
else if(s.LocalName == "supplyEvent2" ) {

			object db7289d21454d440590d48f025b0d28ed = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT600000UV06.SupplyEvent), currentInteractionType, resultContext); instance.BenefitChoice = db7289d21454d440590d48f025b0d28ed is MARC.Everest.RMIM.UV.NE2008.COCT_MT600000UV06.SupplyEvent ? db7289d21454d440590d48f025b0d28ed as MARC.Everest.RMIM.UV.NE2008.COCT_MT600000UV06.SupplyEvent : (MARC.Everest.RMIM.UV.NE2008.COCT_MT600000UV06.SupplyEvent)MARC.Everest.Connectors.Util.FromWireFormat(db7289d21454d440590d48f025b0d28ed, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT600000UV06.SupplyEvent));
}
else if(s.LocalName == "accomodationSupplied1" ) {

			object d35b0e94e013948f78f984ad178792d7b = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT310000UV04.AccomodationSupplied), currentInteractionType, resultContext); instance.BenefitChoice = d35b0e94e013948f78f984ad178792d7b is MARC.Everest.RMIM.UV.NE2008.COCT_MT310000UV04.AccomodationSupplied ? d35b0e94e013948f78f984ad178792d7b as MARC.Everest.RMIM.UV.NE2008.COCT_MT310000UV04.AccomodationSupplied : (MARC.Everest.RMIM.UV.NE2008.COCT_MT310000UV04.AccomodationSupplied)MARC.Everest.Connectors.Util.FromWireFormat(d35b0e94e013948f78f984ad178792d7b, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT310000UV04.AccomodationSupplied));
}
else if(s.LocalName == "oralHealthService1" ) {

			object db8a65e17e1004bff99889717c5701918 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT740000UV04.OralHealthService), currentInteractionType, resultContext); instance.BenefitChoice = db8a65e17e1004bff99889717c5701918 is MARC.Everest.RMIM.UV.NE2008.COCT_MT740000UV04.OralHealthService ? db8a65e17e1004bff99889717c5701918 as MARC.Everest.RMIM.UV.NE2008.COCT_MT740000UV04.OralHealthService : (MARC.Everest.RMIM.UV.NE2008.COCT_MT740000UV04.OralHealthService)MARC.Everest.Connectors.Util.FromWireFormat(db8a65e17e1004bff99889717c5701918, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT740000UV04.OralHealthService));
}
else if(s.LocalName == "crossReference1" ) {

			object df7c3fbe2b83247aa857f39bbb15171d0 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT280000UV04.CrossReference), currentInteractionType, resultContext); instance.BenefitChoice = df7c3fbe2b83247aa857f39bbb15171d0 is MARC.Everest.RMIM.UV.NE2008.COCT_MT280000UV04.CrossReference ? df7c3fbe2b83247aa857f39bbb15171d0 as MARC.Everest.RMIM.UV.NE2008.COCT_MT280000UV04.CrossReference : (MARC.Everest.RMIM.UV.NE2008.COCT_MT280000UV04.CrossReference)MARC.Everest.Connectors.Util.FromWireFormat(df7c3fbe2b83247aa857f39bbb15171d0, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT280000UV04.CrossReference));
}
else if(s.LocalName == "realmCode" ) {

			object d38a0e04c9ef34dd8a1c65fd8a8b5cd7d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d38a0e04c9ef34dd8a1c65fd8a8b5cd7d is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d38a0e04c9ef34dd8a1c65fd8a8b5cd7d as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d38a0e04c9ef34dd8a1c65fd8a8b5cd7d, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object df5adc2d8de6a42048cf36c13b6a18713 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = df5adc2d8de6a42048cf36c13b6a18713 is MARC.Everest.DataTypes.II ? df5adc2d8de6a42048cf36c13b6a18713 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(df5adc2d8de6a42048cf36c13b6a18713, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d70450593cbc343d3bdb449b1d369449a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d70450593cbc343d3bdb449b1d369449a is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d70450593cbc343d3bdb449b1d369449a as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d70450593cbc343d3bdb449b1d369449a, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510000UV06.Definition is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9be7f521d25e42c9bf5eac3fa1ece85a : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextControlCode != null && !isInstanceNull) {

			s.WriteAttributeString("contextControlCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextControlCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.NoteText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "noteText", (MARC.Everest.Interfaces.IGraphable)instance.NoteText, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Time != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "time", (MARC.Everest.Interfaces.IGraphable)instance.Time, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ModeCode != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.ModeCode.CodeSystem) && instance.ModeCode.NullFlavor == null) instance.ModeCode.CodeSystem = "2.16.840.1.113883.5.1064";
			retVal = Host.WriteElementUtil(s, "modeCode", (MARC.Everest.Interfaces.IGraphable)instance.ModeCode, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SignatureCode != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.SignatureCode.CodeSystem) && instance.SignatureCode.NullFlavor == null) instance.SignatureCode.CodeSystem = "";
			retVal = Host.WriteElementUtil(s, "signatureCode", (MARC.Everest.Interfaces.IGraphable)instance.SignatureCode, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SignatureText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "signatureText", (MARC.Everest.Interfaces.IGraphable)instance.SignatureText, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedPerson != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "assignedPerson", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPerson, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("typeCode") != null) instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>));
			if(s.GetAttribute("contextControlCode") != null) instance.ContextControlCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextControlCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "noteText" ) {

			object d3745a5f30bfa4447a2efab51ded43701 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.NoteText = d3745a5f30bfa4447a2efab51ded43701 is MARC.Everest.DataTypes.ED ? d3745a5f30bfa4447a2efab51ded43701 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d3745a5f30bfa4447a2efab51ded43701, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "time" ) {

			object df9b356022e4c4befaa2282625f510216 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.Time = df9b356022e4c4befaa2282625f510216 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? df9b356022e4c4befaa2282625f510216 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(df9b356022e4c4befaa2282625f510216, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "modeCode" ) {

			object dac50e250d5df47fd9b467bb360624424 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>), currentInteractionType, resultContext); instance.ModeCode = dac50e250d5df47fd9b467bb360624424 is MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode> ? dac50e250d5df47fd9b467bb360624424 as MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode> : (MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>)MARC.Everest.Connectors.Util.FromWireFormat(dac50e250d5df47fd9b467bb360624424, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>));
}
else if(s.LocalName == "signatureCode" ) {

			object d212a7a58f9634a758ef21fb9a3fdfed5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.SignatureCode = d212a7a58f9634a758ef21fb9a3fdfed5 is MARC.Everest.DataTypes.CE<System.String> ? d212a7a58f9634a758ef21fb9a3fdfed5 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d212a7a58f9634a758ef21fb9a3fdfed5, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "signatureText" ) {

			object d0b4c91f576bb4110a0a93b4a60683ddd = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.SignatureText = d0b4c91f576bb4110a0a93b4a60683ddd is MARC.Everest.DataTypes.ED ? d0b4c91f576bb4110a0a93b4a60683ddd as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d0b4c91f576bb4110a0a93b4a60683ddd, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "assignedPerson" ) {

			object d5aca80cdbe484955a10e6dc78a2bd0c8 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson), currentInteractionType, resultContext); instance.AssignedPerson = d5aca80cdbe484955a10e6dc78a2bd0c8 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson ? d5aca80cdbe484955a10e6dc78a2bd0c8 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson)MARC.Everest.Connectors.Util.FromWireFormat(d5aca80cdbe484955a10e6dc78a2bd0c8, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson));
}
else if(s.LocalName == "realmCode" ) {

			object d3004db9b68a5450ea548afe62986729f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d3004db9b68a5450ea548afe62986729f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d3004db9b68a5450ea548afe62986729f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d3004db9b68a5450ea548afe62986729f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d3efbc1601ea34376969611f5996827c4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d3efbc1601ea34376969611f5996827c4 is MARC.Everest.DataTypes.II ? d3efbc1601ea34376969611f5996827c4 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d3efbc1601ea34376969611f5996827c4, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d4a390dd0941644e0866046e28bd66dc1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d4a390dd0941644e0866046e28bd66dc1 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d4a390dd0941644e0866046e28bd66dc1 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4a390dd0941644e0866046e28bd66dc1, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d920be1894f9b4437b999c884cae4059f : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextControlCode != null && !isInstanceNull) {

			s.WriteAttributeString("contextControlCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextControlCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Time != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "time", (MARC.Everest.Interfaces.IGraphable)instance.Time, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedPerson != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "assignedPerson", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPerson, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("typeCode") != null) instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>));
			if(s.GetAttribute("contextControlCode") != null) instance.ContextControlCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextControlCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "time" ) {

			object d3327665eabc2456cb16c0e93bc50fb3b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.Time = d3327665eabc2456cb16c0e93bc50fb3b is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d3327665eabc2456cb16c0e93bc50fb3b as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d3327665eabc2456cb16c0e93bc50fb3b, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "assignedPerson" ) {

			object d0288e8a8f617445893119a362312d77f = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson), currentInteractionType, resultContext); instance.AssignedPerson = d0288e8a8f617445893119a362312d77f is MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson ? d0288e8a8f617445893119a362312d77f as MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson)MARC.Everest.Connectors.Util.FromWireFormat(d0288e8a8f617445893119a362312d77f, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson));
}
else if(s.LocalName == "realmCode" ) {

			object d9891dc4076a94de5bbe5da4fed30a039 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d9891dc4076a94de5bbe5da4fed30a039 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d9891dc4076a94de5bbe5da4fed30a039 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d9891dc4076a94de5bbe5da4fed30a039, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object deb96c7ca0c454953a1b11b1526e223da = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = deb96c7ca0c454953a1b11b1526e223da is MARC.Everest.DataTypes.II ? deb96c7ca0c454953a1b11b1526e223da as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(deb96c7ca0c454953a1b11b1526e223da, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d4ac2ab02d0d247a39a873faa72ca84a5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d4ac2ab02d0d247a39a873faa72ca84a5 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d4ac2ab02d0d247a39a873faa72ca84a5 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4ac2ab02d0d247a39a873faa72ca84a5, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d8cb6e8d54d5f4ecf8b139b663140214c : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextControlCode != null && !isInstanceNull) {

			s.WriteAttributeString("contextControlCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextControlCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.NoteText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "noteText", (MARC.Everest.Interfaces.IGraphable)instance.NoteText, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Time != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "time", (MARC.Everest.Interfaces.IGraphable)instance.Time, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedPerson != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "assignedPerson", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPerson, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"ENT".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "ENT", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("contextControlCode") != null) instance.ContextControlCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextControlCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "noteText" ) {

			object d4d830d45051d4e5f99fcfd79c28c8864 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.NoteText = d4d830d45051d4e5f99fcfd79c28c8864 is MARC.Everest.DataTypes.ED ? d4d830d45051d4e5f99fcfd79c28c8864 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d4d830d45051d4e5f99fcfd79c28c8864, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "time" ) {

			object d9f96ff496dff49849674d241bcbcefab = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.Time = d9f96ff496dff49849674d241bcbcefab is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d9f96ff496dff49849674d241bcbcefab as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d9f96ff496dff49849674d241bcbcefab, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "assignedPerson" ) {

			object d530b99f4cc8c4c84a7dfd539d8ef1492 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson), currentInteractionType, resultContext); instance.AssignedPerson = d530b99f4cc8c4c84a7dfd539d8ef1492 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson ? d530b99f4cc8c4c84a7dfd539d8ef1492 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson)MARC.Everest.Connectors.Util.FromWireFormat(d530b99f4cc8c4c84a7dfd539d8ef1492, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson));
}
else if(s.LocalName == "realmCode" ) {

			object dae2b65fcace44d6a96c5dd6604bcd1e3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dae2b65fcace44d6a96c5dd6604bcd1e3 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dae2b65fcace44d6a96c5dd6604bcd1e3 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dae2b65fcace44d6a96c5dd6604bcd1e3, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object db744c3dc177c4eed91a9ca8aebae5060 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = db744c3dc177c4eed91a9ca8aebae5060 is MARC.Everest.DataTypes.II ? db744c3dc177c4eed91a9ca8aebae5060 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(db744c3dc177c4eed91a9ca8aebae5060, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d3d11a9004e5a403e973a0c83a8eb987e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d3d11a9004e5a403e973a0c83a8eb987e is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d3d11a9004e5a403e973a0c83a8eb987e as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d3d11a9004e5a403e973a0c83a8eb987e, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da7980e7b74a64eba8bab2f31bde9c0fe : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("AssignedPerson", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CE<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.111";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CertificateText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "certificateText", (MARC.Everest.Interfaces.IGraphable)instance.CertificateText, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedPrincipalChoiceList != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "assignedPerson", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPrincipalChoiceList, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090000UV01.PrincipalChoiceList), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.RepresentedOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "representedOrganization", (MARC.Everest.Interfaces.IGraphable)instance.RepresentedOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ASSIGNED".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ASSIGNED", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object db9114b07ad2749f8bc761460a0d049b9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = db9114b07ad2749f8bc761460a0d049b9 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? db9114b07ad2749f8bc761460a0d049b9 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(db9114b07ad2749f8bc761460a0d049b9, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d38738cd20efa47ddba80c9611da70572 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d38738cd20efa47ddba80c9611da70572 is MARC.Everest.DataTypes.CE<System.String> ? d38738cd20efa47ddba80c9611da70572 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d38738cd20efa47ddba80c9611da70572, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "addr" ) {

			object dc7ac7ee6dc6b478e91901da25cd13874 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = dc7ac7ee6dc6b478e91901da25cd13874 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? dc7ac7ee6dc6b478e91901da25cd13874 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(dc7ac7ee6dc6b478e91901da25cd13874, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object d1adea2c2a5dc407abc658e9e175759d9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = d1adea2c2a5dc407abc658e9e175759d9 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? d1adea2c2a5dc407abc658e9e175759d9 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(d1adea2c2a5dc407abc658e9e175759d9, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "effectiveTime" ) {

			object dad89a94c7a244c909a68c8f4feaf6752 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = dad89a94c7a244c909a68c8f4feaf6752 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? dad89a94c7a244c909a68c8f4feaf6752 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(dad89a94c7a244c909a68c8f4feaf6752, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "certificateText" ) {

			object dd72f09ab07ba486b98a50b76f39ae061 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.CertificateText = dd72f09ab07ba486b98a50b76f39ae061 is MARC.Everest.DataTypes.ED ? dd72f09ab07ba486b98a50b76f39ae061 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(dd72f09ab07ba486b98a50b76f39ae061, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "assignedPerson" ) {

			object d295ab47c79614cb9920c55c36f1ccdf2 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.Person), currentInteractionType, resultContext); instance.AssignedPrincipalChoiceList = d295ab47c79614cb9920c55c36f1ccdf2 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.Person ? d295ab47c79614cb9920c55c36f1ccdf2 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.Person)MARC.Everest.Connectors.Util.FromWireFormat(d295ab47c79614cb9920c55c36f1ccdf2, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.Person));
}
else if(s.LocalName == "representedOrganization" ) {

			object d12ba33b588ba4e9b8cf0d3d19a4bdc58 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.RepresentedOrganization = d12ba33b588ba4e9b8cf0d3d19a4bdc58 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d12ba33b588ba4e9b8cf0d3d19a4bdc58 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d12ba33b588ba4e9b8cf0d3d19a4bdc58, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "realmCode" ) {

			object d0910eefaa62a42bcb0d9d3be9a1e8091 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d0910eefaa62a42bcb0d9d3be9a1e8091 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d0910eefaa62a42bcb0d9d3be9a1e8091 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d0910eefaa62a42bcb0d9d3be9a1e8091, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object de7ef396f97fd4eb9ab10e9adc1c9a739 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = de7ef396f97fd4eb9ab10e9adc1c9a739 is MARC.Everest.DataTypes.II ? de7ef396f97fd4eb9ab10e9adc1c9a739 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(de7ef396f97fd4eb9ab10e9adc1c9a739, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d8454ec663e3c46dd9b5a991779ca19bc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d8454ec663e3c46dd9b5a991779ca19bc is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d8454ec663e3c46dd9b5a991779ca19bc as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d8454ec663e3c46dd9b5a991779ca19bc, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d26d79e493f11426488c58f4edc6fd4ca : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.II(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PolicyHolderEntityChoice != null && !isInstanceNull) {

 if(instance.PolicyHolderEntityChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person)) {

			retVal = Host.WriteElementUtil(s, "policyHolderPerson", (MARC.Everest.Interfaces.IGraphable)instance.PolicyHolderEntityChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person), context, resultContext);
}
else if(instance.PolicyHolderEntityChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization)) {

			retVal = Host.WriteElementUtil(s, "policyHolderOrganization", (MARC.Everest.Interfaces.IGraphable)instance.PolicyHolderEntityChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.PolicyHolderEntityChoice.GetType()), s.ToString(), null)); }
}
if(instance.UnderwritingOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "underwritingOrganization", (MARC.Everest.Interfaces.IGraphable)instance.UnderwritingOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"POLHOLD".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "POLHOLD", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object ddb672596c83e411db620b994714a773f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.Id = ddb672596c83e411db620b994714a773f is MARC.Everest.DataTypes.II ? ddb672596c83e411db620b994714a773f as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(ddb672596c83e411db620b994714a773f, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "addr" ) {

			object de0349f66899f44439437e2ff3883c945 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = de0349f66899f44439437e2ff3883c945 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? de0349f66899f44439437e2ff3883c945 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(de0349f66899f44439437e2ff3883c945, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object dc97727a4a1694941918a9d7b3732f3e6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = dc97727a4a1694941918a9d7b3732f3e6 is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? dc97727a4a1694941918a9d7b3732f3e6 as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(dc97727a4a1694941918a9d7b3732f3e6, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "policyHolderPerson" ) {

			object d9224467cec294f6ba14d6c0a780ef0e3 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person), currentInteractionType, resultContext); instance.PolicyHolderEntityChoice = d9224467cec294f6ba14d6c0a780ef0e3 is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person ? d9224467cec294f6ba14d6c0a780ef0e3 as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person)MARC.Everest.Connectors.Util.FromWireFormat(d9224467cec294f6ba14d6c0a780ef0e3, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Person));
}
else if(s.LocalName == "policyHolderOrganization" ) {

			object d8fd3c530147348c6aec32305682b39cb = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization), currentInteractionType, resultContext); instance.PolicyHolderEntityChoice = d8fd3c530147348c6aec32305682b39cb is MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization ? d8fd3c530147348c6aec32305682b39cb as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d8fd3c530147348c6aec32305682b39cb, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.Organization));
}
else if(s.LocalName == "underwritingOrganization" ) {

			object d8b96d90b25c148029accd8aac3c7a342 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization), currentInteractionType, resultContext); instance.UnderwritingOrganization = d8b96d90b25c148029accd8aac3c7a342 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization ? d8b96d90b25c148029accd8aac3c7a342 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d8b96d90b25c148029accd8aac3c7a342, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150000UV02.Organization));
}
else if(s.LocalName == "realmCode" ) {

			object d2d7fb869691c4287a5a957794ff55b4e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d2d7fb869691c4287a5a957794ff55b4e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d2d7fb869691c4287a5a957794ff55b4e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d2d7fb869691c4287a5a957794ff55b4e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d3c22682010db45f3acc91b1aba120439 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d3c22682010db45f3acc91b1aba120439 is MARC.Everest.DataTypes.II ? d3c22682010db45f3acc91b1aba120439 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d3c22682010db45f3acc91b1aba120439, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d7c4566655fed43e89587649f66a162da = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d7c4566655fed43e89587649f66a162da is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d7c4566655fed43e89587649f66a162da as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d7c4566655fed43e89587649f66a162da, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT510005UV06.PolicyHolder is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9afde85ea21f407796e69aabd2e76e70 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("ControlActProcess", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.1.18";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Text != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "text", (MARC.Everest.Interfaces.IGraphable)instance.Text, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PriorityCode != null && !isInstanceNull) {

if(!instance.PriorityCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "priorityCode", (MARC.Everest.Interfaces.IGraphable)instance.PriorityCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ReasonCode != null && !isInstanceNull) {

if(!instance.ReasonCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "reasonCode", (MARC.Everest.Interfaces.IGraphable)instance.ReasonCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LanguageCode != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.LanguageCode.CodeSystem) && instance.LanguageCode.NullFlavor == null) instance.LanguageCode.CodeSystem = "";
			retVal = Host.WriteElementUtil(s, "languageCode", (MARC.Everest.Interfaces.IGraphable)instance.LanguageCode, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Overseer != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Overseer) { retVal = Host.WriteElementUtil(s, "overseer", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AuthorOrPerformer != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.AuthorOrPerformer) { retVal = Host.WriteElementUtil(s, "authorOrPerformer", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.DataEnterer != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.DataEnterer) { retVal = Host.WriteElementUtil(s, "dataEnterer", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.InformationRecipient != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.InformationRecipient) { retVal = Host.WriteElementUtil(s, "informationRecipient", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Subject != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Subject) { retVal = Host.WriteElementUtil(s, "subject", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ReasonOf != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.ReasonOf) { retVal = Host.WriteElementUtil(s, "reasonOf", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.QueryAck != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "queryAck", (MARC.Everest.Interfaces.IGraphable)instance.QueryAck, typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.queryByParameter != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "queryByParameter", (MARC.Everest.Interfaces.IGraphable)instance.queryByParameter, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"CACT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "CACT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("moodCode") != null) instance.MoodCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<System.String>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d96a6dc650aaa4aeea2ff74cf9c5c5156 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d96a6dc650aaa4aeea2ff74cf9c5c5156 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d96a6dc650aaa4aeea2ff74cf9c5c5156 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d96a6dc650aaa4aeea2ff74cf9c5c5156, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object deb3289c423d046f4b091ee7da6c0f20d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = deb3289c423d046f4b091ee7da6c0f20d is MARC.Everest.DataTypes.CD<System.String> ? deb3289c423d046f4b091ee7da6c0f20d as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(deb3289c423d046f4b091ee7da6c0f20d, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "text" ) {

			object d3a85335888d64c8793eb945623f1ce60 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.Text = d3a85335888d64c8793eb945623f1ce60 is MARC.Everest.DataTypes.ED ? d3a85335888d64c8793eb945623f1ce60 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d3a85335888d64c8793eb945623f1ce60, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "effectiveTime" ) {

			object d71a7c70e25664d41846d8bea886121a8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d71a7c70e25664d41846d8bea886121a8 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d71a7c70e25664d41846d8bea886121a8 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d71a7c70e25664d41846d8bea886121a8, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "priorityCode" ) {

			object d8da60183bbbd46a88a8c73dac93f7907 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.PriorityCode = d8da60183bbbd46a88a8c73dac93f7907 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? d8da60183bbbd46a88a8c73dac93f7907 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d8da60183bbbd46a88a8c73dac93f7907, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "reasonCode" ) {

			object dedad02282523488e9eac2b3be53c9426 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.ReasonCode = dedad02282523488e9eac2b3be53c9426 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? dedad02282523488e9eac2b3be53c9426 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dedad02282523488e9eac2b3be53c9426, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "languageCode" ) {

			object dc2ade44f8062491d882c703e18fea54f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.LanguageCode = dc2ade44f8062491d882c703e18fea54f is MARC.Everest.DataTypes.CE<System.String> ? dc2ade44f8062491d882c703e18fea54f as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(dc2ade44f8062491d882c703e18fea54f, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "overseer" ) {

			object d4324f9f59b7840919a1cee29632859fb = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer), currentInteractionType, resultContext); instance.Overseer.Add(d4324f9f59b7840919a1cee29632859fb is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer)d4324f9f59b7840919a1cee29632859fb : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer)MARC.Everest.Connectors.Util.FromWireFormat(d4324f9f59b7840919a1cee29632859fb, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer)));
}
else if(s.LocalName == "authorOrPerformer" ) {

			object df99d8e22cde2428b81f3ec94021dddb4 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer), currentInteractionType, resultContext); instance.AuthorOrPerformer.Add(df99d8e22cde2428b81f3ec94021dddb4 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer)df99d8e22cde2428b81f3ec94021dddb4 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer)MARC.Everest.Connectors.Util.FromWireFormat(df99d8e22cde2428b81f3ec94021dddb4, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer)));
}
else if(s.LocalName == "dataEnterer" ) {

			object d0f61a55a8a11450fa96452218e2dd745 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer), currentInteractionType, resultContext); instance.DataEnterer.Add(d0f61a55a8a11450fa96452218e2dd745 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer)d0f61a55a8a11450fa96452218e2dd745 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer)MARC.Everest.Connectors.Util.FromWireFormat(d0f61a55a8a11450fa96452218e2dd745, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.DataEnterer)));
}
else if(s.LocalName == "informationRecipient" ) {

			object d4a05c1dcb0e14ee2887fa68dd0b10284 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient), currentInteractionType, resultContext); instance.InformationRecipient.Add(d4a05c1dcb0e14ee2887fa68dd0b10284 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient)d4a05c1dcb0e14ee2887fa68dd0b10284 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient)MARC.Everest.Connectors.Util.FromWireFormat(d4a05c1dcb0e14ee2887fa68dd0b10284, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient)));
}
else if(s.LocalName == "subject" ) {

			object d9ad03045d0b740d088af870a2467ddd8 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>), currentInteractionType, resultContext); instance.Subject.Add(d9ad03045d0b740d088af870a2467ddd8 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>)d9ad03045d0b740d088af870a2467ddd8 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>)MARC.Everest.Connectors.Util.FromWireFormat(d9ad03045d0b740d088af870a2467ddd8, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>)));
}
else if(s.LocalName == "reasonOf" ) {

			object d52a9fa4486dd4490b121d7940ff6273d = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason), currentInteractionType, resultContext); instance.ReasonOf.Add(d52a9fa4486dd4490b121d7940ff6273d is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason)d52a9fa4486dd4490b121d7940ff6273d : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason)MARC.Everest.Connectors.Util.FromWireFormat(d52a9fa4486dd4490b121d7940ff6273d, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason)));
}
else if(s.LocalName == "queryAck" ) {

			object dc1b6599d1b3e4ae185387f139df789c8 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck), currentInteractionType, resultContext); instance.QueryAck = dc1b6599d1b3e4ae185387f139df789c8 is MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck ? dc1b6599d1b3e4ae185387f139df789c8 as MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck : (MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck)MARC.Everest.Connectors.Util.FromWireFormat(dc1b6599d1b3e4ae185387f139df789c8, typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck));
}
else if(s.LocalName == "queryByParameter" ) {

			object d930c12ed30a642bb8fa1266e385478df = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter), currentInteractionType, resultContext); instance.queryByParameter = d930c12ed30a642bb8fa1266e385478df is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter ? d930c12ed30a642bb8fa1266e385478df as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter)MARC.Everest.Connectors.Util.FromWireFormat(d930c12ed30a642bb8fa1266e385478df, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter));
}
else if(s.LocalName == "realmCode" ) {

			object d2a6f993e33f84b148783e132de6a993c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d2a6f993e33f84b148783e132de6a993c is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d2a6f993e33f84b148783e132de6a993c as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d2a6f993e33f84b148783e132de6a993c, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dbfac2f93f633494eb3e5a3b35004d069 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dbfac2f93f633494eb3e5a3b35004d069 is MARC.Everest.DataTypes.II ? dbfac2f93f633494eb3e5a3b35004d069 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dbfac2f93f633494eb3e5a3b35004d069, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d3986bad24c5b47a2acd066cdc21e2008 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d3986bad24c5b47a2acd066cdc21e2008 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d3986bad24c5b47a2acd066cdc21e2008 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d3986bad24c5b47a2acd066cdc21e2008, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter,MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess`3 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess`3 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.QueryAck == null || instance.QueryAck.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property QueryAck in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.ControlActProcess`3 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d02c16cc8dcc6463894177f8cf3470b21 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextControlCode != null && !isInstanceNull) {

			s.WriteAttributeString("contextControlCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextControlCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedEntity != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "assignedEntity", (MARC.Everest.Interfaces.IGraphable)instance.AssignedEntity, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"CST".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "CST", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("contextControlCode") != null) instance.ContextControlCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextControlCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "assignedEntity" ) {

			object dbe615ad4ef9e4d5d9d0f4ee8b39f267e = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity), currentInteractionType, resultContext); instance.AssignedEntity = dbe615ad4ef9e4d5d9d0f4ee8b39f267e is MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity ? dbe615ad4ef9e4d5d9d0f4ee8b39f267e as MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity)MARC.Everest.Connectors.Util.FromWireFormat(dbe615ad4ef9e4d5d9d0f4ee8b39f267e, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity));
}
else if(s.LocalName == "realmCode" ) {

			object d415a8c0e041d4c53b5241e6666848446 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d415a8c0e041d4c53b5241e6666848446 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d415a8c0e041d4c53b5241e6666848446 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d415a8c0e041d4c53b5241e6666848446, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dbac5a55659d04bca907e499a602867db = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dbac5a55659d04bca907e499a602867db is MARC.Everest.DataTypes.II ? dbac5a55659d04bca907e499a602867db as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dbac5a55659d04bca907e499a602867db, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d261bd2e1d8a142ebaa6d1b2b5a5c827e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d261bd2e1d8a142ebaa6d1b2b5a5c827e is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d261bd2e1d8a142ebaa6d1b2b5a5c827e as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d261bd2e1d8a142ebaa6d1b2b5a5c827e, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9b3a58eaa89c4414a9f8a5617d7b3f70 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextControlCode != null && !isInstanceNull) {

			s.WriteAttributeString("contextControlCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextControlCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.NoteText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "noteText", (MARC.Everest.Interfaces.IGraphable)instance.NoteText, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Time != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "time", (MARC.Everest.Interfaces.IGraphable)instance.Time, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ModeCode != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.ModeCode.CodeSystem) && instance.ModeCode.NullFlavor == null) instance.ModeCode.CodeSystem = "2.16.840.1.113883.5.1064";
			retVal = Host.WriteElementUtil(s, "modeCode", (MARC.Everest.Interfaces.IGraphable)instance.ModeCode, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SignatureCode != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.SignatureCode.CodeSystem) && instance.SignatureCode.NullFlavor == null) instance.SignatureCode.CodeSystem = "";
			retVal = Host.WriteElementUtil(s, "signatureCode", (MARC.Everest.Interfaces.IGraphable)instance.SignatureCode, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SignatureText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "signatureText", (MARC.Everest.Interfaces.IGraphable)instance.SignatureText, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ParticipationChoice != null && !isInstanceNull) {

 if(instance.ParticipationChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090300UV01.AssignedDevice)) {

			retVal = Host.WriteElementUtil(s, "assignedDevice", (MARC.Everest.Interfaces.IGraphable)instance.ParticipationChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090300UV01.AssignedDevice), context, resultContext);
}
else if(instance.ParticipationChoice.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson)) {

			retVal = Host.WriteElementUtil(s, "assignedPerson", (MARC.Everest.Interfaces.IGraphable)instance.ParticipationChoice, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.ParticipationChoice.GetType()), s.ToString(), null)); }
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("typeCode") != null) instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>));
			if(s.GetAttribute("contextControlCode") != null) instance.ContextControlCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextControlCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "noteText" ) {

			object d818f02caf3c44491a84316ffe52df50b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.NoteText = d818f02caf3c44491a84316ffe52df50b is MARC.Everest.DataTypes.ED ? d818f02caf3c44491a84316ffe52df50b as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d818f02caf3c44491a84316ffe52df50b, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "time" ) {

			object d68ecdb5ea1164a7792d040a39de2ec58 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.Time = d68ecdb5ea1164a7792d040a39de2ec58 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d68ecdb5ea1164a7792d040a39de2ec58 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d68ecdb5ea1164a7792d040a39de2ec58, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "modeCode" ) {

			object d2ad5e146649547bead96c3e93bf1e0a5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>), currentInteractionType, resultContext); instance.ModeCode = d2ad5e146649547bead96c3e93bf1e0a5 is MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode> ? d2ad5e146649547bead96c3e93bf1e0a5 as MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode> : (MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>)MARC.Everest.Connectors.Util.FromWireFormat(d2ad5e146649547bead96c3e93bf1e0a5, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>));
}
else if(s.LocalName == "signatureCode" ) {

			object da2f1ac082ddb4ddda2722f1fa20e2ed4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.SignatureCode = da2f1ac082ddb4ddda2722f1fa20e2ed4 is MARC.Everest.DataTypes.CE<System.String> ? da2f1ac082ddb4ddda2722f1fa20e2ed4 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(da2f1ac082ddb4ddda2722f1fa20e2ed4, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "signatureText" ) {

			object d56a949e30a4d46a9a991048d55e138e5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.SignatureText = d56a949e30a4d46a9a991048d55e138e5 is MARC.Everest.DataTypes.ED ? d56a949e30a4d46a9a991048d55e138e5 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d56a949e30a4d46a9a991048d55e138e5, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "assignedDevice" ) {

			object db535e3b9890f492fa3e6a6b0eb5d26c3 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090300UV01.AssignedDevice), currentInteractionType, resultContext); instance.ParticipationChoice = db535e3b9890f492fa3e6a6b0eb5d26c3 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090300UV01.AssignedDevice ? db535e3b9890f492fa3e6a6b0eb5d26c3 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090300UV01.AssignedDevice : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090300UV01.AssignedDevice)MARC.Everest.Connectors.Util.FromWireFormat(db535e3b9890f492fa3e6a6b0eb5d26c3, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090300UV01.AssignedDevice));
}
else if(s.LocalName == "assignedPerson" ) {

			object dab58a82ca8fd4f38a2943eb4ac952937 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson), currentInteractionType, resultContext); instance.ParticipationChoice = dab58a82ca8fd4f38a2943eb4ac952937 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson ? dab58a82ca8fd4f38a2943eb4ac952937 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson)MARC.Everest.Connectors.Util.FromWireFormat(dab58a82ca8fd4f38a2943eb4ac952937, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson));
}
else if(s.LocalName == "realmCode" ) {

			object d612ee37f89ee4f55872be9e3a93c9fe5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d612ee37f89ee4f55872be9e3a93c9fe5 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d612ee37f89ee4f55872be9e3a93c9fe5 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d612ee37f89ee4f55872be9e3a93c9fe5, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d6673e735e495477fb3420479fdfe6130 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d6673e735e495477fb3420479fdfe6130 is MARC.Everest.DataTypes.II ? d6673e735e495477fb3420479fdfe6130 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d6673e735e495477fb3420479fdfe6130, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dd574430598c149b1b4687ae54675c15b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dd574430598c149b1b4687ae54675c15b is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dd574430598c149b1b4687ae54675c15b as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dd574430598c149b1b4687ae54675c15b, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d32d4b2efbca94d26a3b71e99e234254e : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2 instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextControlCode != null && !isInstanceNull) {

			s.WriteAttributeString("contextControlCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextControlCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.NoteText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "noteText", (MARC.Everest.Interfaces.IGraphable)instance.NoteText, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Time != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "time", (MARC.Everest.Interfaces.IGraphable)instance.Time, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ModeCode != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.ModeCode.CodeSystem) && instance.ModeCode.NullFlavor == null) instance.ModeCode.CodeSystem = "2.16.840.1.113883.5.1064";
			retVal = Host.WriteElementUtil(s, "modeCode", (MARC.Everest.Interfaces.IGraphable)instance.ModeCode, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedEntity != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "assignedEntity", (MARC.Everest.Interfaces.IGraphable)instance.AssignedEntity, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2 instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"AUT".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "AUT", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("contextControlCode") != null) instance.ContextControlCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextControlCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "noteText" ) {

			object db4f03f84f9b64cbb84d47fffaa8965eb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.NoteText = db4f03f84f9b64cbb84d47fffaa8965eb is MARC.Everest.DataTypes.ED ? db4f03f84f9b64cbb84d47fffaa8965eb as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(db4f03f84f9b64cbb84d47fffaa8965eb, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "time" ) {

			object d8018d250967b4e21a3e3816cc27fff2e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.Time = d8018d250967b4e21a3e3816cc27fff2e is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d8018d250967b4e21a3e3816cc27fff2e as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d8018d250967b4e21a3e3816cc27fff2e, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "modeCode" ) {

			object d12be60acdb7947f3956c7560ba0b101d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>), currentInteractionType, resultContext); instance.ModeCode = d12be60acdb7947f3956c7560ba0b101d is MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode> ? d12be60acdb7947f3956c7560ba0b101d as MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode> : (MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>)MARC.Everest.Connectors.Util.FromWireFormat(d12be60acdb7947f3956c7560ba0b101d, typeof(MARC.Everest.DataTypes.CE<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationMode>));
}
else if(s.LocalName == "assignedEntity" ) {

			object d8ec2abaeb07648f49d04c152df22a214 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity), currentInteractionType, resultContext); instance.AssignedEntity = d8ec2abaeb07648f49d04c152df22a214 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity ? d8ec2abaeb07648f49d04c152df22a214 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity)MARC.Everest.Connectors.Util.FromWireFormat(d8ec2abaeb07648f49d04c152df22a214, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity));
}
else if(s.LocalName == "realmCode" ) {

			object d0106be890ed0459c8213545207a7487c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d0106be890ed0459c8213545207a7487c is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d0106be890ed0459c8213545207a7487c as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d0106be890ed0459c8213545207a7487c, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d3c3ac177b203480e80eee71cdb7629b2 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d3c3ac177b203480e80eee71cdb7629b2 is MARC.Everest.DataTypes.II ? d3c3ac177b203480e80eee71cdb7629b2 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d3c3ac177b203480e80eee71cdb7629b2, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d6ae468de88a5458c828dd6985cd548b0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d6ae468de88a5458c828dd6985cd548b0 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d6ae468de88a5458c828dd6985cd548b0 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d6ae468de88a5458c828dd6985cd548b0, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2 instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dad09f9372f7e4db185b258f94e2f8f49 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.RegistrationRequest != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "registrationRequest", (MARC.Everest.Interfaces.IGraphable)instance.RegistrationRequest, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"FLFS".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "FLFS", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "registrationRequest" ) {

			object db594ca1f89de47318075027d4a2106f7 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest), currentInteractionType, resultContext); instance.RegistrationRequest = db594ca1f89de47318075027d4a2106f7 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest ? db594ca1f89de47318075027d4a2106f7 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest)MARC.Everest.Connectors.Util.FromWireFormat(db594ca1f89de47318075027d4a2106f7, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest));
}
else if(s.LocalName == "realmCode" ) {

			object d0f9cf1eeb0ab4e478a59fc69d088aeba = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d0f9cf1eeb0ab4e478a59fc69d088aeba is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d0f9cf1eeb0ab4e478a59fc69d088aeba as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d0f9cf1eeb0ab4e478a59fc69d088aeba, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dc0c9c749a6d4429bbae26874a69ccb44 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dc0c9c749a6d4429bbae26874a69ccb44 is MARC.Everest.DataTypes.II ? dc0c9c749a6d4429bbae26874a69ccb44 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dc0c9c749a6d4429bbae26874a69ccb44, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d5e1b4113e3914160b96f524e04040437 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d5e1b4113e3914160b96f524e04040437 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d5e1b4113e3914160b96f524e04040437 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d5e1b4113e3914160b96f524e04040437, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dd72103c9c23f462189287fe66a32581e : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("AssignedEntity", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CE<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.111";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Addr != null && !isInstanceNull) {

if(!instance.Addr.IsEmpty)
			retVal = Host.WriteElementUtil(s, "addr", (MARC.Everest.Interfaces.IGraphable)instance.Addr, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Telecom != null && !isInstanceNull) {

if(!instance.Telecom.IsEmpty)
			retVal = Host.WriteElementUtil(s, "telecom", (MARC.Everest.Interfaces.IGraphable)instance.Telecom, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedPrincipalChoiceList != null && !isInstanceNull) {

 if(instance.AssignedPrincipalChoiceList.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device)) {

			retVal = Host.WriteElementUtil(s, "assignedDevice", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPrincipalChoiceList, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device), context, resultContext);
}
else if(instance.AssignedPrincipalChoiceList.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization)) {

			retVal = Host.WriteElementUtil(s, "assignedOrganization", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPrincipalChoiceList, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization), context, resultContext);
}
else if(instance.AssignedPrincipalChoiceList.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person)) {

			retVal = Host.WriteElementUtil(s, "assignedPerson", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPrincipalChoiceList, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.AssignedPrincipalChoiceList.GetType()), s.ToString(), null)); }
}
if(instance.RepresentedOrganization != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "representedOrganization", (MARC.Everest.Interfaces.IGraphable)instance.RepresentedOrganization, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity instance = new MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ASSIGNED".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ASSIGNED", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dcfee616b9f5e4741a9b6c7d71b9bd439 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dcfee616b9f5e4741a9b6c7d71b9bd439 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dcfee616b9f5e4741a9b6c7d71b9bd439 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dcfee616b9f5e4741a9b6c7d71b9bd439, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d573f5a561cac4cee97b783f096bb387f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d573f5a561cac4cee97b783f096bb387f is MARC.Everest.DataTypes.CE<System.String> ? d573f5a561cac4cee97b783f096bb387f as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d573f5a561cac4cee97b783f096bb387f, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "addr" ) {

			object d9de06d1eef5e46a098281846c773ec4f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>), currentInteractionType, resultContext); instance.Addr = d9de06d1eef5e46a098281846c773ec4f is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> ? d9de06d1eef5e46a098281846c773ec4f as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>)MARC.Everest.Connectors.Util.FromWireFormat(d9de06d1eef5e46a098281846c773ec4f, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.AD>));
}
else if(s.LocalName == "telecom" ) {

			object dc0199d1011d240bd8201233bec6f3e7b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>), currentInteractionType, resultContext); instance.Telecom = dc0199d1011d240bd8201233bec6f3e7b is MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> ? dc0199d1011d240bd8201233bec6f3e7b as MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL> : (MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>)MARC.Everest.Connectors.Util.FromWireFormat(dc0199d1011d240bd8201233bec6f3e7b, typeof(MARC.Everest.DataTypes.BAG<MARC.Everest.DataTypes.TEL>));
}
else if(s.LocalName == "assignedDevice" ) {

			object df1e4b13cf30c49ba816e578ef8b29a6e = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device), currentInteractionType, resultContext); instance.AssignedPrincipalChoiceList = df1e4b13cf30c49ba816e578ef8b29a6e is MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device ? df1e4b13cf30c49ba816e578ef8b29a6e as MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device)MARC.Everest.Connectors.Util.FromWireFormat(df1e4b13cf30c49ba816e578ef8b29a6e, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090303UV01.Device));
}
else if(s.LocalName == "assignedOrganization" ) {

			object d66aa7d6628da4dc58d46219db016e8bf = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization), currentInteractionType, resultContext); instance.AssignedPrincipalChoiceList = d66aa7d6628da4dc58d46219db016e8bf is MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization ? d66aa7d6628da4dc58d46219db016e8bf as MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d66aa7d6628da4dc58d46219db016e8bf, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090203UV01.Organization));
}
else if(s.LocalName == "assignedPerson" ) {

			object dd73ed6b5fb03474c80106766ca80b5f3 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person), currentInteractionType, resultContext); instance.AssignedPrincipalChoiceList = dd73ed6b5fb03474c80106766ca80b5f3 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person ? dd73ed6b5fb03474c80106766ca80b5f3 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person)MARC.Everest.Connectors.Util.FromWireFormat(dd73ed6b5fb03474c80106766ca80b5f3, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090103UV01.Person));
}
else if(s.LocalName == "representedOrganization" ) {

			object d57e64145a9b14af18b1c1267918f3944 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization), currentInteractionType, resultContext); instance.RepresentedOrganization = d57e64145a9b14af18b1c1267918f3944 is MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization ? d57e64145a9b14af18b1c1267918f3944 as MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization : (MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization)MARC.Everest.Connectors.Util.FromWireFormat(d57e64145a9b14af18b1c1267918f3944, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT150003UV03.Organization));
}
else if(s.LocalName == "realmCode" ) {

			object d3296b0fb18f541b6ba387ff73ada0e21 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d3296b0fb18f541b6ba387ff73ada0e21 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d3296b0fb18f541b6ba387ff73ada0e21 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d3296b0fb18f541b6ba387ff73ada0e21, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object db17dddb03c5f41239577279c5c2ccdb7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = db17dddb03c5f41239577279c5c2ccdb7 is MARC.Everest.DataTypes.II ? db17dddb03c5f41239577279c5c2ccdb7 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(db17dddb03c5f41239577279c5c2ccdb7, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d51ee8f1a1a194f93a3064cefff0d5c7c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d51ee8f1a1a194f93a3064cefff0d5c7c is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d51ee8f1a1a194f93a3064cefff0d5c7c as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d51ee8f1a1a194f93a3064cefff0d5c7c, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity instance = o as MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da6321bcd94e84e5b8bd27ea3b7896782 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1 instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Time != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "time", (MARC.Everest.Interfaces.IGraphable)instance.Time, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedEntity != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "assignedEntity", (MARC.Everest.Interfaces.IGraphable)instance.AssignedEntity, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1 instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"AUT".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "AUT", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "time" ) {

			object dfdaed8334a0548c5860f3b67b7ba59d9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.Time = dfdaed8334a0548c5860f3b67b7ba59d9 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? dfdaed8334a0548c5860f3b67b7ba59d9 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(dfdaed8334a0548c5860f3b67b7ba59d9, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "assignedEntity" ) {

			object d0c394eb27bae4dafa651c64ac9b76f80 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity), currentInteractionType, resultContext); instance.AssignedEntity = d0c394eb27bae4dafa651c64ac9b76f80 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity ? d0c394eb27bae4dafa651c64ac9b76f80 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity)MARC.Everest.Connectors.Util.FromWireFormat(d0c394eb27bae4dafa651c64ac9b76f80, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090003UV01.AssignedEntity));
}
else if(s.LocalName == "realmCode" ) {

			object ddf231954b69943739ac9bb94631812a4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = ddf231954b69943739ac9bb94631812a4 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? ddf231954b69943739ac9bb94631812a4 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(ddf231954b69943739ac9bb94631812a4, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d7c8f8bead50545eb9d5b89512c5bc7e5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d7c8f8bead50545eb9d5b89512c5bc7e5 is MARC.Everest.DataTypes.II ? d7c8f8bead50545eb9d5b89512c5bc7e5 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d7c8f8bead50545eb9d5b89512c5bc7e5, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d32be7c8c44c140c2a108c4276e5638a8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d32be7c8c44c140c2a108c4276e5638a8 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d32be7c8c44c140c2a108c4276e5638a8 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d32be7c8c44c140c2a108c4276e5638a8, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1 instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9fe1eb1c6f064dd99dfda0f4c1403ed0 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Author != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Author) { retVal = Host.WriteElementUtil(s, "author", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"REG".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "REG", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"RQO".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "RQO", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d8d13271dd54e4e4da7be81d3b4810868 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d8d13271dd54e4e4da7be81d3b4810868 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d8d13271dd54e4e4da7be81d3b4810868 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d8d13271dd54e4e4da7be81d3b4810868, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "author" ) {

			object d2b3131b7ef714a3bb7528469773cc3cd = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1), currentInteractionType, resultContext); instance.Author.Add(d2b3131b7ef714a3bb7528469773cc3cd is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1 ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1)d2b3131b7ef714a3bb7528469773cc3cd : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1)MARC.Everest.Connectors.Util.FromWireFormat(d2b3131b7ef714a3bb7528469773cc3cd, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author1)));
}
else if(s.LocalName == "realmCode" ) {

			object ddc0af3f7465346afa3d805eeb5093f3b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = ddc0af3f7465346afa3d805eeb5093f3b is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? ddc0af3f7465346afa3d805eeb5093f3b as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(ddc0af3f7465346afa3d805eeb5093f3b, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d66dbe986ccdb47e8a177919836057cb6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d66dbe986ccdb47e8a177919836057cb6 is MARC.Everest.DataTypes.II ? d66dbe986ccdb47e8a177919836057cb6 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d66dbe986ccdb47e8a177919836057cb6, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object db6cf3f895dd9412c92dc2361893bb0a4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = db6cf3f895dd9412c92dc2361893bb0a4 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? db6cf3f895dd9412c92dc2361893bb0a4 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(db6cf3f895dd9412c92dc2361893bb0a4, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.RegistrationRequest is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dc1e3d62176c84c74a93c2f37cc7faf0d : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ActDefinition != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "actDefinition", (MARC.Everest.Interfaces.IGraphable)instance.ActDefinition, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"INST".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "INST", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "actDefinition" ) {

			object d567c6fcd948d452bab364c4371d82fdb = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition), currentInteractionType, resultContext); instance.ActDefinition = d567c6fcd948d452bab364c4371d82fdb is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition ? d567c6fcd948d452bab364c4371d82fdb as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition)MARC.Everest.Connectors.Util.FromWireFormat(d567c6fcd948d452bab364c4371d82fdb, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition));
}
else if(s.LocalName == "realmCode" ) {

			object d4d4545b59446463983226b4e5135e80f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d4d4545b59446463983226b4e5135e80f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d4d4545b59446463983226b4e5135e80f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d4d4545b59446463983226b4e5135e80f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dd1ae1ba597cd419bb47d58a91ff3f64b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dd1ae1ba597cd419bb47d58a91ff3f64b is MARC.Everest.DataTypes.II ? dd1ae1ba597cd419bb47d58a91ff3f64b as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dd1ae1ba597cd419bb47d58a91ff3f64b, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dda04e32d8ccc4018bcb8b9b3148922f9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dda04e32d8ccc4018bcb8b9b3148922f9 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dda04e32d8ccc4018bcb8b9b3148922f9 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dda04e32d8ccc4018bcb8b9b3148922f9, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d730c06f5fdd24e90a54df8e515de1bd3 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient>);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient> instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient>;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient>'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.registeredRole != null && !isInstanceNull) {

 if(instance.registeredRole.GetType() == typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient) && context is MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02) {

			retVal = Host.WriteElementUtil(s, "patient", (MARC.Everest.Interfaces.IGraphable)instance.registeredRole, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient), context, resultContext);
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotSupportedChoiceResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, System.String.Format("Type {0} is not a valid choice according to available choice elements", instance.registeredRole.GetType()), s.ToString(), null)); }
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient> instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient>();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SBJ".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SBJ", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "registeredRole" ) {

			object df258f85d24494a6ba9a803a796dc54e4 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient), currentInteractionType, resultContext); instance.registeredRole = df258f85d24494a6ba9a803a796dc54e4 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient ? df258f85d24494a6ba9a803a796dc54e4 as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient)MARC.Everest.Connectors.Util.FromWireFormat(df258f85d24494a6ba9a803a796dc54e4, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient));
}
else if(s.LocalName == "patient" && currentInteractionType == typeof(MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201306UV02)) {

			object d42788a1b19fb44d990bc8ef787cd9bb6 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient), currentInteractionType, resultContext); instance.registeredRole = d42788a1b19fb44d990bc8ef787cd9bb6 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient ? d42788a1b19fb44d990bc8ef787cd9bb6 as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient)MARC.Everest.Connectors.Util.FromWireFormat(d42788a1b19fb44d990bc8ef787cd9bb6, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient));
}
else if(s.LocalName == "realmCode" ) {

			object dad7d260ab95742a7bc25c26c64bab454 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dad7d260ab95742a7bc25c26c64bab454 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dad7d260ab95742a7bc25c26c64bab454 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dad7d260ab95742a7bc25c26c64bab454, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d1836b5a45e114e5b8b689190721313c9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d1836b5a45e114e5b8b689190721313c9 is MARC.Everest.DataTypes.II ? d1836b5a45e114e5b8b689190721313c9 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d1836b5a45e114e5b8b689190721313c9, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d9a204b2bd3bb46a096063d1fcf86de48 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d9a204b2bd3bb46a096063d1fcf86de48 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d9a204b2bd3bb46a096063d1fcf86de48 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d9a204b2bd3bb46a096063d1fcf86de48, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient> instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient>;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient>'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2`1 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class dc7b6d3e7e1a948a392da25675545b5c8 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime == null && Host.CreateRequiredElements) { instance.EffectiveTime = new MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>(); instance.EffectiveTime.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Subject1 != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "subject1", (MARC.Everest.Interfaces.IGraphable)instance.Subject1, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Author != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "author", (MARC.Everest.Interfaces.IGraphable)instance.Author, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Custodian != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "custodian", (MARC.Everest.Interfaces.IGraphable)instance.Custodian, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.InFulfillmentOf != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.InFulfillmentOf) { retVal = Host.WriteElementUtil(s, "inFulfillmentOf", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Definition != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Definition) { retVal = Host.WriteElementUtil(s, "definition", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ReplacementOf != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.ReplacementOf) { retVal = Host.WriteElementUtil(s, "replacementOf", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Subject2 != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "subject2", (MARC.Everest.Interfaces.IGraphable)instance.Subject2, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"REG".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "REG", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d01c88579d62945699008d91fad3fadf8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d01c88579d62945699008d91fad3fadf8 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d01c88579d62945699008d91fad3fadf8 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d01c88579d62945699008d91fad3fadf8, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "statusCode" ) {

			object dd85eb8cc561845b68e73fd3170c18083 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), currentInteractionType, resultContext); instance.StatusCode = dd85eb8cc561845b68e73fd3170c18083 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> ? dd85eb8cc561845b68e73fd3170c18083 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>)MARC.Everest.Connectors.Util.FromWireFormat(dd85eb8cc561845b68e73fd3170c18083, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>));
}
else if(s.LocalName == "effectiveTime" ) {

			object dec92bbe1818945a4acade19c8c4affb5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = dec92bbe1818945a4acade19c8c4affb5 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? dec92bbe1818945a4acade19c8c4affb5 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(dec92bbe1818945a4acade19c8c4affb5, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "subject1" ) {

			object daf22f6f9ea5f4ba4aecfa3cce325f8a3 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient>), currentInteractionType, resultContext); instance.Subject1 = daf22f6f9ea5f4ba4aecfa3cce325f8a3 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient> ? daf22f6f9ea5f4ba4aecfa3cce325f8a3 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient> : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient>)MARC.Everest.Connectors.Util.FromWireFormat(daf22f6f9ea5f4ba4aecfa3cce325f8a3, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject2<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient>));
}
else if(s.LocalName == "author" ) {

			object d12bfaa13aa3b4fa2b084e5ae81ec6ac7 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2), currentInteractionType, resultContext); instance.Author = d12bfaa13aa3b4fa2b084e5ae81ec6ac7 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2 ? d12bfaa13aa3b4fa2b084e5ae81ec6ac7 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2)MARC.Everest.Connectors.Util.FromWireFormat(d12bfaa13aa3b4fa2b084e5ae81ec6ac7, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Author2));
}
else if(s.LocalName == "custodian" ) {

			object d734e61a97b764249b4f17454ef54439b = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian), currentInteractionType, resultContext); instance.Custodian = d734e61a97b764249b4f17454ef54439b is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian ? d734e61a97b764249b4f17454ef54439b as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian)MARC.Everest.Connectors.Util.FromWireFormat(d734e61a97b764249b4f17454ef54439b, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Custodian));
}
else if(s.LocalName == "inFulfillmentOf" ) {

			object dd5c083561a5845d4b3a42c74625d4aab = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf), currentInteractionType, resultContext); instance.InFulfillmentOf.Add(dd5c083561a5845d4b3a42c74625d4aab is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf)dd5c083561a5845d4b3a42c74625d4aab : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf)MARC.Everest.Connectors.Util.FromWireFormat(dd5c083561a5845d4b3a42c74625d4aab, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InFulfillmentOf)));
}
else if(s.LocalName == "definition" ) {

			object d05f2d22a9e0b47b89932c0b622761e86 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition), currentInteractionType, resultContext); instance.Definition.Add(d05f2d22a9e0b47b89932c0b622761e86 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition)d05f2d22a9e0b47b89932c0b622761e86 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition)MARC.Everest.Connectors.Util.FromWireFormat(d05f2d22a9e0b47b89932c0b622761e86, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Definition)));
}
else if(s.LocalName == "replacementOf" ) {

			object de074ca1eb49d417993c3d5c308f47032 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf), currentInteractionType, resultContext); instance.ReplacementOf.Add(de074ca1eb49d417993c3d5c308f47032 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf)de074ca1eb49d417993c3d5c308f47032 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf)MARC.Everest.Connectors.Util.FromWireFormat(de074ca1eb49d417993c3d5c308f47032, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf)));
}
else if(s.LocalName == "subject2" ) {

			object d4e23d30ed5404dbbb6efad4a53b92407 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object>), currentInteractionType, resultContext); instance.Subject2 = d4e23d30ed5404dbbb6efad4a53b92407 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object> ? d4e23d30ed5404dbbb6efad4a53b92407 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object> : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object>)MARC.Everest.Connectors.Util.FromWireFormat(d4e23d30ed5404dbbb6efad4a53b92407, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object>));
}
else if(s.LocalName == "realmCode" ) {

			object d9d98cb9fbb384f7da149bfe3c6e0bc3a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d9d98cb9fbb384f7da149bfe3c6e0bc3a is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d9d98cb9fbb384f7da149bfe3c6e0bc3a as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d9d98cb9fbb384f7da149bfe3c6e0bc3a, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dc9f5ac159df942059bb98a94eb5665ba = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dc9f5ac159df942059bb98a94eb5665ba is MARC.Everest.DataTypes.II ? dc9f5ac159df942059bb98a94eb5665ba as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dc9f5ac159df942059bb98a94eb5665ba, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object da4467d71a0034ade8cccd5016f239180 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = da4467d71a0034ade8cccd5016f239180 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? da4467d71a0034ade8cccd5016f239180 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(da4467d71a0034ade8cccd5016f239180, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent`2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent`2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.StatusCode == null || instance.StatusCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property StatusCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent`2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Subject1 == null || instance.Subject1.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Subject1 in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent`2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d3e2473c535cd4043a92c444cc93197a9 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CD<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Text != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "text", (MARC.Everest.Interfaces.IGraphable)instance.Text, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ACT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ACT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"DEF".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "DEF", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object de6ff8826018248078d926869d4b1a0f3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = de6ff8826018248078d926869d4b1a0f3 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? de6ff8826018248078d926869d4b1a0f3 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(de6ff8826018248078d926869d4b1a0f3, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d0dca004bdbf64936889f90854550c013 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = d0dca004bdbf64936889f90854550c013 is MARC.Everest.DataTypes.CD<System.String> ? d0dca004bdbf64936889f90854550c013 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d0dca004bdbf64936889f90854550c013, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "text" ) {

			object d9af7d2e0eae84eaeb4b8da1c48d7af7c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.Text = d9af7d2e0eae84eaeb4b8da1c48d7af7c is MARC.Everest.DataTypes.ED ? d9af7d2e0eae84eaeb4b8da1c48d7af7c as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d9af7d2e0eae84eaeb4b8da1c48d7af7c, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "realmCode" ) {

			object dce60bbebefee4f9bb1c15556ca96e136 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dce60bbebefee4f9bb1c15556ca96e136 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dce60bbebefee4f9bb1c15556ca96e136 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dce60bbebefee4f9bb1c15556ca96e136, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d9dfa6a13c11b4f8ea3c29ab984a9ca64 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d9dfa6a13c11b4f8ea3c29ab984a9ca64 is MARC.Everest.DataTypes.II ? d9dfa6a13c11b4f8ea3c29ab984a9ca64 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d9dfa6a13c11b4f8ea3c29ab984a9ca64, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dd8a2369a896043a49e30df4d9699386f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dd8a2369a896043a49e30df4d9699386f is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dd8a2369a896043a49e30df4d9699386f as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dd8a2369a896043a49e30df4d9699386f, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Code == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Code in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ActDefinition is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d1fa10e66b60445f9ad8f906959594f2f : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PriorRegistration != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "priorRegistration", (MARC.Everest.Interfaces.IGraphable)instance.PriorRegistration, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"RPLC".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "RPLC", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "priorRegistration" ) {

			object df3c602252d3c4ea1bf10531be5eeaea2 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration), currentInteractionType, resultContext); instance.PriorRegistration = df3c602252d3c4ea1bf10531be5eeaea2 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration ? df3c602252d3c4ea1bf10531be5eeaea2 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration)MARC.Everest.Connectors.Util.FromWireFormat(df3c602252d3c4ea1bf10531be5eeaea2, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration));
}
else if(s.LocalName == "realmCode" ) {

			object d03ec2c18577d4f0cbf39342c4fd0b8b1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d03ec2c18577d4f0cbf39342c4fd0b8b1 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d03ec2c18577d4f0cbf39342c4fd0b8b1 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d03ec2c18577d4f0cbf39342c4fd0b8b1, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d74070c3e3929450aba1cd11151f391c4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d74070c3e3929450aba1cd11151f391c4 is MARC.Everest.DataTypes.II ? d74070c3e3929450aba1cd11151f391c4 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d74070c3e3929450aba1cd11151f391c4, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dece8c5b7a3f149548e50f1a84d13d81e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dece8c5b7a3f149548e50f1a84d13d81e is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dece8c5b7a3f149548e50f1a84d13d81e as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dece8c5b7a3f149548e50f1a84d13d81e, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.ReplacementOf is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d2efddfcaa712458cabc7f7f4f9f5f262 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3 instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PriorRegisteredRole != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "priorRegisteredRole", (MARC.Everest.Interfaces.IGraphable)instance.PriorRegisteredRole, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3 instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SBJ".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SBJ", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "priorRegisteredRole" ) {

			object dfaa6fef8642f4920b1d3d755d5816da6 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole), currentInteractionType, resultContext); instance.PriorRegisteredRole = dfaa6fef8642f4920b1d3d755d5816da6 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole ? dfaa6fef8642f4920b1d3d755d5816da6 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole)MARC.Everest.Connectors.Util.FromWireFormat(dfaa6fef8642f4920b1d3d755d5816da6, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole));
}
else if(s.LocalName == "realmCode" ) {

			object dcf0fdafc9bfb402ab1503a75d8042875 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dcf0fdafc9bfb402ab1503a75d8042875 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dcf0fdafc9bfb402ab1503a75d8042875 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dcf0fdafc9bfb402ab1503a75d8042875, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dba1bda69a7054cbb9215d086b6863019 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dba1bda69a7054cbb9215d086b6863019 is MARC.Everest.DataTypes.II ? dba1bda69a7054cbb9215d086b6863019 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dba1bda69a7054cbb9215d086b6863019, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object ded27971a139345f9a9c362626995da93 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = ded27971a139345f9a9c362626995da93 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? ded27971a139345f9a9c362626995da93 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(ded27971a139345f9a9c362626995da93, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3 instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d3d768bad5e9b49a2ba90c2b3bc81426e : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ROL".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ROL", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d563d76bce45046f886af9687cf30b329 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d563d76bce45046f886af9687cf30b329 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d563d76bce45046f886af9687cf30b329 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d563d76bce45046f886af9687cf30b329, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "realmCode" ) {

			object df79a4abc786942318d30f80b09278feb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = df79a4abc786942318d30f80b09278feb is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? df79a4abc786942318d30f80b09278feb as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(df79a4abc786942318d30f80b09278feb, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object de6bd771543894d008b34f356068a83e5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = de6bd771543894d008b34f356068a83e5 is MARC.Everest.DataTypes.II ? de6bd771543894d008b34f356068a83e5 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(de6bd771543894d008b34f356068a83e5, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dd988e9ff8f8147258d4254c408562699 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dd988e9ff8f8147258d4254c408562699 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dd988e9ff8f8147258d4254c408562699 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dd988e9ff8f8147258d4254c408562699, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredRole is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d92a76fe2eb5340bd9f6f0259e47988b8 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4 instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextConductionInd != null && !isInstanceNull) {

			s.WriteAttributeString("contextConductionInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextConductionInd));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PriorRegisteredAct != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "priorRegisteredAct", (MARC.Everest.Interfaces.IGraphable)instance.PriorRegisteredAct, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4 instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SUBJ".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SUBJ", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("contextConductionInd") != null) instance.ContextConductionInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextConductionInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "priorRegisteredAct" ) {

			object da93fe88158594af9bc2cc5170beef209 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct), currentInteractionType, resultContext); instance.PriorRegisteredAct = da93fe88158594af9bc2cc5170beef209 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct ? da93fe88158594af9bc2cc5170beef209 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct)MARC.Everest.Connectors.Util.FromWireFormat(da93fe88158594af9bc2cc5170beef209, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct));
}
else if(s.LocalName == "realmCode" ) {

			object da9506fa298984e7baf28dcea4ed26cda = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = da9506fa298984e7baf28dcea4ed26cda is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? da9506fa298984e7baf28dcea4ed26cda as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(da9506fa298984e7baf28dcea4ed26cda, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d006f7b22fb7a42b0ae185f2b4032d56c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d006f7b22fb7a42b0ae185f2b4032d56c is MARC.Everest.DataTypes.II ? d006f7b22fb7a42b0ae185f2b4032d56c as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d006f7b22fb7a42b0ae185f2b4032d56c, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dcddb95ee72284639a6ee06ba2c2883f4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dcddb95ee72284639a6ee06ba2c2883f4 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dcddb95ee72284639a6ee06ba2c2883f4 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dcddb95ee72284639a6ee06ba2c2883f4, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4 instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.ContextConductionInd == null || instance.ContextConductionInd.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ContextConductionInd in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d5e213da9975c43d4ad4d162442cab4e2 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id == null && Host.CreateRequiredElements) { instance.Id = new MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>(); instance.Id.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode == null && Host.CreateRequiredElements) { instance.StatusCode = new MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>(); instance.StatusCode.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Subject1 != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "subject1", (MARC.Everest.Interfaces.IGraphable)instance.Subject1, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Subject2 != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "subject2", (MARC.Everest.Interfaces.IGraphable)instance.Subject2, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"REG".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "REG", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d656159279cd84c16bd4d0ced5a89e659 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d656159279cd84c16bd4d0ced5a89e659 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d656159279cd84c16bd4d0ced5a89e659 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d656159279cd84c16bd4d0ced5a89e659, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "statusCode" ) {

			object d26338d703fd34fda8f92b837cb1f7667 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>), currentInteractionType, resultContext); instance.StatusCode = d26338d703fd34fda8f92b837cb1f7667 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> ? d26338d703fd34fda8f92b837cb1f7667 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>)MARC.Everest.Connectors.Util.FromWireFormat(d26338d703fd34fda8f92b837cb1f7667, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActStatus>));
}
else if(s.LocalName == "subject1" ) {

			object dc54adcb7f4294f52bbc4d62ee76fd2e5 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3), currentInteractionType, resultContext); instance.Subject1 = dc54adcb7f4294f52bbc4d62ee76fd2e5 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3 ? dc54adcb7f4294f52bbc4d62ee76fd2e5 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3)MARC.Everest.Connectors.Util.FromWireFormat(dc54adcb7f4294f52bbc4d62ee76fd2e5, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject3));
}
else if(s.LocalName == "subject2" ) {

			object dc11bf74e3a1d49dba69d12cdaa8aa590 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4), currentInteractionType, resultContext); instance.Subject2 = dc11bf74e3a1d49dba69d12cdaa8aa590 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4 ? dc11bf74e3a1d49dba69d12cdaa8aa590 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4)MARC.Everest.Connectors.Util.FromWireFormat(dc11bf74e3a1d49dba69d12cdaa8aa590, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject4));
}
else if(s.LocalName == "realmCode" ) {

			object d7ad6a8722d9f4b43870e2ce5a1328c9a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d7ad6a8722d9f4b43870e2ce5a1328c9a is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d7ad6a8722d9f4b43870e2ce5a1328c9a as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d7ad6a8722d9f4b43870e2ce5a1328c9a, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d35a5f126cf0f45189527414bff9501fe = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d35a5f126cf0f45189527414bff9501fe is MARC.Everest.DataTypes.II ? d35a5f126cf0f45189527414bff9501fe as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d35a5f126cf0f45189527414bff9501fe, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dda81dbb37d2a4bc899d8c1c7bb09a5cf = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dda81dbb37d2a4bc899d8c1c7bb09a5cf is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dda81dbb37d2a4bc899d8c1c7bb09a5cf as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dda81dbb37d2a4bc899d8c1c7bb09a5cf, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegistration is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d91a621c3f9bd4565b2c4091b36905081 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object>);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object> instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object>;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object>'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextConductionInd != null && !isInstanceNull) {

			s.WriteAttributeString("contextConductionInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextConductionInd));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.registeredAct != null && !isInstanceNull) {

			s.WriteElementString("registeredAct", "urn:hl7-org:v3", instance.registeredAct.ToString());
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object> instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object>();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SUBJ".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SUBJ", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("contextConductionInd") != null) instance.ContextConductionInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextConductionInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "registeredAct" ) {

			resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, "registeredAct", "urn:hl7-org:v3", s.ToString(), null));
}
else if(s.LocalName == "realmCode" ) {

			object da0358377991149f7ab7faaa59c7bec48 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = da0358377991149f7ab7faaa59c7bec48 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? da0358377991149f7ab7faaa59c7bec48 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(da0358377991149f7ab7faaa59c7bec48, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object db4e703df632843beb8bcabead52b5414 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = db4e703df632843beb8bcabead52b5414 is MARC.Everest.DataTypes.II ? db4e703df632843beb8bcabead52b5414 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(db4e703df632843beb8bcabead52b5414, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d68de2acf26674e69bab83edf9406cfb1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d68de2acf26674e69bab83edf9406cfb1 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d68de2acf26674e69bab83edf9406cfb1 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d68de2acf26674e69bab83edf9406cfb1, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object> instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object>;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5<System.Object>'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5`1 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.ContextConductionInd == null || instance.ContextConductionInd.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ContextConductionInd in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Subject5`1 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d1a883fe11a8b49cfa8a9aa0d1068e5a3 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextConductionInd != null && !isInstanceNull) {

			s.WriteAttributeString("contextConductionInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextConductionInd));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.DetectedIssueEvent != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "detectedIssueEvent", (MARC.Everest.Interfaces.IGraphable)instance.DetectedIssueEvent, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"RSON".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "RSON", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("contextConductionInd") != null) instance.ContextConductionInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextConductionInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "detectedIssueEvent" ) {

			object da850784757bb4077b3a84a3e75fa771e = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent), currentInteractionType, resultContext); instance.DetectedIssueEvent = da850784757bb4077b3a84a3e75fa771e is MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent ? da850784757bb4077b3a84a3e75fa771e as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent : (MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent)MARC.Everest.Connectors.Util.FromWireFormat(da850784757bb4077b3a84a3e75fa771e, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent));
}
else if(s.LocalName == "realmCode" ) {

			object d7ff04529c66b45baa080854515e681de = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d7ff04529c66b45baa080854515e681de is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d7ff04529c66b45baa080854515e681de as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d7ff04529c66b45baa080854515e681de, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dea5642818ac94dbabe908feeb558567d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dea5642818ac94dbabe908feeb558567d is MARC.Everest.DataTypes.II ? dea5642818ac94dbabe908feeb558567d as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dea5642818ac94dbabe908feeb558567d, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object deaa841dd0ab04db893b7e730d1cfa170 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = deaa841dd0ab04db893b7e730d1cfa170 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? deaa841dd0ab04db893b7e730d1cfa170 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(deaa841dd0ab04db893b7e730d1cfa170, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da6cd3b3ad2084ef7a18076b732f27c69 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextConductionInd != null && !isInstanceNull) {

			s.WriteAttributeString("contextConductionInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextConductionInd));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.DetectedIssueManagement != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "detectedIssueManagement", (MARC.Everest.Interfaces.IGraphable)instance.DetectedIssueManagement, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf instance = new MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"MITGT".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "MITGT", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("contextConductionInd") != null) instance.ContextConductionInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextConductionInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "detectedIssueManagement" ) {

			object d2c4310077c9f46eab9d186939f8879ed = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement), currentInteractionType, resultContext); instance.DetectedIssueManagement = d2c4310077c9f46eab9d186939f8879ed is MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement ? d2c4310077c9f46eab9d186939f8879ed as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement : (MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement)MARC.Everest.Connectors.Util.FromWireFormat(d2c4310077c9f46eab9d186939f8879ed, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement));
}
else if(s.LocalName == "realmCode" ) {

			object d97c524296e6e4f1da04c51a7e1db67f0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d97c524296e6e4f1da04c51a7e1db67f0 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d97c524296e6e4f1da04c51a7e1db67f0 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d97c524296e6e4f1da04c51a7e1db67f0, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d76151b5f7d45469cacf8d2a8fd7ff0af = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d76151b5f7d45469cacf8d2a8fd7ff0af is MARC.Everest.DataTypes.II ? d76151b5f7d45469cacf8d2a8fd7ff0af as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d76151b5f7d45469cacf8d2a8fd7ff0af, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d496da09437db4c369125b20e4639f225 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d496da09437db4c369125b20e4639f225 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d496da09437db4c369125b20e4639f225 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d496da09437db4c369125b20e4639f225, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.ContextConductionInd == null || instance.ContextConductionInd.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ContextConductionInd in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da4751682f7fb41e5ba7e8587134aa89d : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ACT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ACT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("moodCode") != null) instance.MoodCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<System.String>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dec153e5d9cef485e82c2e5f2a009b2f9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dec153e5d9cef485e82c2e5f2a009b2f9 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dec153e5d9cef485e82c2e5f2a009b2f9 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dec153e5d9cef485e82c2e5f2a009b2f9, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "realmCode" ) {

			object d748e801833e64480acd72dbbd4a866a4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d748e801833e64480acd72dbbd4a866a4 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d748e801833e64480acd72dbbd4a866a4 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d748e801833e64480acd72dbbd4a866a4, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d2050a4164254485fa51fed509d86e3b5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d2050a4164254485fa51fed509d86e3b5 is MARC.Everest.DataTypes.II ? d2050a4164254485fa51fed509d86e3b5 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d2050a4164254485fa51fed509d86e3b5, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d5de163ef9a4d4dccb4f1fa9fc29a1c56 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d5de163ef9a4d4dccb4f1fa9fc29a1c56 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d5de163ef9a4d4dccb4f1fa9fc29a1c56 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d5de163ef9a4d4dccb4f1fa9fc29a1c56, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.PriorRegisteredAct is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class da324f6c7a56a4ddab0e146830d01149b : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Text != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "text", (MARC.Everest.Interfaces.IGraphable)instance.Text, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement instance = new MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ACT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ACT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("moodCode") != null) instance.MoodCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<System.String>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "code" ) {

			object d991888e965e84dcbb352aaeb2eefa7db = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = d991888e965e84dcbb352aaeb2eefa7db is MARC.Everest.DataTypes.CD<System.String> ? d991888e965e84dcbb352aaeb2eefa7db as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d991888e965e84dcbb352aaeb2eefa7db, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "text" ) {

			object df4a190862e1e491d8e47dfb8bd1e15d8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.Text = df4a190862e1e491d8e47dfb8bd1e15d8 is MARC.Everest.DataTypes.ED ? df4a190862e1e491d8e47dfb8bd1e15d8 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(df4a190862e1e491d8e47dfb8bd1e15d8, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "realmCode" ) {

			object d322560f4cef04c4a9129c3aaa34bdf37 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d322560f4cef04c4a9129c3aaa34bdf37 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d322560f4cef04c4a9129c3aaa34bdf37 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d322560f4cef04c4a9129c3aaa34bdf37, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object ded0f40b2cf1049a6b340c015d6515fdb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = ded0f40b2cf1049a6b340c015d6515fdb is MARC.Everest.DataTypes.II ? ded0f40b2cf1049a6b340c015d6515fdb as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(ded0f40b2cf1049a6b340c015d6515fdb, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d0d488eb505724e02b307fe8cc22e3601 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d0d488eb505724e02b307fe8cc22e3601 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d0d488eb505724e02b307fe8cc22e3601 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d0d488eb505724e02b307fe8cc22e3601, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueManagement is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d2ed4f3c23ad94b50a3aec8008a1a804b : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Role != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "role", (MARC.Everest.Interfaces.IGraphable)instance.Role, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject instance = new MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SBJ".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SBJ", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "role" ) {

			object ded6ceb26e574400a82e53d54ebd4c0e5 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role), currentInteractionType, resultContext); instance.Role = ded6ceb26e574400a82e53d54ebd4c0e5 is MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role ? ded6ceb26e574400a82e53d54ebd4c0e5 as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role : (MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role)MARC.Everest.Connectors.Util.FromWireFormat(ded6ceb26e574400a82e53d54ebd4c0e5, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role));
}
else if(s.LocalName == "realmCode" ) {

			object d3b519bd5bf07444aa4594932e0a15936 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d3b519bd5bf07444aa4594932e0a15936 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d3b519bd5bf07444aa4594932e0a15936 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d3b519bd5bf07444aa4594932e0a15936, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dbc03480d452f4576b5a6cc64855f77da = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dbc03480d452f4576b5a6cc64855f77da is MARC.Everest.DataTypes.II ? dbc03480d452f4576b5a6cc64855f77da as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dbc03480d452f4576b5a6cc64855f77da, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object da374f9f1847646c78874a652dcf7e6b1 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = da374f9f1847646c78874a652dcf7e6b1 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? da374f9f1847646c78874a652dcf7e6b1 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(da374f9f1847646c78874a652dcf7e6b1, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9214a1eadce74b9db11b43cc3e1bbe6c : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.5.111";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role instance = new MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ROL".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ROL", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "code" ) {

			object d7669b2dce3cd47b698419ba97f5d8009 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = d7669b2dce3cd47b698419ba97f5d8009 is MARC.Everest.DataTypes.CE<System.String> ? d7669b2dce3cd47b698419ba97f5d8009 as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d7669b2dce3cd47b698419ba97f5d8009, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "realmCode" ) {

			object dcdd3fe9022954595b4a4198e27e2425f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = dcdd3fe9022954595b4a4198e27e2425f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? dcdd3fe9022954595b4a4198e27e2425f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(dcdd3fe9022954595b4a4198e27e2425f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object deae7f7b69991471cb4c81b25778dd642 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = deae7f7b69991471cb4c81b25778dd642 is MARC.Everest.DataTypes.II ? deae7f7b69991471cb4c81b25778dd642 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(deae7f7b69991471cb4c81b25778dd642, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d0d4130ae08c44a818c157f8da69de535 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d0d4130ae08c44a818c157f8da69de535 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d0d4130ae08c44a818c157f8da69de535 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d0d4130ae08c44a818c157f8da69de535, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Role is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d33eafd744f5c40118d4b5d3bf7f61e88 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("DetectedIssueEvent", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code == null && Host.CreateRequiredElements) { instance.Code = new MARC.Everest.DataTypes.CD<System.String>(); instance.Code.NullFlavor = MARC.Everest.DataTypes.NullFlavor.NoInformation; }
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Text != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "text", (MARC.Everest.Interfaces.IGraphable)instance.Text, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Value != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "value", (MARC.Everest.Interfaces.IGraphable)instance.Value, typeof(MARC.Everest.DataTypes.ANY), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.MitigatedBy != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.MitigatedBy) { retVal = Host.WriteElementUtil(s, "mitigatedBy", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TriggerFor != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.TriggerFor) { retVal = Host.WriteElementUtil(s, "triggerFor", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent instance = new MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ALRT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ALRT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"EVN".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "EVN", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object dedf6e90fab9b47adb511470536077fef = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = dedf6e90fab9b47adb511470536077fef is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? dedf6e90fab9b47adb511470536077fef as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dedf6e90fab9b47adb511470536077fef, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object d94eea38aba3c4bfc87a8c7a93758aea5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = d94eea38aba3c4bfc87a8c7a93758aea5 is MARC.Everest.DataTypes.CD<System.String> ? d94eea38aba3c4bfc87a8c7a93758aea5 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d94eea38aba3c4bfc87a8c7a93758aea5, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "text" ) {

			object d72ab124023914ff7bf2db4ff3d1adfb6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.Text = d72ab124023914ff7bf2db4ff3d1adfb6 is MARC.Everest.DataTypes.ED ? d72ab124023914ff7bf2db4ff3d1adfb6 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(d72ab124023914ff7bf2db4ff3d1adfb6, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "value" ) {

			object dc393827527fb4e1894cde75e26d76fc8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ANY), currentInteractionType, resultContext); instance.Value = dc393827527fb4e1894cde75e26d76fc8 is MARC.Everest.DataTypes.ANY ? dc393827527fb4e1894cde75e26d76fc8 as MARC.Everest.DataTypes.ANY : (MARC.Everest.DataTypes.ANY)MARC.Everest.Connectors.Util.FromWireFormat(dc393827527fb4e1894cde75e26d76fc8, typeof(MARC.Everest.DataTypes.ANY));
}
else if(s.LocalName == "mitigatedBy" ) {

			object ded478373c31b46449b527a96f793d258 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf), currentInteractionType, resultContext); instance.MitigatedBy.Add(ded478373c31b46449b527a96f793d258 is MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf ? (MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf)ded478373c31b46449b527a96f793d258 : (MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf)MARC.Everest.Connectors.Util.FromWireFormat(ded478373c31b46449b527a96f793d258, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.SourceOf)));
}
else if(s.LocalName == "triggerFor" ) {

			object deefdc1dd184242cd9c5be9b482ba9108 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires), currentInteractionType, resultContext); instance.TriggerFor.Add(deefdc1dd184242cd9c5be9b482ba9108 is MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires ? (MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires)deefdc1dd184242cd9c5be9b482ba9108 : (MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires)MARC.Everest.Connectors.Util.FromWireFormat(deefdc1dd184242cd9c5be9b482ba9108, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires)));
}
else if(s.LocalName == "realmCode" ) {

			object db44c29a3bcf0430883fdc83e7b64d09f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = db44c29a3bcf0430883fdc83e7b64d09f is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? db44c29a3bcf0430883fdc83e7b64d09f as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(db44c29a3bcf0430883fdc83e7b64d09f, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d82d789bc708b4af99c2dfb16c0eb81ca = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d82d789bc708b4af99c2dfb16c0eb81ca is MARC.Everest.DataTypes.II ? d82d789bc708b4af99c2dfb16c0eb81ca as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d82d789bc708b4af99c2dfb16c0eb81ca, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d4d43870db5ca48b1bfbbb20146092b3b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d4d43870db5ca48b1bfbbb20146092b3b is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d4d43870db5ca48b1bfbbb20146092b3b as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4d43870db5ca48b1bfbbb20146092b3b, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Code == null) { isValid &= Host.CreateRequiredElements; details.Add(new MARC.Everest.Connectors.RequiredElementMissingResultDetail(isValid ? MARC.Everest.Connectors.ResultDetailType.Warning : MARC.Everest.Connectors.ResultDetailType.Error, "Property Code in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.DetectedIssueEvent is marked 'populated' and isn't assigned (you must at minimum, assign a nullFlavor for this attribute)!", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d698060d09c5140d480cc41f6d5ee744e : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.GTS), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Subject != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Subject) { retVal = Host.WriteElementUtil(s, "subject", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired instance = new MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"ACT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "ACT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
if(s.GetAttribute("moodCode") != null){ if(!"RQO".Equals(s.GetAttribute("moodCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("moodCode"), "RQO", false, s.ToString()));  instance.MoodCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActMood>)); }
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "code" ) {

			object de361a9c5b08847aaac1aac166ec91a1f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.Code = de361a9c5b08847aaac1aac166ec91a1f is MARC.Everest.DataTypes.CE<System.String> ? de361a9c5b08847aaac1aac166ec91a1f as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(de361a9c5b08847aaac1aac166ec91a1f, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "effectiveTime" ) {

			object da924c9084b9347febaafd30c58e81d16 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.GTS), currentInteractionType, resultContext); instance.EffectiveTime = da924c9084b9347febaafd30c58e81d16 is MARC.Everest.DataTypes.GTS ? da924c9084b9347febaafd30c58e81d16 as MARC.Everest.DataTypes.GTS : (MARC.Everest.DataTypes.GTS)MARC.Everest.Connectors.Util.FromWireFormat(da924c9084b9347febaafd30c58e81d16, typeof(MARC.Everest.DataTypes.GTS));
}
else if(s.LocalName == "subject" ) {

			object dc44bdc267f1a418d8f8aa387939ef93b = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject), currentInteractionType, resultContext); instance.Subject.Add(dc44bdc267f1a418d8f8aa387939ef93b is MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject ? (MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject)dc44bdc267f1a418d8f8aa387939ef93b : (MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject)MARC.Everest.Connectors.Util.FromWireFormat(dc44bdc267f1a418d8f8aa387939ef93b, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Subject)));
}
else if(s.LocalName == "realmCode" ) {

			object d3fe1f83b397a40c9b0fba57c87af3e9b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d3fe1f83b397a40c9b0fba57c87af3e9b is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d3fe1f83b397a40c9b0fba57c87af3e9b as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d3fe1f83b397a40c9b0fba57c87af3e9b, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d36a2f64f78af4a44b3a9e671d232a655 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d36a2f64f78af4a44b3a9e671d232a655 is MARC.Everest.DataTypes.II ? d36a2f64f78af4a44b3a9e671d232a655 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d36a2f64f78af4a44b3a9e671d232a655, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object df2aa1dcf98e340ed8fa0bac01363af87 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = df2aa1dcf98e340ed8fa0bac01363af87 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? df2aa1dcf98e340ed8fa0bac01363af87 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(df2aa1dcf98e340ed8fa0bac01363af87, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d102ed198af4048cda4da114490f4d590 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextConductionInd != null && !isInstanceNull) {

			s.WriteAttributeString("contextConductionInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextConductionInd));
}
if(instance.NegationInd != null && !isInstanceNull) {

			s.WriteAttributeString("negationInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.NegationInd));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ActOrderRequired != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "actOrderRequired", (MARC.Everest.Interfaces.IGraphable)instance.ActOrderRequired, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires instance = new MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"TRIG".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "TRIG", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("contextConductionInd") != null) instance.ContextConductionInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextConductionInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("negationInd") != null) instance.NegationInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("negationInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "actOrderRequired" ) {

			object d08aad318cbc140ae8d6a6b3740c8d428 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired), currentInteractionType, resultContext); instance.ActOrderRequired = d08aad318cbc140ae8d6a6b3740c8d428 is MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired ? d08aad318cbc140ae8d6a6b3740c8d428 as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired : (MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired)MARC.Everest.Connectors.Util.FromWireFormat(d08aad318cbc140ae8d6a6b3740c8d428, typeof(MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.ActOrderRequired));
}
else if(s.LocalName == "realmCode" ) {

			object d095819daef4842fd9efc2af74677f4fd = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d095819daef4842fd9efc2af74677f4fd is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d095819daef4842fd9efc2af74677f4fd as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d095819daef4842fd9efc2af74677f4fd, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object dec5e968a0ad04f06889556d01f2257fc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = dec5e968a0ad04f06889556d01f2257fc is MARC.Everest.DataTypes.II ? dec5e968a0ad04f06889556d01f2257fc as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dec5e968a0ad04f06889556d01f2257fc, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d8ec8cc3f663d493ea8a6070f989733e0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d8ec8cc3f663d493ea8a6070f989733e0 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d8ec8cc3f663d493ea8a6070f989733e0 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d8ec8cc3f663d493ea8a6070f989733e0, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires instance = o as MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MCAI_MT900001UV01.Requires is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d502bb123ed0048e2862dd168bb56860e : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextConductionInd != null && !isInstanceNull) {

			s.WriteAttributeString("contextConductionInd", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextConductionInd));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.RegistrationEvent != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "registrationEvent", (MARC.Everest.Interfaces.IGraphable)instance.RegistrationEvent, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> instance = new MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"SUBJ".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "SUBJ", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ActRelationshipType>)); }
			if(s.GetAttribute("contextConductionInd") != null) instance.ContextConductionInd = (MARC.Everest.DataTypes.BL)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextConductionInd"), typeof(MARC.Everest.DataTypes.BL));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "registrationEvent" ) {

			object ddcb06f03ca0c43fa985fd4416df2a152 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>), currentInteractionType, resultContext); instance.RegistrationEvent = ddcb06f03ca0c43fa985fd4416df2a152 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> ? ddcb06f03ca0c43fa985fd4416df2a152 as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>)MARC.Everest.Connectors.Util.FromWireFormat(ddcb06f03ca0c43fa985fd4416df2a152, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.RegistrationEvent<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>));
}
else if(s.LocalName == "realmCode" ) {

			object d2582bda9f6694c1fa6a109c9057e87ff = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d2582bda9f6694c1fa6a109c9057e87ff is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d2582bda9f6694c1fa6a109c9057e87ff as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d2582bda9f6694c1fa6a109c9057e87ff, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d945f4c57df65475b95ee0c16419349f4 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d945f4c57df65475b95ee0c16419349f4 is MARC.Everest.DataTypes.II ? d945f4c57df65475b95ee0c16419349f4 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d945f4c57df65475b95ee0c16419349f4, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object ddc091f206ffc4087806d0dee863dd607 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = ddc091f206ffc4087806d0dee863dd607 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? ddc091f206ffc4087806d0dee863dd607 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(ddc091f206ffc4087806d0dee863dd607, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object> instance = o as MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201310UV02.Patient,System.Object>'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1`2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.ContextConductionInd == null || instance.ContextConductionInd.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ContextConductionInd in MARC.Everest.RMIM.UV.NE2008.MFMI_MT700711UV01.Subject1`2 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d9b18bbc8e1f048f2a4270cd84a786206 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer instance = o as MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.TypeCode != null && !isInstanceNull) {

			s.WriteAttributeString("typeCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.TypeCode));
}
if(instance.ContextControlCode != null && !isInstanceNull) {

			s.WriteAttributeString("contextControlCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ContextControlCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Time != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "time", (MARC.Everest.Interfaces.IGraphable)instance.Time, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AssignedPerson != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "assignedPerson", (MARC.Everest.Interfaces.IGraphable)instance.AssignedPerson, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer instance = new MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("typeCode") != null){ if(!"ENT".Equals(s.GetAttribute("typeCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("typeCode"), "ENT", false, s.ToString()));  instance.TypeCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("typeCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ParticipationType>)); }
			if(s.GetAttribute("contextControlCode") != null) instance.ContextControlCode = (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("contextControlCode"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ContextControl1>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "time" ) {

			object d9bc31242b1a144dc8bd2a2baea6b1d43 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.Time = d9bc31242b1a144dc8bd2a2baea6b1d43 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d9bc31242b1a144dc8bd2a2baea6b1d43 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d9bc31242b1a144dc8bd2a2baea6b1d43, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "assignedPerson" ) {

			object d129703c18aef4c4cb2b6a0117b9cf256 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson), currentInteractionType, resultContext); instance.AssignedPerson = d129703c18aef4c4cb2b6a0117b9cf256 is MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson ? d129703c18aef4c4cb2b6a0117b9cf256 as MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson : (MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson)MARC.Everest.Connectors.Util.FromWireFormat(d129703c18aef4c4cb2b6a0117b9cf256, typeof(MARC.Everest.RMIM.UV.NE2008.COCT_MT090100UV01.AssignedPerson));
}
else if(s.LocalName == "realmCode" ) {

			object de58a0e85f8364dc4b37754026ac2ac73 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = de58a0e85f8364dc4b37754026ac2ac73 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? de58a0e85f8364dc4b37754026ac2ac73 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(de58a0e85f8364dc4b37754026ac2ac73, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object de882319e39534e58b4418adaf6b67597 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = de882319e39534e58b4418adaf6b67597 is MARC.Everest.DataTypes.II ? de882319e39534e58b4418adaf6b67597 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(de882319e39534e58b4418adaf6b67597, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d5d933a71bc2e41bf98564ba1cd96788f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d5d933a71bc2e41bf98564ba1cd96788f is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d5d933a71bc2e41bf98564ba1cd96788f as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d5d933a71bc2e41bf98564ba1cd96788f, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer instance = o as MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.TypeCode == null || instance.TypeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property TypeCode in MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d02f5ac4e85884deb806a1bba632da17f : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck instance = o as MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.QueryId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "queryId", (MARC.Everest.Interfaces.IGraphable)instance.QueryId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.StatusCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "statusCode", (MARC.Everest.Interfaces.IGraphable)instance.StatusCode, typeof(MARC.Everest.DataTypes.CS<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.QueryResponseCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "queryResponseCode", (MARC.Everest.Interfaces.IGraphable)instance.QueryResponseCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryResponse>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ResultTotalQuantity != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "resultTotalQuantity", (MARC.Everest.Interfaces.IGraphable)instance.ResultTotalQuantity, typeof(MARC.Everest.DataTypes.INT), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ResultCurrentQuantity != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "resultCurrentQuantity", (MARC.Everest.Interfaces.IGraphable)instance.ResultCurrentQuantity, typeof(MARC.Everest.DataTypes.INT), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ResultRemainingQuantity != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "resultRemainingQuantity", (MARC.Everest.Interfaces.IGraphable)instance.ResultRemainingQuantity, typeof(MARC.Everest.DataTypes.INT), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck instance = new MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "queryId" ) {

			object dbffc2162e68c458281abaef695b604d3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.QueryId = dbffc2162e68c458281abaef695b604d3 is MARC.Everest.DataTypes.II ? dbffc2162e68c458281abaef695b604d3 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(dbffc2162e68c458281abaef695b604d3, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "statusCode" ) {

			object daa637af6ba8d4e31965c768b976ccb43 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<System.String>), currentInteractionType, resultContext); instance.StatusCode = daa637af6ba8d4e31965c768b976ccb43 is MARC.Everest.DataTypes.CS<System.String> ? daa637af6ba8d4e31965c768b976ccb43 as MARC.Everest.DataTypes.CS<System.String> : (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(daa637af6ba8d4e31965c768b976ccb43, typeof(MARC.Everest.DataTypes.CS<System.String>));
}
else if(s.LocalName == "queryResponseCode" ) {

			object d1b41829cf38c4b5c9460335919f80d52 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryResponse>), currentInteractionType, resultContext); instance.QueryResponseCode = d1b41829cf38c4b5c9460335919f80d52 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryResponse> ? d1b41829cf38c4b5c9460335919f80d52 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryResponse> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryResponse>)MARC.Everest.Connectors.Util.FromWireFormat(d1b41829cf38c4b5c9460335919f80d52, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.QueryResponse>));
}
else if(s.LocalName == "resultTotalQuantity" ) {

			object d8a61b96384234313b87e3e6fb8c452d9 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.INT), currentInteractionType, resultContext); instance.ResultTotalQuantity = d8a61b96384234313b87e3e6fb8c452d9 is MARC.Everest.DataTypes.INT ? d8a61b96384234313b87e3e6fb8c452d9 as MARC.Everest.DataTypes.INT : (MARC.Everest.DataTypes.INT)MARC.Everest.Connectors.Util.FromWireFormat(d8a61b96384234313b87e3e6fb8c452d9, typeof(MARC.Everest.DataTypes.INT));
}
else if(s.LocalName == "resultCurrentQuantity" ) {

			object d74b3e86dbffd4affb5fd3fe8766abcb0 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.INT), currentInteractionType, resultContext); instance.ResultCurrentQuantity = d74b3e86dbffd4affb5fd3fe8766abcb0 is MARC.Everest.DataTypes.INT ? d74b3e86dbffd4affb5fd3fe8766abcb0 as MARC.Everest.DataTypes.INT : (MARC.Everest.DataTypes.INT)MARC.Everest.Connectors.Util.FromWireFormat(d74b3e86dbffd4affb5fd3fe8766abcb0, typeof(MARC.Everest.DataTypes.INT));
}
else if(s.LocalName == "resultRemainingQuantity" ) {

			object d55e7015cc9f04e269c8720e4f2a65516 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.INT), currentInteractionType, resultContext); instance.ResultRemainingQuantity = d55e7015cc9f04e269c8720e4f2a65516 is MARC.Everest.DataTypes.INT ? d55e7015cc9f04e269c8720e4f2a65516 as MARC.Everest.DataTypes.INT : (MARC.Everest.DataTypes.INT)MARC.Everest.Connectors.Util.FromWireFormat(d55e7015cc9f04e269c8720e4f2a65516, typeof(MARC.Everest.DataTypes.INT));
}
else if(s.LocalName == "realmCode" ) {

			object d9b6adab1ae5447398d0a8ddab5f52be8 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = d9b6adab1ae5447398d0a8ddab5f52be8 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? d9b6adab1ae5447398d0a8ddab5f52be8 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d9b6adab1ae5447398d0a8ddab5f52be8, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d6e9361d116c84397ab93cdddaeda2a4e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d6e9361d116c84397ab93cdddaeda2a4e is MARC.Everest.DataTypes.II ? d6e9361d116c84397ab93cdddaeda2a4e as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d6e9361d116c84397ab93cdddaeda2a4e, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object dc5404413bc2948d682a4f827a119b095 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = dc5404413bc2948d682a4f827a119b095 is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? dc5404413bc2948d682a4f827a119b095 as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(dc5404413bc2948d682a4f827a119b095, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck instance = o as MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.QueryResponseCode == null || instance.QueryResponseCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property QueryResponseCode in MARC.Everest.RMIM.UV.NE2008.QUQI_MT120001UV01.QueryAck is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class d709602b666f54289a0bb53d4882d8759 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 instance = o as MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = true; s.WriteStartElement("PRPA_IN201305UV02", "urn:hl7-org:v3");
			s.WriteAttributeString("ITSVersion","XML_1.0");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.CreationTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "creationTime", (MARC.Everest.Interfaces.IGraphable)instance.CreationTime, typeof(MARC.Everest.DataTypes.TS), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SecurityText != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "securityText", (MARC.Everest.Interfaces.IGraphable)instance.SecurityText, typeof(MARC.Everest.DataTypes.ST), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.VersionCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "versionCode", (MARC.Everest.Interfaces.IGraphable)instance.VersionCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.InteractionId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "interactionId", (MARC.Everest.Interfaces.IGraphable)instance.InteractionId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ProfileId != null && !isInstanceNull) {

if(!instance.ProfileId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "profileId", (MARC.Everest.Interfaces.IGraphable)instance.ProfileId, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ProcessingCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "processingCode", (MARC.Everest.Interfaces.IGraphable)instance.ProcessingCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ProcessingModeCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "processingModeCode", (MARC.Everest.Interfaces.IGraphable)instance.ProcessingModeCode, typeof(MARC.Everest.DataTypes.CS<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AcceptAckCode != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "acceptAckCode", (MARC.Everest.Interfaces.IGraphable)instance.AcceptAckCode, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.SequenceNumber != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "sequenceNumber", (MARC.Everest.Interfaces.IGraphable)instance.SequenceNumber, typeof(MARC.Everest.DataTypes.INT), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AttachmentText != null && !isInstanceNull) {

if(!instance.AttachmentText.IsEmpty)
			retVal = Host.WriteElementUtil(s, "attachmentText", (MARC.Everest.Interfaces.IGraphable)instance.AttachmentText, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Receiver != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Receiver) { retVal = Host.WriteElementUtil(s, "receiver", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.RespondTo != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.RespondTo) { retVal = Host.WriteElementUtil(s, "respondTo", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Sender != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "sender", (MARC.Everest.Interfaces.IGraphable)instance.Sender, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AttentionLine != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.AttentionLine) { retVal = Host.WriteElementUtil(s, "attentionLine", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.controlActProcess != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "controlActProcess", (MARC.Everest.Interfaces.IGraphable)instance.controlActProcess, typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 instance = new MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("ITSVersion") != "XML_1.0") 
			throw new System.InvalidOperationException(System.String.Format("This formatter can only parse XML_1.0 structures. This structure claims to be '{0}'.", s.GetAttribute("ITSVersion")));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d43108a379e82402ea6e04dbe7da8f545 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.Id = d43108a379e82402ea6e04dbe7da8f545 is MARC.Everest.DataTypes.II ? d43108a379e82402ea6e04dbe7da8f545 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d43108a379e82402ea6e04dbe7da8f545, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "creationTime" ) {

			object defa1a5ea4d534736b6373eea1be43211 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.TS), currentInteractionType, resultContext); instance.CreationTime = defa1a5ea4d534736b6373eea1be43211 is MARC.Everest.DataTypes.TS ? defa1a5ea4d534736b6373eea1be43211 as MARC.Everest.DataTypes.TS : (MARC.Everest.DataTypes.TS)MARC.Everest.Connectors.Util.FromWireFormat(defa1a5ea4d534736b6373eea1be43211, typeof(MARC.Everest.DataTypes.TS));
}
else if(s.LocalName == "securityText" ) {

			object d374b5659e1b6478497da5663b02240cb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ST), currentInteractionType, resultContext); instance.SecurityText = d374b5659e1b6478497da5663b02240cb is MARC.Everest.DataTypes.ST ? d374b5659e1b6478497da5663b02240cb as MARC.Everest.DataTypes.ST : (MARC.Everest.DataTypes.ST)MARC.Everest.Connectors.Util.FromWireFormat(d374b5659e1b6478497da5663b02240cb, typeof(MARC.Everest.DataTypes.ST));
}
else if(s.LocalName == "versionCode" ) {

			object da6dabf67e4524dfabc704ba788e3972d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode>), currentInteractionType, resultContext); instance.VersionCode = da6dabf67e4524dfabc704ba788e3972d is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode> ? da6dabf67e4524dfabc704ba788e3972d as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode>)MARC.Everest.Connectors.Util.FromWireFormat(da6dabf67e4524dfabc704ba788e3972d, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.HL7StandardVersionCode>));
}
else if(s.LocalName == "interactionId" ) {

			object d8346175e830c469192045cfab4d39bf7 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.InteractionId = d8346175e830c469192045cfab4d39bf7 is MARC.Everest.DataTypes.II ? d8346175e830c469192045cfab4d39bf7 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d8346175e830c469192045cfab4d39bf7, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "profileId" ) {

			object ddc85969d357f4971a02fb01ba1f1ad60 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.ProfileId = ddc85969d357f4971a02fb01ba1f1ad60 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? ddc85969d357f4971a02fb01ba1f1ad60 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(ddc85969d357f4971a02fb01ba1f1ad60, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "processingCode" ) {

			object dde67f4fc639e4decabafcba3c176f1a6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID>), currentInteractionType, resultContext); instance.ProcessingCode = dde67f4fc639e4decabafcba3c176f1a6 is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID> ? dde67f4fc639e4decabafcba3c176f1a6 as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID>)MARC.Everest.Connectors.Util.FromWireFormat(dde67f4fc639e4decabafcba3c176f1a6, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.ProcessingID>));
}
else if(s.LocalName == "processingModeCode" ) {

			object d013dd96908294134ae6b5950808a5e6a = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<System.String>), currentInteractionType, resultContext); instance.ProcessingModeCode = d013dd96908294134ae6b5950808a5e6a is MARC.Everest.DataTypes.CS<System.String> ? d013dd96908294134ae6b5950808a5e6a as MARC.Everest.DataTypes.CS<System.String> : (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(d013dd96908294134ae6b5950808a5e6a, typeof(MARC.Everest.DataTypes.CS<System.String>));
}
else if(s.LocalName == "acceptAckCode" ) {

			object d63dfbdda9f714ced9572d7695ee0d03d = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition>), currentInteractionType, resultContext); instance.AcceptAckCode = d63dfbdda9f714ced9572d7695ee0d03d is MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition> ? d63dfbdda9f714ced9572d7695ee0d03d as MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition> : (MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition>)MARC.Everest.Connectors.Util.FromWireFormat(d63dfbdda9f714ced9572d7695ee0d03d, typeof(MARC.Everest.DataTypes.CS<MARC.Everest.RMIM.UV.NE2008.Vocabulary.AcknowledgementCondition>));
}
else if(s.LocalName == "sequenceNumber" ) {

			object d0089422b362c482790c9a388d1e042cb = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.INT), currentInteractionType, resultContext); instance.SequenceNumber = d0089422b362c482790c9a388d1e042cb is MARC.Everest.DataTypes.INT ? d0089422b362c482790c9a388d1e042cb as MARC.Everest.DataTypes.INT : (MARC.Everest.DataTypes.INT)MARC.Everest.Connectors.Util.FromWireFormat(d0089422b362c482790c9a388d1e042cb, typeof(MARC.Everest.DataTypes.INT));
}
else if(s.LocalName == "attachmentText" ) {

			object d9b1c9c21f3e143a8aca71c63389ad93b = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED>), currentInteractionType, resultContext); instance.AttachmentText = d9b1c9c21f3e143a8aca71c63389ad93b is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED> ? d9b1c9c21f3e143a8aca71c63389ad93b as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED>)MARC.Everest.Connectors.Util.FromWireFormat(d9b1c9c21f3e143a8aca71c63389ad93b, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.ED>));
}
else if(s.LocalName == "receiver" ) {

			object d808e687ca2a14767a01bf73ad9653753 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver), currentInteractionType, resultContext); instance.Receiver.Add(d808e687ca2a14767a01bf73ad9653753 is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver ? (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver)d808e687ca2a14767a01bf73ad9653753 : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver)MARC.Everest.Connectors.Util.FromWireFormat(d808e687ca2a14767a01bf73ad9653753, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Receiver)));
}
else if(s.LocalName == "respondTo" ) {

			object d6e90290d26354be2a5b1fa9b03787025 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo), currentInteractionType, resultContext); instance.RespondTo.Add(d6e90290d26354be2a5b1fa9b03787025 is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo ? (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo)d6e90290d26354be2a5b1fa9b03787025 : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo)MARC.Everest.Connectors.Util.FromWireFormat(d6e90290d26354be2a5b1fa9b03787025, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.RespondTo)));
}
else if(s.LocalName == "sender" ) {

			object d14969b4139994aac817ec85ef32f50ac = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender), currentInteractionType, resultContext); instance.Sender = d14969b4139994aac817ec85ef32f50ac is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender ? d14969b4139994aac817ec85ef32f50ac as MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender)MARC.Everest.Connectors.Util.FromWireFormat(d14969b4139994aac817ec85ef32f50ac, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.Sender));
}
else if(s.LocalName == "attentionLine" ) {

			object d045ea7238ffd4a8096ac3b753cac9f16 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine), currentInteractionType, resultContext); instance.AttentionLine.Add(d045ea7238ffd4a8096ac3b753cac9f16 is MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine ? (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine)d045ea7238ffd4a8096ac3b753cac9f16 : (MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine)MARC.Everest.Connectors.Util.FromWireFormat(d045ea7238ffd4a8096ac3b753cac9f16, typeof(MARC.Everest.RMIM.UV.NE2008.MCCI_MT100200UV01.AttentionLine)));
}
else if(s.LocalName == "controlActProcess" ) {

			object d0864248ed0b347e086cc6dbf1e7af5f8 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter>), currentInteractionType, resultContext); instance.controlActProcess = d0864248ed0b347e086cc6dbf1e7af5f8 is MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter> ? d0864248ed0b347e086cc6dbf1e7af5f8 as MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter> : (MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter>)MARC.Everest.Connectors.Util.FromWireFormat(d0864248ed0b347e086cc6dbf1e7af5f8, typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter>));
}
else if(s.LocalName == "realmCode" ) {

			object de412a47379574142a7f05ea4b2dd7390 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = de412a47379574142a7f05ea4b2dd7390 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? de412a47379574142a7f05ea4b2dd7390 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(de412a47379574142a7f05ea4b2dd7390, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d6785edb5d1504bf280928bdc436d91da = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d6785edb5d1504bf280928bdc436d91da is MARC.Everest.DataTypes.II ? d6785edb5d1504bf280928bdc436d91da as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d6785edb5d1504bf280928bdc436d91da, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d4c859add20a14e95a7779ae8b4c230dc = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d4c859add20a14e95a7779ae8b4c230dc is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d4c859add20a14e95a7779ae8b4c230dc as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d4c859add20a14e95a7779ae8b4c230dc, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 instance = o as MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.Id == null || instance.Id.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Id in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.CreationTime == null || instance.CreationTime.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property CreationTime in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.InteractionId == null || instance.InteractionId.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property InteractionId in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.ProcessingCode == null || instance.ProcessingCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ProcessingCode in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.ProcessingModeCode == null || instance.ProcessingModeCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ProcessingModeCode in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.AcceptAckCode == null || instance.AcceptAckCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property AcceptAckCode in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.Receiver != null && (instance.Receiver.Count > 2147483647 ||  instance.Receiver.Count < 1)) { isValid &= false; details.Add(new MARC.Everest.Connectors.InsufficientRepetionsResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Receiver in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 does not have enough elements in the list, need between 1 and 2147483647 elements!", location));  } 
if(instance.Sender == null || instance.Sender.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property Sender in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.controlActProcess == null || instance.controlActProcess.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property controlActProcess in MARC.Everest.RMIM.UV.NE2008.Interactions.PRPA_IN201305UV02 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
	
	public class db557566f0c224e2b8329734d827de503 : MARC.Everest.Formatters.XML.ITS1.ITypeFormatter {
		
		private MARC.Everest.Connectors.IResultDetail[] details;
		
		private MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter host;
		
		public virtual MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter Host {
			get {
				return host;;
			}
			set {
				host = value;;
			}
		}
		
		public virtual System.Type HandlesType {
			get {
				return typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter>);;
			}
		}
		
		public virtual MARC.Everest.Connectors.ResultCode Graph(System.Xml.XmlWriter s, object o, MARC.Everest.Interfaces.IGraphable context, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterGraphResult resultContext) {
			MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter> instance = o as MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter>;;
			MARC.Everest.Connectors.ResultCode retVal = MARC.Everest.Connectors.ResultCode.Accepted;
			if(o == null) throw new System.ArgumentNullException("o");
			if(instance == null) throw new System.ArgumentException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter>'!", o.GetType().FullName));
			bool isInstanceNull = instance.NullFlavor != null;
			bool isEntryPoint = s is MARC.Everest.Xml.XmlStateWriter && (s as MARC.Everest.Xml.XmlStateWriter).ElementStack.Count == 0 || s.WriteState == System.Xml.WriteState.Start; if(isEntryPoint) s.WriteStartElement("ControlActProcess", "urn:hl7-org:v3");
			if(isEntryPoint) s.WriteAttributeString("xmlns", "xsi", null, MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(instance.NullFlavor != null) this.Host.WriteNullFlavorUtil(s, instance.NullFlavor);
if(instance.ClassCode != null && !isInstanceNull) {

			s.WriteAttributeString("classCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.ClassCode));
}
if(instance.MoodCode != null && !isInstanceNull) {

			s.WriteAttributeString("moodCode", MARC.Everest.Connectors.Util.ToWireFormat(instance.MoodCode));
}
if(instance.RealmCode != null && !isInstanceNull) {

if(!instance.RealmCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "realmCode", (MARC.Everest.Interfaces.IGraphable)instance.RealmCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TypeId != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "typeId", (MARC.Everest.Interfaces.IGraphable)instance.TypeId, typeof(MARC.Everest.DataTypes.II), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.TemplateId != null && !isInstanceNull) {

if(!instance.TemplateId.IsEmpty)
			retVal = Host.WriteElementUtil(s, "templateId", (MARC.Everest.Interfaces.IGraphable)instance.TemplateId, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Id != null && !isInstanceNull) {

if(!instance.Id.IsEmpty)
			retVal = Host.WriteElementUtil(s, "id", (MARC.Everest.Interfaces.IGraphable)instance.Id, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Code != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.Code.CodeSystem) && instance.Code.NullFlavor == null) instance.Code.CodeSystem = "2.16.840.1.113883.1.18";
			retVal = Host.WriteElementUtil(s, "code", (MARC.Everest.Interfaces.IGraphable)instance.Code, typeof(MARC.Everest.DataTypes.CD<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Text != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "text", (MARC.Everest.Interfaces.IGraphable)instance.Text, typeof(MARC.Everest.DataTypes.ED), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.EffectiveTime != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "effectiveTime", (MARC.Everest.Interfaces.IGraphable)instance.EffectiveTime, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.PriorityCode != null && !isInstanceNull) {

if(!instance.PriorityCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "priorityCode", (MARC.Everest.Interfaces.IGraphable)instance.PriorityCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ReasonCode != null && !isInstanceNull) {

if(!instance.ReasonCode.IsEmpty)
			retVal = Host.WriteElementUtil(s, "reasonCode", (MARC.Everest.Interfaces.IGraphable)instance.ReasonCode, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.LanguageCode != null && !isInstanceNull) {

			if((host.Settings & MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing) == MARC.Everest.Formatters.XML.ITS1.SettingsType.AllowSupplierDomainImposing && System.String.IsNullOrEmpty(instance.LanguageCode.CodeSystem) && instance.LanguageCode.NullFlavor == null) instance.LanguageCode.CodeSystem = "";
			retVal = Host.WriteElementUtil(s, "languageCode", (MARC.Everest.Interfaces.IGraphable)instance.LanguageCode, typeof(MARC.Everest.DataTypes.CE<System.String>), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.Overseer != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.Overseer) { retVal = Host.WriteElementUtil(s, "overseer", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.AuthorOrPerformer != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.AuthorOrPerformer) { retVal = Host.WriteElementUtil(s, "authorOrPerformer", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.DataEnterer != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.DataEnterer) { retVal = Host.WriteElementUtil(s, "dataEnterer", ig, typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.InformationRecipient != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.InformationRecipient) { retVal = Host.WriteElementUtil(s, "informationRecipient", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.ReasonOf != null && !isInstanceNull) {

foreach(MARC.Everest.Interfaces.IGraphable ig in instance.ReasonOf) { retVal = Host.WriteElementUtil(s, "reasonOf", ig, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason), context, resultContext); }
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
if(instance.queryByParameter != null && !isInstanceNull) {

			retVal = Host.WriteElementUtil(s, "queryByParameter", (MARC.Everest.Interfaces.IGraphable)instance.queryByParameter, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter), context, resultContext);
			if(resultContext.Code != MARC.Everest.Connectors.ResultCode.Accepted) retVal = resultContext.Code;
}
			if(isEntryPoint) s.WriteEndElement();
			return retVal;
		}
		
		public virtual object Parse(System.Xml.XmlReader s, System.Type useType, System.Type currentInteractionType, MARC.Everest.Formatters.XML.ITS1.XmlIts1FormatterParseResult resultContext) {
			System.String nil = s.GetAttribute("nil", MARC.Everest.Formatters.XML.ITS1.XmlIts1Formatter.NS_XSI);
			if(!System.String.IsNullOrEmpty(nil) && System.Convert.ToBoolean(nil)) return null;;
			MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter> instance = new MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter>();;
			if(s.NodeType != System.Xml.XmlNodeType.Element) throw new System.InvalidOperationException(System.String.Format("Expected node type of Element, actual node type is '{0}'", s.NodeType));
if(s.GetAttribute("classCode") != null){ if(!"CACT".Equals(s.GetAttribute("classCode"))) resultContext.AddResultDetail(new MARC.Everest.Connectors.FixedValueMisMatchedResultDetail(s.GetAttribute("classCode"), "CACT", false, s.ToString()));  instance.ClassCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("classCode"), typeof(MARC.Everest.DataTypes.CS<System.String>)); }
			if(s.GetAttribute("moodCode") != null) instance.MoodCode = (MARC.Everest.DataTypes.CS<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("moodCode"), typeof(MARC.Everest.DataTypes.CS<System.String>));
			if(s.GetAttribute("nullFlavor") != null) instance.NullFlavor = (MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>)MARC.Everest.Connectors.Util.FromWireFormat(s.GetAttribute("nullFlavor"), typeof(MARC.Everest.DataTypes.CS<MARC.Everest.DataTypes.NullFlavor>));
			if(s.IsEmptyElement) return instance;
string sName = s.Name;
int sDepth = s.Depth;
s.Read();
while(!(s.NodeType == System.Xml.XmlNodeType.EndElement && s.Name == sName && s.Depth == sDepth)) {
string oldName = s.LocalName; 
 try { if(s.NodeType == System.Xml.XmlNodeType.Element) { 
 if(s.LocalName == "id" ) {

			object d6821368622a04594bf1fcafdbe03cd90 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.Id = d6821368622a04594bf1fcafdbe03cd90 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> ? d6821368622a04594bf1fcafdbe03cd90 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d6821368622a04594bf1fcafdbe03cd90, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.II>));
}
else if(s.LocalName == "code" ) {

			object de640eb0703e844ffb0ff0dd03c1d9998 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CD<System.String>), currentInteractionType, resultContext); instance.Code = de640eb0703e844ffb0ff0dd03c1d9998 is MARC.Everest.DataTypes.CD<System.String> ? de640eb0703e844ffb0ff0dd03c1d9998 as MARC.Everest.DataTypes.CD<System.String> : (MARC.Everest.DataTypes.CD<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(de640eb0703e844ffb0ff0dd03c1d9998, typeof(MARC.Everest.DataTypes.CD<System.String>));
}
else if(s.LocalName == "text" ) {

			object da8d3dfd643bd433d9e069a07a78952f6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.ED), currentInteractionType, resultContext); instance.Text = da8d3dfd643bd433d9e069a07a78952f6 is MARC.Everest.DataTypes.ED ? da8d3dfd643bd433d9e069a07a78952f6 as MARC.Everest.DataTypes.ED : (MARC.Everest.DataTypes.ED)MARC.Everest.Connectors.Util.FromWireFormat(da8d3dfd643bd433d9e069a07a78952f6, typeof(MARC.Everest.DataTypes.ED));
}
else if(s.LocalName == "effectiveTime" ) {

			object d9decf0fc06bc459cb9ff4161d6254cf6 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>), currentInteractionType, resultContext); instance.EffectiveTime = d9decf0fc06bc459cb9ff4161d6254cf6 is MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> ? d9decf0fc06bc459cb9ff4161d6254cf6 as MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS> : (MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>)MARC.Everest.Connectors.Util.FromWireFormat(d9decf0fc06bc459cb9ff4161d6254cf6, typeof(MARC.Everest.DataTypes.IVL<MARC.Everest.DataTypes.TS>));
}
else if(s.LocalName == "priorityCode" ) {

			object d83b5a1b54a904f84a833ad15fa77e44e = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.PriorityCode = d83b5a1b54a904f84a833ad15fa77e44e is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? d83b5a1b54a904f84a833ad15fa77e44e as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d83b5a1b54a904f84a833ad15fa77e44e, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "reasonCode" ) {

			object d7dedb04273894150aecd68ed2a9039b3 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>), currentInteractionType, resultContext); instance.ReasonCode = d7dedb04273894150aecd68ed2a9039b3 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> ? d7dedb04273894150aecd68ed2a9039b3 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(d7dedb04273894150aecd68ed2a9039b3, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CE<System.String>>));
}
else if(s.LocalName == "languageCode" ) {

			object df0197dd1f3b745eabfd6c9188246775f = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.CE<System.String>), currentInteractionType, resultContext); instance.LanguageCode = df0197dd1f3b745eabfd6c9188246775f is MARC.Everest.DataTypes.CE<System.String> ? df0197dd1f3b745eabfd6c9188246775f as MARC.Everest.DataTypes.CE<System.String> : (MARC.Everest.DataTypes.CE<System.String>)MARC.Everest.Connectors.Util.FromWireFormat(df0197dd1f3b745eabfd6c9188246775f, typeof(MARC.Everest.DataTypes.CE<System.String>));
}
else if(s.LocalName == "overseer" ) {

			object d6ee950f981724c28a6860ca81eb57aa8 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer), currentInteractionType, resultContext); instance.Overseer.Add(d6ee950f981724c28a6860ca81eb57aa8 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer)d6ee950f981724c28a6860ca81eb57aa8 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer)MARC.Everest.Connectors.Util.FromWireFormat(d6ee950f981724c28a6860ca81eb57aa8, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Overseer)));
}
else if(s.LocalName == "authorOrPerformer" ) {

			object d20c9cb495a45498da14d250eb4fbef5d = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer), currentInteractionType, resultContext); instance.AuthorOrPerformer.Add(d20c9cb495a45498da14d250eb4fbef5d is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer)d20c9cb495a45498da14d250eb4fbef5d : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer)MARC.Everest.Connectors.Util.FromWireFormat(d20c9cb495a45498da14d250eb4fbef5d, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.AuthorOrPerformer)));
}
else if(s.LocalName == "dataEnterer" ) {

			object da7d82b0c78564cd6951499d42a40d696 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer), currentInteractionType, resultContext); instance.DataEnterer.Add(da7d82b0c78564cd6951499d42a40d696 is MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer ? (MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer)da7d82b0c78564cd6951499d42a40d696 : (MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer)MARC.Everest.Connectors.Util.FromWireFormat(da7d82b0c78564cd6951499d42a40d696, typeof(MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.DataEnterer)));
}
else if(s.LocalName == "informationRecipient" ) {

			object d3f518c2c030b42a9812393cc77aaf7a0 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient), currentInteractionType, resultContext); instance.InformationRecipient.Add(d3f518c2c030b42a9812393cc77aaf7a0 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient)d3f518c2c030b42a9812393cc77aaf7a0 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient)MARC.Everest.Connectors.Util.FromWireFormat(d3f518c2c030b42a9812393cc77aaf7a0, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.InformationRecipient)));
}
else if(s.LocalName == "reasonOf" ) {

			object d94bfe60f219e4c61b863997e363bd744 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason), currentInteractionType, resultContext); instance.ReasonOf.Add(d94bfe60f219e4c61b863997e363bd744 is MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason ? (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason)d94bfe60f219e4c61b863997e363bd744 : (MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason)MARC.Everest.Connectors.Util.FromWireFormat(d94bfe60f219e4c61b863997e363bd744, typeof(MARC.Everest.RMIM.UV.NE2008.MFMI_MT700701UV01.Reason)));
}
else if(s.LocalName == "queryByParameter" ) {

			object df90153d7a1d449788261242d9a612f03 = Host.ParseObject(s, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter), currentInteractionType, resultContext); instance.queryByParameter = df90153d7a1d449788261242d9a612f03 is MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter ? df90153d7a1d449788261242d9a612f03 as MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter : (MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter)MARC.Everest.Connectors.Util.FromWireFormat(df90153d7a1d449788261242d9a612f03, typeof(MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter));
}
else if(s.LocalName == "realmCode" ) {

			object df05e71ba7520478d8e7d9840ae9aa7f5 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>), currentInteractionType, resultContext); instance.RealmCode = df05e71ba7520478d8e7d9840ae9aa7f5 is MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> ? df05e71ba7520478d8e7d9840ae9aa7f5 as MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>> : (MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>)MARC.Everest.Connectors.Util.FromWireFormat(df05e71ba7520478d8e7d9840ae9aa7f5, typeof(MARC.Everest.DataTypes.SET<MARC.Everest.DataTypes.CS<System.String>>));
}
else if(s.LocalName == "typeId" ) {

			object d83bccb1999394204a6e1fc4e72b77c92 = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.II), currentInteractionType, resultContext); instance.TypeId = d83bccb1999394204a6e1fc4e72b77c92 is MARC.Everest.DataTypes.II ? d83bccb1999394204a6e1fc4e72b77c92 as MARC.Everest.DataTypes.II : (MARC.Everest.DataTypes.II)MARC.Everest.Connectors.Util.FromWireFormat(d83bccb1999394204a6e1fc4e72b77c92, typeof(MARC.Everest.DataTypes.II));
}
else if(s.LocalName == "templateId" ) {

			object d17342fa632db47f6a218c501641e006c = Host.ParseObject(s, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>), currentInteractionType, resultContext); instance.TemplateId = d17342fa632db47f6a218c501641e006c is MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> ? d17342fa632db47f6a218c501641e006c as MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II> : (MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>)MARC.Everest.Connectors.Util.FromWireFormat(d17342fa632db47f6a218c501641e006c, typeof(MARC.Everest.DataTypes.LIST<MARC.Everest.DataTypes.II>));
}
else { resultContext.AddResultDetail(new MARC.Everest.Connectors.NotImplementedElementResultDetail(MARC.Everest.Connectors.ResultDetailType.Warning, s.LocalName, s.NamespaceURI, s.ToString(), null)); }
}
}
catch (System.Exception e) { resultContext.AddResultDetail(new MARC.Everest.Connectors.ResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, e.Message, s.ToString(), e)); }
finally { if(oldName.Equals(s.LocalName)) s.Read(); } }
			return instance;
		}
		
		public virtual bool Validate(MARC.Everest.Interfaces.IGraphable o, string location, out MARC.Everest.Connectors.IResultDetail[] outDetails) {
			MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter> instance = o as MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter>;;
			outDetails = new MARC.Everest.Connectors.IResultDetail[0]; System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail> details = new System.Collections.Generic.List<MARC.Everest.Connectors.IResultDetail>(10);;
			bool isValid = true;;
			if(instance == null && o != null) throw new System.NullReferenceException(System.String.Format("Could not cast type '{0}' to 'MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess<MARC.Everest.RMIM.UV.NE2008.PRPA_MT201306UV02.QueryByParameter>'!", o.GetType().FullName));if(instance == null || instance.NullFlavor != null) return true;if(instance.ClassCode == null || instance.ClassCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property ClassCode in MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess`1 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
if(instance.MoodCode == null || instance.MoodCode.NullFlavor != null) { isValid &= false; details.Add(new MARC.Everest.Connectors.MandatoryElementMissingResultDetail(MARC.Everest.Connectors.ResultDetailType.Error, "Property MoodCode in MARC.Everest.RMIM.UV.NE2008.QUQI_MT021001UV01.ControlActProcess`1 is marked mandatory and is either not assigned, or is assigned a null flavor. This is not permitted.", location));  } 
;
			outDetails = details.ToArray();;
			return isValid;;
		}
	}
}
