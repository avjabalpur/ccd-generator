<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="tmrUpdateUI.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wCMieYAg4DLALe05AB/VYYAv5zCAAAAAABzk+4AGkfZAAAz
        /wAAMfwABDb/AJOp/wBWZa4Ak6PuAAMj0gCbp+oAABrOAHqDvQApKUYA4ODgAN7e3gDW1tYA1NTUAM/P
        zwDNzc0Ay8vLAMjIyADHx8cAxMTEAMPDwwC8vLwAubm5ALe3twCrq6sAqKioAKenpwCcnJwAmZmZAFlZ
        WQBXV1cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBwcHBwcHBwcHFAUFBwcHBwcHBwcHBwcHFAUGBgkHBwcHBwcH
        BwcHFBACEgMJBwcHBwcHBwcHFBANDBIECQcHBwcHBwcHFBANChIRCQcHBwcHBwcHFBANChIPCQcHBwcH
        BwcHFBANChIPCQcHBwcHBygoKBANChIPCQcHBwcHBygoIycTCxIPCQcHBwcHBygoJiEeJA4ICQcHBwcH
        BwcoIxodHxklKAcHBwcHBwcHKBYoKCIXICgHBwcHBwcHBygoBycoFhwoBwcHBwcHBwcoBycoGBUoJwcH
        BwcHBwcHBwcoGxspKAcHBwcHBwcHBwcjKCgoJwcHBwcHBwcHBwf/4wAA/8EAAP+BAAD/AQAA/gMAAPwH
        AAD4DwAAwB8AAIA/AAAAfwAAAP8AAAD/AAAg/wAAQP8AAMH/AACD/wAAKAAAABAAAAAgAAAAAQAgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAsAAAA7AAAAdwAAAI8AAAB8AAAARAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAsAAAA7KSlG/39Vhv9/VYb/DQ0NwwAAAHwAAAAlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAsAAAA7KSlG/39Vhv+/nML/v5zC/xpH2f8AAACPAAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAsAAAA7KSlG/wMj0v+Mieb/ABrO/4OAy/8aR9n/AAAAdwAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAsAAAA7KSlG/wMj0v+Tqf//BDb//wAazv+3tOT/GkfZ/wAAADsAAAALAAAAAAAAAAAAAAAEAAAAEwAA
        ACcAAABHKSlG/wMj0v+Tqf//ADP//wAazv+bp+r/GkfZ/wAAADsAAAALAAAAAAAAAAEAAAANAAAAKwAA
        AFYAAAB/KSlG/wMj0v+Tqf//ADP//wAazv+To+7/GkfZ/wAAADsAAAALAAAAAAAAAAAAAAAHAAAAMhkZ
        GaFZWVn/WVlZ/wMj0v+Tqf//ADP//wAazv+To+7/GkfZ/wAAADsAAAALAAAAAAAAAAAAAAAAFRUVJllZ
        Wf9ZWVn/q6ur/5mZmf96g73/ADH8/wAazv+To+7/GkfZ/wAAADsAAAALAAAAAAAAAAAAAAAAAAAAACws
        LJRZWVn/nJyc/7m5uf/ExMT/qKio/1Zlrv9zk+7/GkfZ/wAAAEcAAAALAAAAAAAAAAAAAAAAAAAAAAAA
        AABZWVn/q6ur/83Nzf/Hx8f/w8PD/8/Pz/+np6f/WVlZ/wAAAI8AAAAvAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWVlZ/97e3v9ZWVn/WVlZ/7e3t//W1tb/vLy8/1lZWf8AAAB/AAAAKAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFlZWf9ZWVn/AAAAUDIyMptZWVn/3t7e/8jIyP9ZWVn/AAAAWAAAABQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABZWVn/AAAAGzo6OoVZWVn/1NTU/+Dg4P9ZWVn/HBwcpwAAACwAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdZWVn/y8vL/8vLy/9XV1f/WVlZ/wAAAC8AAAALAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxMTFTWVlZ/1lZWf9ZWVn/LCwslAAAABcAAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/gAcH/wAHB/4ABxT8AAcH+AAHB8ABBwcAAxQFAAcJBwAP
        BwcAHwcHAD8QAgA/CQcAPwcHAD8HB4B/DQyA/wkH
</value>
  </data>
</root>