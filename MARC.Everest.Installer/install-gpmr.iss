; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

; This install script requires the installsupp.7z file to be extracted in the parent directory to this file.
; For example: If this script is in C:\test\install\ then the files should be extracted to C:\test\installsupp

#define INCLUDE_TOOLS

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{A21E1269-8CDE-43CD-B179-2B6674413080}
AppName=MARC-HI Everest Framework
AppVerName=MARC-HI Everest Framework 1.2 GPMR Only
OutputBaseFilename=everest-gpmr
;InfoBeforeFile=.\installsupp\release\AUG-CTP-2010.txt
LicenseFile=..\License.rtf
AppPublisher=Mohawk College of Applied Arts and Technology
AppPublisherURL=http://marc.mohawkcollege.ca/hi
AppSupportURL=http://marc.mohawkcollege.ca/hi
AppUpdatesURL=http://marc.mohawkcollege.ca/hi
DefaultDirName={pf}\Mohawk College\Everest
DefaultGroupName=Mohawk College\Everest
AllowNoIcons=yes
OutputDir=..\dist
;SetupIconFile=D:\work\appicon.ico
Compression=lzma/ultra
SolidCompression=no
AppCopyright=Copyright (C) 2008-2013, Mohawk College of Applied Arts and Technology
WizardImageFile=install-logo.bmp
WizardSmallImageFile=install-logo-small.bmp

[Languages]
Name: english; MessagesFile: compiler:Default.isl

[Files]
Source: .\installsupp\netfx\dotNetFx35setup.exe; DestDir: {tmp} ; Flags: dontcopy
Source: ..\gpmr\bin\Release\MohawkCollege.Util.Console.Writer.xml; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\gpmr.exe; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\MohawkCollege.EHR.gpmr.Pipeline.Renderer.Deki\Resources\Clean.xml; DestDir: {app}\templates; Flags: ignoreversion; 
Source: ..\gpmr\MohawkCollege.EHR.gpmr.Pipeline.Renderer.Deki\Resources\Classic.xml; DestDir: {app}\templates; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\xsl\*.xsl*; DestDir: {app}\xsl; Flags: ignoreversion recursesubdirs; 
Source: ..\gpmr\bin\Release\xsl\*.txt*; DestDir: {app}\xsl; Flags: ignoreversion recursesubdirs; 
Source: ..\gpmr\bin\Release\gpmr.exe.config; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.gpmr.COR.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.gpmr.Pipeline.Compiler.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.gpmr.Pipeline.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.gpmr.Pipeline.Renderer.Deki.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.gpmr.Pipeline.Renderer.RimbaCS.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.gpmr.Pipeline.Renderer.XML.ITS.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.Util.SimpleXSD.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.gpmr.Pipeline.Triggers.CorCollapser.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.gpmr.Pipeline.Triggers.CorDelta.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.HL7v3.MIF.MIF20.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.Util.Console.Parameters.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.Util.Console.Parameters.xml; DestDir: {app}; Flags: ignoreversion; 
Source: ..\gpmr\bin\Release\MohawkCollege.Util.Console.Writer.dll; DestDir: {app}; Flags: ignoreversion; 
Source: ..\MARC.Everest\bin\Release\MARC.Everest.dll; StrongAssemblyName: MARC.Everest; DestDir: {app}; Flags: ignoreversion; 
Source: ..\MARC.Everest\bin\Release\MARC.Everest.xml; DestDir: {app}; Flags: ignoreversion; 
Source: .\installsupp\sample\gpmrvarsall.bat; DestDir: {app};
Source: ..\gpmr\gpmrw\bin\Release\gpmrw.exe; DestDir: {app}; Flags: ignoreversion;
Source: ..\gpmr\gpmrw\bin\Release\gpmrw.exe.config; DestDir: {app}; Flags: ignoreversion;
Source: ..\gpmr\bin\Release\MohawkCollege.EHR.gpmr.Pipeline.Renderer.Java.dll; DestDir: {app}; Flags: ignoreversion;
Source: ..\gpmr\bin\Release\Data\*.*; DestDir: {app}\Data; Flags: ignoreversion;
Source: ..\MARC.Everest.VisualStudio.Wizards\bin\Release\MARC.Everest.VisualStudio.Wizards.dll; StrongAssemblyName:"MARC.Everest.VisualStudio.Wizards, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=b2fb2479f9679b57"; Flags:gacinstall ignoreversion; DestDir:{app}\lib;
Source: ..\Solution Items\org.marc.everest.jar; DestDir: {app}\lib; Flags: ignoreversion;

[Icons]
Name: {group}\GPMR Command Prompt; FileName:cmd; Parameters:"/k """"{app}\gpmrvarsall.bat"" ""{app}"""""; 
Name: {group}\GPMR Wizard; FileName:{app}\gpmrw; 
Name: {group}\{cm:UninstallProgram,Everest}; Filename: {uninstallexe}

[Code]
var
  dotnetRedistPath: string;
  downloadNeeded, needsUninstall: boolean;
  dotNetNeeded: boolean;
  memoDependenciesNeeded: string;
	lblSelectMode:	TLabel;
  rdoTypical, rdoCustom: TRadioButton;
  chkBox : TCheckBox;
  uninstallPageId : integer;

const
  dotnetRedistURL = '{tmp}\dotNetFx35setup.exe';
  // local system for testing...
  // dotnetRedistURL = 'http://192.168.1.1/dotnetfx.exe';

function CurrentDateShort(Param:String): String;
begin
  result := Uppercase(GetDateTimeString('MMM-yyyy', #0, #0));
end;

function CurrentDate(Param:String): String;
begin
  result := GetDateTimeString('yyyymmdd', #0, #0);
end;

function InitializeSetup(): Boolean;

begin
  Result := true;
  dotNetNeeded := false;
  // CTP SEP 2009
  needsUninstall := RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{A21E1269-8CDE-43CD-B179-2B6674413077}_is1'); 
  // CTP OCT 2009
  needsUninstall := needsUninstall or RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{A21E1269-8CDE-43CD-B179-2B6674413078}_is1');
  // CTP JAN 2010
  needsUninstall := needsUninstall or RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{A21E1269-8CDE-43CD-B179-2B6674413079}_is1');
  // Check for required netfx installation
  //if (not GetUserDefaultLangID() = 'English') then begin

        //msgbox('Language Is Not English');

  //end;

  if (not DirExists(ExpandConstant('{win}\Microsoft.NET\Framework\v3.5'))) then begin
    dotNetNeeded := true;
    if (not IsAdminLoggedOn()) then begin
      MsgBox('GPMR needs the Microsoft .NET Framework 3.5 to be installed by an Administrator', mbInformation, MB_OK);
      Result := false;
    end else begin
      memoDependenciesNeeded := memoDependenciesNeeded + '      .NET Framework 3.5' #13;
      dotnetRedistPath := ExpandConstant('{tmp}\dotNetFx35setup.exe');

    end;
  end;

end;

function PrepareToInstall(var needsRestart:Boolean): String;
var
  hWnd: Integer;
  ResultCode : integer;
  uninstallString : string;
begin
     Result := '';

     hWnd := StrToInt(ExpandConstant('{wizardhwnd}'));

     EnableFsRedirection(true);
     
     // Should we uninstall the old?
     if(needsUninstall) then
     (*if((chkBox.Checked)) then begin
         needsUninstall := RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{A21E1269-8CDE-43CD-B179-2B6674413077}_is1', 'UninstallString', uninstallString);
         if(not(needsUninstall)) then
			needsUninstall := RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{A21E1269-8CDE-43CD-B179-2B6674413078}_is1', 'UninstallString', uninstallString);
		if(needsUninstall) then begin
            // Replace
            while(Pos('"',uninstallString) > 0) do begin
              Delete(uninstallString, Pos('"',uninstallString), 1);
            end;

           if(Exec(ExpandConstant(uninstallString), '/silent', '', SW_SHOW, ewWaitUntilTerminated, ResultCode)) then begin

             if not (ResultCode = 0) then begin
              Result := 'Couldn''t uninstall old version of MARC-HI Everest';
             end;
             end
             else begin
              Result := 'Couldn''t launch the Everest uninstall';
            end;
         end;
     end;
  *)
    if (Result = '') and (dotNetNeeded = true) then begin

    ExtractTemporaryFile('dotNetFx35setup.exe')
    if Exec(ExpandConstant(dotnetRedistPath), '/passive /norestart', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then begin
        // handle success if necessary; ResultCode contains the exit code
        if not (ResultCode = 0) then begin
          Result := '.NET Framework 3.5 is Required';
        end;
      end else begin
        // handle failure if necessary; ResultCode contains the error code
          Result := '.NET Framework 3.5 is Required';
      end;
    end;
end;

function UpdateReadyMemo(Space, NewLine, MemoUserInfoInfo, MemoDirInfo, MemoTypeInfo, MemoComponentsInfo, MemoGroupInfo, MemoTasksInfo: String): String;
var
  s: string;

begin
  if memoDependenciesNeeded <> '' then s := s + 'Dependencies that will be automatically downloaded And installed:' + NewLine + memoDependenciesNeeded + NewLine;
  (*if(needsUninstall) then
    if(chkBox.Checked) then
      s := s + 'Uninstall Old Frameworks' + NewLine + '       Uninstall Sepember CTP of MARC-HI Everest' + NewLine;
    *)
  s := s + MemoDirInfo + NewLine;

  Result := s
end;


// Custom Form has become active
procedure CustomForm_Activate(Page: TWizardPage);
begin
end;

// Should the custom form be skipped
function ShouldSkipPage(Page:Integer) : Boolean;
begin
  if((Page = wpSelectComponents) and rdoTypical.Checked) then begin
    Result := true;
  end
  else begin
  	Result := false;
  end;
end;

// Back click supported on the custom form
function CustomForm_BackButtonClick(Page: TWizardPage): Boolean;
begin
	Result := true;
end;

// When the next button is clicked
function CustomForm_NextButtonClick(Page: TWizardPage): Boolean;
var
  SelectedComponents:String;
begin
  // Todo: Skip the select components
  SelectedComponents := WizardSelectedComponents(false);
  Result := true;
end;

/// When the cancel button is clicked
procedure CustomForm_CancelButtonClick(Page: TWizardPage; var Cancel, Confirm:Boolean);
begin
end;


// Create the custom page
function CustomForm_CreatePage(PreviousPageId: Integer) : Integer;
var
	Page: TWizardPage;
	
begin
	Page := CreateCustomPage( PreviousPageId, ExpandConstant('Select Install Method'), ExpandConstant('Please choose the options you would like installed'));
	lblSelectMode := TLabel.Create(Page);
	with lblSelectMode do begin
		Parent := Page.Surface;
		Caption := ExpandConstant('Please select the type of installation you wish to perform');
		Left := ScaleX(30);
		Top := ScaleY(16);
		Width := ScaleX(341);
		Height := ScaleY(52);
	end;

	rdoTypical := TRadioButton.Create(Page);
	rdoCustom := TRadioButton.Create(Page);
	with rdoTypical do begin
		Parent := Page.Surface;
		Caption := 'Typical Install (min 281 MB - Recommended)';
		Left := ScaleX(40);
		Top := ScaleY(66);
		Width := ScaleX(341);
		Height := ScaleY(21);
		TabOrder := 0;
		Checked := true;
	end;
	with rdoCustom do begin
		Parent := Page.Surface;
		Caption := 'Custom Install (min 4 MB)';
		Left := ScaleX(40);
		Top := ScaleY(88);
		Width := ScaleX(341);
		Height := ScaleY(21);
		TabOrder := 0;
	end;

	with Page do begin
		OnActivate := @CustomForm_Activate;
		OnBackButtonClick := @CustomForm_BackButtonClick;
		OnNextButtonClick := @CustomForm_NextButtonClick;
		OnCancelButtonClick := @CustomForm_CancelButtonClick;
	end;

	Result := Page.ID;
end;

function UninstallForm_CreatePage(PreviousPageId : Integer) : Integer  ;
var
  Page : TWizardPage;
  lblDescription : TLabel;
begin
  Page := CreateCustomPage( PreviousPageId, ExpandConstant('Uninstall Previous Versions'), ExpandConstant('Setup has detected previous versions of the Everest Framework'));
  
  // Select mode
  lblSelectMode := TLabel.Create(Page);
	with lblSelectMode do begin
		Parent := Page.Surface;
		Caption := ExpandConstant('Setup has detected previous versions of the MARC-HI Everest Framework'  + #13 + #10);
		Caption := Caption + ExpandConstant('which should be removed before installing this version');
		Left := ScaleX(25);
		Top := ScaleY(16);
		Width := ScaleX(354);
		Height := ScaleY(52);
	end;
	
	// Check to uninstall
	chkBox := TCheckBox.Create(Page);
	with chkBox do begin
		Parent := Page.Surface;
		Caption := ExpandConstant('Uninstall previous versions of MARC-HI Everest (Recommended)');
		Left := ScaleX(40);
		Top := ScaleY(78);
		Width := ScaleX(348);
		Height := ScaleY(52);
		Checked := true;
	end;
	
	Result := Page.ID;
end;

procedure InitializeWizard();
begin
	(*CustomForm_CreatePage(wpSelectDir);*)
	(*if(needsUninstall) then
  	uninstallPageId := UninstallForm_CreatePage(wpWelcome);*)
  	
end;
